{"version":3,"sources":["assets/clikrlogo2.png","assets/clikrlogo.png","assets/background.jpeg","config/serviceWorker.js","components/SideMenuBar/index.jsx","constants/api.js","utils/api-facade.js","services/APIProfService.js","components/TopMenuBar/index.jsx","models/LectureObj.js","stores/ProfessorStore.js","components/AddStudentsModal/index.jsx","components/DuplicateCourseModal/index.jsx","components/CourseListItemNavEdit/index.jsx","components/ListOfAllCourses/index.jsx","components/DeleteCoursesList/index.jsx","components/AllCoursesFrame/index.jsx","components/ListOfArchivedCourses/index.jsx","components/ArchivedCoursesFrame/index.jsx","routes/Professor/ProfessorHome/index.jsx","models/CourseObj.js","routes/Professor/NewCourse/index.jsx","components/EditLectureDialog/index.jsx","components/LectListItemNavEdit/index.jsx","components/ListOfAllLectures/index.jsx","components/CourseInfo/index.jsx","components/DeleteLecturesList/index.jsx","components/AllLecturesFrame/index.jsx","routes/Professor/ViewLectures/index.jsx","components/AddQuestionModal/index.jsx","components/OpenClosedButton/index.jsx","components/BaseStatsComponent/index.jsx","components/MCQuestionStats/index.jsx","components/FreeTextStats/index.jsx","components/SliderStats/index.jsx","components/ViewStatsModal/index.jsx","models/QuestionObj.js","components/EditFRQDialog/index.jsx","components/EditMCQDialog/index.jsx","components/EditSLQDialog/index.jsx","components/QuestionListItem/index.jsx","components/DeleteQuestionsList/index.jsx","components/AllQuestionsFrame/index.jsx","routes/Professor/ViewQuestions/index.jsx","routes/Professor/AddMCQuestion/index.jsx","routes/Professor/AddFreeTextQuestion/index.jsx","routes/Professor/AddSliderQuestion/index.jsx","routes/Professor/AddLecture/index.jsx","components/NoMatch/index.jsx","routes/Professor/index.jsx","stores/StudentStore.js","services/APIStudentService.js","components/Student/StudentClassCards/index.js","components/Student/Buttons/LogoutButton/index.js","components/Student/LoggedinHeader/index.js","components/Student/AddCourseDialog/index.jsx","services/SocketIOStudentService.js","routes/Student/StudentHome/index.js","components/Student/Questions/FRQ/index.js","components/Student/Questions/MCQ/index.js","components/Student/Questions/SLQ/index.jsx","components/Student/Questions/PrevMCQ/index.js","components/Student/Questions/PrevFRQ/index.js","components/Student/Questions/PrevSLQ/index.jsx","routes/Student/StudentQuestionPage/index.js","routes/Student/CheckQuestions/index.js","routes/Student/index.jsx","routes/Home/index.jsx","routes/Login/index.jsx","routes/app.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","SideMenuBar","inject","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","selectedCourse","selectedLecture","styles","classes","profStore","undefined","pathname","length","url_parts_arr","split","setState","getLectureWithId","course_id","id","history","push","_this2","courses","filter","courseObj","is_current","react_default","a","createElement","Grid_default","container","direction","justify","alignItems","Drawer_default","className","drawer","variant","paper","drawerPaper","anchor","item","src","logo","alt","height","Divider_default","List_default","map","index","lectures","getCourseLectures","key","ListItem_default","hover","button","onClick","handleCourseClick","selected","ListItemText_default","disableTypography","primary","Typography_default","type","listtext","title","secondary","listsubtext","term","year","ListItemSecondaryAction_default","IconButton_default","color","disabled","handleExpand","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","lectureObj","innerIndex","handleLectureClick","nestedListtext","React","Component","withRouter","withStyles","theme","width","flexShrink","palette","main","dark","titletext","paddingTop","spacing","unit","paddingLeft","backgroundColor","&:hover","toolbar","mixins","windowSplit","href","socketioURL","baseURL","getStudentCoursesAPI","axios","get","postEnrollStudentAPI","code","post","enroll_code","postAnswerQuestionAPI","answer","question_id","defaults","withCredentials","APIProfService","professorStore","then","res","data","name","catch","error","console","log","_checkAuth","archiveCourseAPI","updateCourseData","course","message","_this3","duplicateCourseAPI","lecture_id","_this4","exportGradesLectureAPI","_this5","exportGradesCourseAPI","_this6","dataLoaded","Promise","updateData","_this7","updateAllCourseData","_this8","getProfAnswers","_this9","getQuestionsForLectureAPI","_this10","action","postOpenQuestionAPI","openQuestion","_this11","postCloseQuestionAPI","closeQuestion","_this12","postCloseAllQuestionsAPI","closeAllQuestionsForLecture","lecture","_this13","date","description","open_date","openDate","close_date","closeDate","scheduled","postNewLectureAPI","newLec","find","questions","addLecture","_this14","dept","coursenum","num","postNewCourseAPI","newCourse","addCourse","_this15","delete","removeCourse","loadData","courseId","courseTitle","course_title","_this16","patch","updateCourse","_this17","patchUpdateCourseDataAPI","_this18","updateLecture","questionObj","question","_this19","question_type","question_title","question_image","correct_answer","option1","option2","option3","option4","option5","number_of_options","word_limit","lower_label","upper_label","updateQuestion","_this20","removeLecture","parentLectureId","_this21","removeQuestion","_this22","creator_id","postNewQuestionAPI","newQ","q","addQuestion","_this23","response","status","replace","TopMenuBar","anchorEl","goHome","logout","userName","handleMenu","event","currentTarget","handleClose","handleLogout","handleHome","store","apiProfService","getName","getLogoutProf","Redirect","to","AppBar_default","position","appBar","Toolbar_default","homeButton","SvgIcon_default","fill","d","style","float","marginRight","align","aria-haspopup","viewBox","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","defineProperty","breakpoints","up","marginLeft","concat","LectureObj","ProfessorStore","x","QuestionObj","lec","slice","sort","b","created_at","oldCourse","oldLecture","getLectureById","remove","parent_lecture_id","keys","_i","is_open","opened_at","Date","now","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","return","_courses","observable","AddStudentsModal","handleOpen","handleSubmit","joinCode","nextProps","Tooltip_default","placement","PersonAdd_default","Modal_default","aria-labelledby","aria-describedby","top","left","transform","gutterBottom","Button_default","AddStudentsModalWrapped","background","boxShadow","shadows","padding","display","flexWrap","textField","dense","marginTop","menu","DuplicateCourseModal","newYear","newTerm","handleChange","_event$target","target","duplicateCourse","FileCopy_default","onSubmit","noValidate","autoComplete","TextField_default","label","isNaN","onChange","margin","helperText","DuplicateCourseModalWrapped","flexDirection","CourseListItemNavEdit","editMode","newTitle","nav","courseYear","courseTerm","courseCode","toHome","handleEdit","handleEditOpen","handleEditClose","changeCourseTitle","handleToCourse","handleArchive","archiveCourse","handleExportGrades","exportGradesCourse","element","document","file","Blob","fileData","URL","createObjectURL","download","fileName","body","appendChild","click","divider","FormControl_default","InputBase_default","e","input","bootstrapInput","Done_default","iconDone","ImportExport_default","components_AddStudentsModal","Edit_default","components_DuplicateCourseModal","archive","Unarchive_default","Archive_default","light","iconEdit","borderRadius","common","white","border","fontSize","transition","transitions","create","fontFamily","join","&:focus","borderColor","ListOfAllCourses","referrerCourseId","courseList","components_CourseListItemNavEdit","card","minWidth","DeleteCoursesList","referrerLectureId","delCourses","checked","getDeletions","shouldDelete","forEach","fullWidth","FormGroup_default","c","FormControlLabel_default","control","Checkbox_default","checkBox","AllCoursesFrame","toNewCourse","deleteMode","deletions","delTitles","delIds","handleNewCourseClick","handleDelete","courseArr","i","handleFinalDeletion","deleteCourses","list","components_ListOfAllCourses","deleteAction","components_DeleteCoursesList","Card_default","CardContent_default","bind","Delete_default","Icon_default","icon","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","ListOfArchivedCourses","ArchivedCoursesFrame","showArchive","prevState","objectSpread","components_ListOfArchivedCourses","titleString","delButton","containerDiv","handleToggleArchive","ProfessorHome","components_AllCoursesFrame","components_ArchivedCoursesFrame","CourseObj","ProfessorNewCourse","formValid","yearValid","titleValid","assertThisInitialized","handleValidation","preventDefault","multiline","subcontainer","EditLectureDialog","modifyDate","UTC","getYear","getMonth","getDate","handleDateChange","selectedDate","handleOpenDateChange","handleCloseDateChange","handleCheck","_event$target2","apiService","editLecture","MomentUtils","prototype","getStartOfMonth","startOfMonth","dateValid","getTime","validateForm","scroll","gridItem","requiredtitle","material_ui_pickers_esm","utils","DateFnsUtils","dateField","gridItemButton","LectListItemNavEdit","_e$target","changeLectureTitle","handleToLecture","exportGradesLecture","components_EditLectureDialog","ListOfAllLectures","components_LectListItemNavEdit","CourseInfo","parentCourse","changeCourseData","getCourseWithId","Paper_default","editRoot","elevation","xs","textFieldShort","textFieldLong","root","termYear","gutters","paddingBottom","fontStyle","DeleteLecturesList","delLectures","lect","AllLecturesFrame","toNewLecture","referrerLectureIndex","numLects","handleNewLectureClick","lectArr","deleteLectures","components_ListOfAllLectures","course_info","components_CourseInfo","components_DeleteLecturesList","ProfessorViewLectures","components_AllLecturesFrame","params","AddQuestionModal","toNewMCQuestion","toNewFreeTextQuestion","toNewSliderQuestion","lectureId","handleMC","handleFreeText","handleSlider","aria-label","vert","index_es","AddQuestionModalWrapped","justifyContent","socket","socketIOClient","OpenClosedButton","isOpen","questionId","parentLecture","recentlyOpenedId","handleToUpdate","recentlyClosedId","handleListClose","emit","handleClick","handleBtnClick","startLectureBtn","prettyMs","require","BaseStatsComponent","time","isOn","questionTitle","hidden","startTimer","stopTimer","resetTimer","timer","setInterval","clearInterval","Timer_default","secDecimalDigits","children","responsesNumber","marginBottom","MCQuestionStats","update","override","global","legend","tooltips","enabled","selectedQuestionId","getQuestionWithId","labels","currLabel","loadAnswers","msg","values","answers","datasets","count","on","j","removeAllListeners","options","scales","yAxes","ticks","beginAtZero","userCallback","Math","floor","components_BaseStatsComponent","es","responses","next_question","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","scope","SliderStats","updateChartLabels","updateChartData","ViewStatsModal","stats","components_MCQuestionStats","FreeTextStats","components_SliderStats","InsertChartOutlined_default","ViewStatsModalWrapped","closed_at","modified_at","MultipleChoiceQuestionObj","_QuestionObj","inherits","SliderQuestionObj","_QuestionObj2","FreeTextQuestionObj","_QuestionObj3","EditFRQDialog","getEdits","removeImage","encodeImageFileAsURL","files","reader","FileReader","onloadend","result","readAsDataURL","required","buttonItem","paddingRight","answersValid","new_options","option","_arr","val","EditMCQDialog","answer_choices","should_delete","titleError","hasAnswers","optionsValid","delete_mode","deleteDisabled","deleteConfirmDisabled","handleOption","validateFields","handleSetNumberOfOptions","option_string","toString","handleDeleteQueue","numRemainingOptions","_arr2","_i3","substring","correct","Number","_arr3","_i4","k","_arr4","_i5","errors","has_answers","InputLabel_default","htmlFor","Select_default","select","inputProps","setDeleteMode","answerBoundOptions","answerBoundOptionsRange","EditSLQDialog","lower","upper","answer_bounds","range","rangeVal","equality_operators","slider_value","has_correct_answer","custom_labels","fieldsValid","lower_bound","upper_bound","setCorrectAnswer","validateBoundsAndOperators","setCustomLabels","validateAnswers","setCorrectBounds","prop","answerBounds","isInteger","round","handleEqualityOperator","handleTitleChange","validateTitle","handleLabelsChange","handleLabelsValidation","handleSliderChange","handleSetRange","equalityOperators","lower_operator","getOperatorCondition","_this$props$questionO","correct_arr","bound","side","operator","allValid","isInRange","valid","condition","align-items","entry","Switch_default","sm","RadioGroup_default","Radio_default","InputProps","startAdornment","InputAdornment_default","endAdornment","percentText","wordBreak","titleWrap","maxWidth","titleContainer","slidercontainer","gridContainer","andor","QuestionListItem","mode","prevProps","number","components_OpenClosedButton","components_EditFRQDialog","components_EditMCQDialog","components_EditSLQDialog","components_ViewStatsModal","DeleteQuestionsList","delQuestions","closed_questions","checkBoxContainer","AllQuestionsFrame","toNewQuestion","lectureTitle","handleNewQuestionClick","handleDeleteQuestions","disableTopButton","handleEditQuestions","handleRestoreMode","restoreTopButton","editQuestion","mcqEditDetect","qArr","handleDeletion","nextLecture","components_AddQuestionModal","components_DeleteQuestionsList","components_QuestionListItem","ProfessorViewQuestions","mcqStatsUpdated","updateMCQStats","editDeleteMode","_loop","handleListClickClose","deleteQuestions","btnStatus","convertQuestionIndexToId","currentQuestionIndex","openQuestionId","currentQuestionId","handleListClick","convertQuestionIdToIndex","closeAllQuestions","text","textQ","grid","md","components_AllQuestionsFrame","getSortedQuestionsCopy","sortedQuestionsCopy","showCodeBtn","ProfessorAddMCQuestion","toQuestions","question_image_string","uploading","num_options","buttonContainer","ProfessorAddFreeTextQuestion","correct_answer_valid","ProfessorAddSliderQuestion","Slider_default","min","max","step","ProfessorAddLecture","toLecture","lectString","NoMatch","ProfessorRoutes","index_module","CssBaseline_default","Route","path","Hidden_default","xsDown","implementation","content","Switch","exact","_content","StudentStore","socketIOStatus","lastQuestion","prevQuestions","lastAnswer","original_question","updatedQuestion","oldQuestion","indexOf","addOneQuestion","APIStudentService","studentStore","updateAllCourses","getStudentQuestionsByCourseAPI","updateAllQuestions","getStudentPrevQuestionsByCourseAPI","updateAllPrevQuestions","deleteDropCourseAPI","dropCourse","ClassCard","link","colorStyle","apiStudentService","colors","orangeCard","greenCard","yellowCard","navyCard","colorIndex","Link","typography","disableFocusListener","size","textDecoration","LogoutButton","getLogoutStudent","Header","Buttons_LogoutButton","AddCourseDialog","errorMsg","_this$setState","toUpperCase","enroll","loadAllCourses","enrollCourse","Fab_default","SocketIOStudentService","setSocketIOStatus","setTimeout","checkConnection","resetQuestions","updateLastQuestion","removeQuestionById","clearTimeout","connected","StudentHome","course_ids","socketIOStudentService","currentCourses","archivedCourses","showString","LoggedinHeader","typeography","Student_AddCourseDialog","StudentClassCards","Transition","Slide_default","assign","FRQ","sent","dialogue","postAnswer","handleCloseSubmit","updateLastAnswer","timerString","TransitionComponent","keepMounted","MCQ","answerchoices","qstring","answerOption","SLQ","percentContainer","whiteTypography","PrevMCQ","isLast","getPrevQuestionWithId","background_style","neutralAnswer","correctAnswer","parseInt","wrongAnswer","PrevFRQ","backgroundStyle","PrevSLQ","expression","operatorToComparison","exp1","exp2","string","operatorToWord","checkAnswer","getAnswerText","QuestionPage","show_previous_questions","show_last_question","dots","loadAllPrevQuestions","reset","subscribe","detectOpenQuestion","detectCloseQuestion","getAllQuestions","listen","startCheckingConnection","stopCheckingConnection","getNumberOfQuestions","Questions_FRQ","Questions_SLQ","Questions_MCQ","Questions_PrevMCQ","Questions_PrevFRQ","Questions_PrevSLQ","CheckQuestions","loadAllQuestions","text-decoration","StudentRoutes","flexGrow","Home","toStudent","toProf","handleLoginProf","handleLoginStudent","clickGrid","studentcard","CardActionArea_default","logostudent","studentTypography","profcard","logoprof","profTypography","_studentcard","_profcard","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","bottom","down","Login","url_add_on_1","url_add_on_2","end_sub","valueOf","createMuiTheme","accent","useNextVariants","App","core_styles","BrowserRouter","configure","enforceActions","ReactDOM","render","app","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc3121f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clikrlogo2.f8a6c63b.png\";","module.exports = __webpack_public_path__ + \"static/media/clikrlogo.6c47d62c.png\";","module.exports = __webpack_public_path__ + \"static/media/background.d8b36ae3.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withRouter } from \"react-router\";\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer, inject } from 'mobx-react';\nimport logo from '../../assets/clikrlogo2.png';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    listtext: {\n        color: theme.palette.primary.main\n    },\n    listsubtext: {\n        color: theme.palette.primary.dark\n    },\n    titletext: {\n        color: theme.palette.primary.main,\n        paddingTop: theme.spacing.unit*2\n    },\n    nestedListtext: {\n        color: theme.palette.primary.main,\n        paddingLeft: theme.spacing.unit*2,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hover: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.secondary.dark\n          }\n    },\n    toolbar: theme.mixins.toolbar,\n});\n\n@inject('profStore')\n@observer\nclass SideMenuBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n    }\n\n    state = {\n        open: null,\n        selectedCourse: 0,\n        selectedLecture: 0,\n    }\n    componentDidMount() {\n        if (this.props.location.pathname !== undefined) {\n            if (this.props.location.pathname.length !== \"\") {\n                const url_parts_arr = this.props.location.pathname.split(\"/\");\n                if (url_parts_arr[3] === \"questions\") {\n                    this.setState({ selectedLecture: url_parts_arr[2], open: this.profStore.getLectureWithId(url_parts_arr[2]).course_id, selectedCourse: this.profStore.getLectureWithId(url_parts_arr[2]).course_id})\n                }\n                if (url_parts_arr[3] === \"lectures\") {\n                    this.setState({ selectedLecture:0, selectedCourse: url_parts_arr[2]})\n                }\n            }\n        }\n    }\n    componentDidUpdate() {\n        if (this.props.location.pathname !== undefined) {\n            if (this.props.location.pathname.length !== \"\") {\n                const url_parts_arr = this.props.location.pathname.split(\"/\");\n                if (url_parts_arr[3] === \"questions\" && this.state.selectedLecture !== url_parts_arr[2]) {\n                    this.setState({ selectedLecture: url_parts_arr[2], open: this.profStore.getLectureWithId(url_parts_arr[2]).course_id, selectedCourse: this.profStore.getLectureWithId(url_parts_arr[2]).course_id })\n                }\n                if (url_parts_arr[3] === \"lectures\" && this.state.selectedCourse !== url_parts_arr[2]) {\n                    this.setState({ selectedLecture:0, selectedCourse: url_parts_arr[2]})\n                }\n                if (url_parts_arr.length === 2) {\n                    if (this.state.selectedLecture !== 0 ||this.state.selectedCourse !== 0) {\n                        this.setState({ selectedLecture: 0, selectedCourse: 0 })\n                    }\n                }\n            }\n        }\n    }\n\n    handleCourseClick(id) {\n        this.props.history.push('/professor/' + id + '/lectures');\n    }\n\n    handleLectureClick(id) {\n        this.props.history.push('/professor/' + id + '/questions');\n    }\n\n    handleExpand(id) {\n        var open = this.state.open;\n        if (open === id) {\n            open = null;\n        } else {\n            open = id;\n        }\n\n        this.setState({\n            open: open,\n        })\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current\n        })\n\n        return (\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <Drawer\n                    className={this.styles.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: this.styles.drawerPaper,\n                    }}\n                    anchor=\"left\"\n                >\n                \n                <Grid item><Grid container direction=\"row\" justify=\"center\" ><img src={logo} alt=\"logo\" height={80}/></Grid></Grid>\n                <Grid item><Divider /></Grid>\n                <Grid item>\n                    <List>\n                        {courses.map((courseObj, index) => {\n                            var lectures = this.profStore.getCourseLectures(courseObj.id);\n                            return (\n                                <div key={\"div\" + index}>\n                                    <ListItem className={this.styles.hover} button key={index} onClick={() => this.handleCourseClick(courseObj.id)} selected={this.state.selectedCourse === courseObj.id}>\n                                        <ListItemText disableTypography \n                                            primary={<Typography type=\"body2\" className={this.styles.listtext}>{courseObj.title}</Typography>} \n                                            secondary={<Typography type=\"body2\" className={this.styles.listsubtext}>{courseObj.term} {courseObj.year}</Typography>}\n                                        />\n\n                                        <ListItemSecondaryAction>\n                                            <IconButton color=\"primary\" disabled={lectures.length === 0} onClick={() => this.handleExpand(courseObj.id)}>\n                                                {lectures.length > 0 && this.state.open === courseObj.id ? <ExpandLess /> : <ExpandMore />}\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Collapse in={this.state.open === courseObj.id} timeout=\"auto\" unmountOnExit>\n                                        <List component=\"div\" disablePadding>\n                                            {lectures.map((lectureObj, innerIndex) => {\n                                                return (\n                                                    <ListItem button key={courseObj.id + \"_lecture_\" + innerIndex} onClick={() => this.handleLectureClick(lectureObj.id)} selected={this.state.selectedLecture === lectureObj.id}>\n                                                        <ListItemText disableTypography primary={<Typography type=\"body2\" className={this.styles.nestedListtext}> {lectureObj.title} </Typography>} />\n                                                    </ListItem>\n                                                )\n                                            })}\n                                        </List>\n                                    </Collapse>\n                                </div>\n                            )\n                        })}\n                    </List>\n                </Grid>\n                </Drawer>\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(SideMenuBar));","const windowSplit = window.location.href.split(\"/\")\nconst base = windowSplit[0] + \"//\" + windowSplit[2] + \"/\"\n\nexport const socketioURL =\n         process.env.NODE_ENV === \"production\"\n           ? base\n           : \"http://localhost:5000/\";\nexport const baseURL = socketioURL + \"api/v1/\"; ","import axios from 'axios';\nimport { baseURL } from '../constants/api'\n\naxios.defaults.withCredentials = true;\n\nexport function getProfDataAPI() {\n    return axios.get(baseURL + 'professor/data');\n}\n\nexport function loginProfessorAPI(username, password) {\n    return axios.post(baseURL + 'admin/professorlogin', {\n        netId: username,\n        password: password\n    });\n}\n\nexport function createProfessorAPI(username, password, firstName, lastName) {\n    return axios.post(baseURL + 'admin/professor', {\n        netId: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName\n    });\n}\n\nexport function archiveCourseAPI(course_id) {\n    return axios.post(baseURL + 'professor/courses/' + course_id + '/archive');\n}\n\nexport function duplicateCourseAPI(course_id, year, term) {\n    return axios.post(baseURL + 'professor/courses/' + course_id + '/duplicate', {\n        year: year,\n        term: term\n    });\n}\n\nexport function loginStudentAPI(username, password) {\n    return axios.post(baseURL + 'admin/studentlogin', {\n        netId: username,\n        password: password\n    });\n}\n\nexport function createStudentAPI(username, password, firstName, lastName) {\n    return axios.post(baseURL + 'admin/student', {\n        netId: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName\n    });\n}\n\nexport function getProfAnswers(question_id) {\n    return axios.get(baseURL + 'professor/questions/' + question_id + '/statistics');\n}\n\nexport function getProfNameAPI() {\n    return axios.get(baseURL + 'professor/name');\n}\n\nexport function getStudentNameAPI() {\n    return axios.get(baseURL + 'student/name');\n}\n\nexport function getStudentCoursesAPI() {\n    return axios.get(baseURL + 'student/courses');\n}\n\nexport function hasStudentQuestions(course_id) {\n    return Promise.all(axios.get(baseURL + 'student/courses/' + course_id + '/questions'));\n}\n\nexport function getProfCoursesAPI() {\n    return axios.get(baseURL + 'professor/courses');\n}\n\nexport function getStudentQuestionsByCourseAPI(course_id) {\n    return axios.get(baseURL + 'student/courses/' + course_id + '/questions');\n}\n\nexport function getStudentPrevQuestionsByCourseAPI(course_id) {\n    return axios.get(baseURL + 'student/courses/' + course_id + '/prevquestions');\n}\n\nexport function postOpenQuestionAPI(question_id) {\n    return axios.post(baseURL + 'professor/questions/' + question_id, {\n        action: \"open\"\n    });\n}\n\nexport function postCloseQuestionAPI(question_id) {\n    return axios.post(baseURL + 'professor/questions/' + question_id, {\n        action: \"close\"\n    });\n}\n\nexport function postCloseAllQuestionsAPI(lecture_id) {\n    return axios.post(baseURL + 'professor/lectures/' + lecture_id, {\n        action: \"close\"\n    });\n}\n\n// course: CourseObj\nexport function postNewCourseAPI(course) {\n    return axios.post(baseURL + 'professor/courses', {\n        title: course.title,\n        dept: course.dept,\n        coursenum: course.num,\n        description: course.description,\n        year: course.year,\n        term: course.term\n    });\n}\n\n// lecture: LectureObj\nexport function postNewLectureAPI(lecture) {\n    return axios.post(baseURL + 'professor/courses/' + lecture.course_id + '/lectures', {\n        title: lecture.title,\n        date: lecture.date,\n        description: lecture.description,\n        open_date: lecture.openDate,\n        close_date: lecture.closeDate,\n        scheduled: lecture.scheduled\n    });\n}\n\nexport function postEnrollStudentAPI(code) {\n    return axios.post(baseURL + 'student/courses', {\n        enroll_code: code\n    });\n}\n\nexport function postAnswerQuestionAPI(answer, question_id) {\n    return axios.post(baseURL + 'student/questions/' + question_id, {\n        answer: answer\n    });\n}\nexport function getLogoutStudentAPI() {\n    return axios.get(baseURL + 'student/logout');\n}\nexport function getLogoutProfAPI() {\n    return axios.get(baseURL + 'professor/logout');\n}\n\n// course: CourseObj\nexport function patchUpdateCourseAPI(course_id, course_title) {\n    return axios.patch(baseURL + 'professor/courses/' + course_id, {\n        title: course_title\n    });\n}\n\nexport function patchUpdateCourseDataAPI(course_id, course) {\n    return axios.patch(baseURL + 'professor/courses/' + course_id, {\n        title: course.title,\n        dept: course.dept,\n        coursenum: course.coursenum,\n        year: course.year,\n        term: course.term,\n        description: course.description\n    });\n}\n\nexport function exportGradesLectureAPI(lecture_id) {\n    return axios.get(baseURL + 'professor/lectures/' + lecture_id + '/exportgrades')\n}\n\nexport function exportGradesCourseAPI(course_id) {\n    return axios.get(baseURL + 'professor/courses/' + course_id + '/exportgrades')\n}\n\nexport function patchUpdateLectureAPI(lecture) {\n    return axios.patch(baseURL + 'professor/lectures/' + lecture.id, {\n        title: lecture.title,\n        date: lecture.date,\n        description: lecture.description,\n        open_date: lecture.openDate,\n        close_date: lecture.closeDate,\n        scheduled: lecture.scheduled\n    });\n}\n\n// delete the course \nexport function deleteCourseAPI(course_id) {\n    return axios.delete(baseURL + 'professor/courses/' + course_id);\n}\n\n// delete a question by id\nexport function deleteQuestionsAPI(question_id) {\n    return axios.delete(baseURL + 'professor/questions/' + question_id);\n}\n\n// get questions for course by id\nexport function getQuestionsForLectureAPI(lecture_id) {\n    return axios.get(baseURL + 'professor/lectures/' + lecture_id + '/questions');\n}\n\n// delete a lecture by id\nexport function deleteLecturesAPI(lecture_id) {\n    return axios.delete(baseURL + 'professor/lectures/' + lecture_id);\n}\n// drop = delete for studnet\nexport function deleteDropCourseAPI(course_id) {\n    return axios.delete(baseURL + 'student/courses/' + course_id);\n}\n\n// update a question:\nexport function patchUpdateQuestionAPI(question) {\n    return axios.patch(baseURL + 'professor/questions/' + question.id, {\n        id: question.id,\n        lecture_id: question.lecture_id,\n        question_type: question.question_type,\n        question_title: question.question_title,\n        question_image: question.question_image,\n        correct_answer: question.correct_answer,\n        option1: question.option1,\n        option2: question.option2,\n        option3: question.option3,\n        option4: question.option4,\n        option5: question.option5,\n        number_of_options: question.number_of_options,\n        word_limit: question.word_limit,\n        lower_label: question.lower_label,\n        upper_label: question.upper_label,\n    });\n}\n\nexport function postNewQuestionAPI(question) {\n    return axios.post(baseURL + 'professor/lectures/' + question.lecture_id + '/questions', {\n        lecture_id: question.lecture_id,\n        question_type: question.question_type,\n        question_title: question.question_title,\n        question_image: question.question_image,\n        correct_answer: question.correct_answer,\n        creator_id: question.creator_id,\n        option1: question.option1,\n        option2: question.option2,\n        option3: question.option3,\n        option4: question.option4,\n        option5: question.option5,\n        number_of_options: question.number_of_options,\n        word_limit: question.word_limit,\n        lower_label: question.lower_label,\n        upper_label: question.upper_label,\n    });\n}\n","import { getProfDataAPI, patchUpdateLectureAPI, duplicateCourseAPI, archiveCourseAPI, exportGradesCourseAPI, exportGradesLectureAPI, patchUpdateCourseDataAPI, getProfNameAPI, getProfAnswers, postNewCourseAPI, postNewQuestionAPI, postNewLectureAPI, postOpenQuestionAPI, postCloseQuestionAPI, getLogoutProfAPI, patchUpdateCourseAPI, deleteCourseAPI, getProfCoursesAPI, deleteLecturesAPI, getQuestionsForLectureAPI, postCloseAllQuestionsAPI, deleteQuestionsAPI, patchUpdateQuestionAPI } from '../utils/api-facade';\n\n\nexport default class APIProfService {\n    constructor(professorStore) {\n        this.professorStore = professorStore;\n    }\n    \n    async getName() {\n        return getProfNameAPI()\n            .then(res => {\n                return res.data.name\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    archiveCourse(course_id) {\n        return archiveCourseAPI(course_id)\n            .then(res => {\n                this.professorStore.updateCourseData(res.data.id, res.data.course)\n                return res.data.message\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    duplicateCourse(course_id, year, term) {\n        return duplicateCourseAPI(course_id, year, term)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    exportGradesLecture(lecture_id) {\n        return exportGradesLectureAPI(lecture_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    exportGradesCourse(course_id) {\n        return exportGradesCourseAPI(course_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    loadData() {\n        if (!this.professorStore.dataLoaded) {\n            return getProfDataAPI()\n                .then(res => {\n                    this.professorStore.updateData(res.data)\n                })\n                .catch(error => {\n                    console.log(error);\n                    this._checkAuth(error);\n                })\n        }\n\n        return new Promise(function () {\n            return true\n        })\n    }\n\n    loadAllCourses() {\n        return getProfCoursesAPI()\n            .then(res => {\n                this.professorStore.updateAllCourseData(res.data)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    loadAnswers(question_id) {\n        return getProfAnswers(question_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n                return [];\n            })\n    }\n\n    loadQuestions(lecture_id) {\n        return getQuestionsForLectureAPI(lecture_id)\n        .then(res => {\n            return res.data\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n            return [];\n        })\n    }\n\n    openQuestion(question_id, lecture_id) {\n        postOpenQuestionAPI(question_id)\n            .then(res => {\n                this.professorStore.openQuestion(question_id, lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    closeQuestion(question_id, lecture_id) {\n        postCloseQuestionAPI(question_id)\n            .then(res => {\n                this.professorStore.closeQuestion(question_id, lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    closeAllQuestions(lecture_id) {\n        postCloseAllQuestionsAPI(lecture_id)\n            .then(res => {\n                this.professorStore.closeAllQuestionsForLecture(lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    addLecture(lecture) {\n        postNewLectureAPI(lecture)\n            .then(res => {\n                const newLec = res.data.lectures.find(lecture => lecture.id === res.data.id)\n                newLec.questions = []\n                this.professorStore.addLecture(newLec)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    addCourse(course) {\n        postNewCourseAPI(course)\n            .then(res => {\n                course.id = res.data.id\n                const newCourse = res.data.courses.find(course => course.id === res.data.id)\n                newCourse.lectures = []\n                this.professorStore.addCourse(res.data.courses, newCourse)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    // remove courses\n    deleteCourses(courses) {\n        courses.map(id => {\n            return (\n                deleteCourseAPI(id)\n                    .then(() => {\n                        this.professorStore.removeCourse(id)\n                        this.professorStore.dataLoaded = false\n                        this.loadData()\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    changeCourseTitle(courseId, courseTitle) {\n        patchUpdateCourseAPI(courseId, courseTitle)\n            .then(res => {\n                this.professorStore.updateCourse(courseId, courseTitle)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    changeCourseData(courseId, course) {\n        patchUpdateCourseDataAPI(courseId, course)\n            .then(res => {\n                this.professorStore.updateCourseData(courseId, course)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    editLecture(lectureObj) {\n        return patchUpdateLectureAPI(lectureObj)\n        .then(res => {\n            this.professorStore.updateLecture(res.data.lecture);\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n        })\n    }\n\n    editQuestion(questionObj) {\n        patchUpdateQuestionAPI(questionObj)\n        .then(res => {\n            this.professorStore.updateQuestion(questionObj);\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n        })\n    }\n\n    // remove lectures- input is array of lecture ids\n    deleteLectures(lectures, courseId) {\n        lectures.map(id => {\n            return (\n                deleteLecturesAPI(id)\n                    .then(() => {\n                        this.professorStore.removeLecture(id, courseId)\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    // remove lectures- input is array of lecture ids\n    deleteQuestions(questions, parentLectureId) {\n        questions.map(id => {\n            return (\n                deleteQuestionsAPI(id)\n                    .then(() => {\n                        this.professorStore.removeQuestion(id, parentLectureId)\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    addQuestion(question) {\n        // post new question\n        postNewQuestionAPI(question)\n            .then(res => {\n                const newQ = res.data.questions.find(q => q.id === res.data.id)\n                newQ.id = res.data.id\n                this.professorStore.addQuestion(newQ)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n    async getLogoutProf() {\n        getLogoutProfAPI()\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    _checkAuth(error) {\n        if (error.response !== undefined) {\n            if (error.response.status === 401)\n                window.location.replace('/login-prof')\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ToolbarGroup from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\n\nimport Menu from '@material-ui/core/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport APIProfService from '../../services/APIProfService'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n\n    homeButton: {\n        marginLeft: \"0%\"\n    },\n\n});\n\nclass TopMenuBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store  = props.store\n        this.apiProfService = new APIProfService(this.store)\n    }\n\n    state = {\n      anchorEl: null,\n      goHome: false,\n      logout: false,\n      userName: \"\"\n    };\n\n    componentDidMount() {\n        this.apiProfService.getName()\n            .then(name => {\n                this.setState({ userName: name });\n            })\n    }\n\n    handleMenu = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n      this.setState({\n          anchorEl: null,\n          logout: false\n        });\n    };\n\n    handleLogout = () => {\n        this.setState({\n            anchorEl: null,\n            logout: true\n          });\n    }\n\n    handleHome = () => {\n        this.props.history.push('/professor');\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        if (this.state.logout) {\n            this.apiProfService.getLogoutProf()\n            return <Redirect to='/' push/>\n        }\n\n\n        return (\n            <AppBar position=\"sticky\" color=\"inherit\" className={this.styles.appBar}>\n                <Toolbar>\n                    <IconButton className={classes.homeButton} onClick={this.handleHome} color=\"primary\">\n                        <SvgIcon>\n                            <path fill=\"secondary\"\n                                d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\n                        </SvgIcon>\n                    </IconButton>\n                    \n                    <ToolbarGroup style={{\n                        float: 'none',\n                        marginRight: 'auto'\n                    }}>\n                    </ToolbarGroup>\n\n                    <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> {this.state.userName} </Typography>\n\n                    <IconButton\n                        aria-haspopup=\"true\"\n                        onClick={this.handleMenu}\n                        color=\"primary\"\n                        float=\"right\"\n                    >\n                        <SvgIcon style={{ \"width\": \"24px\", \"height\": \"24px\" }} viewBox=\"0 0 24 24\">\n                            <path color=\"secondary\"\n                                d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" />\n\n                        </SvgIcon>\n                    </IconButton>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={this.handleClose}\n                    >\n                        <MenuItem onClick={this.handleLogout}>\n\n                            LOGOUT\n\n                        </MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n\n\n\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(TopMenuBar));\n","\nexport default class LectureObj {\n    constructor(title, date, id, course_id, description, scheduled, openDate, closeDate) {\n        this.course_id = course_id;\n        this.date = date;\n        this.id = id;\n        this.title = title;\n        // this.description = description;\n        this.scheduled = scheduled;\n        this.openDate = openDate;\n        this.closeDate = closeDate;\n    }\n}","import { observable, action } from \"mobx\";\nimport LectureObj from '../models/LectureObj';\nimport QuestionObj from '../models/LectureObj';\n\nexport default class ProfessorStore {\n    @observable\n    courses = [];\n    dataLoaded = false;\n\n    set courses(value) {\n        value.sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n        this._courses = value;\n    }\n\n    getCourseWithId(course_id) {\n        return this.courses.find(x => x.id === course_id)\n    }\n\n    getLectureById(lecture_id) {\n        \n        if (lecture_id === 0)\n        return { questions: [] };\n        const course = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id))\n        \n        if (course === undefined)\n            return new LectureObj();\n\n        const lectures = course.lectures\n        return lectures.find(lecture => lecture.id === lecture_id)\n    }\n\n    getLectureWithId(lecture_id) {\n        \n        if (lecture_id === 0)\n            return { questions: [] };\n        const course = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id))\n        if (course === undefined)\n            return { questions: [] }\n\n        const lectures = course.lectures\n        return lectures.find(lecture => lecture.id === lecture_id)\n    }\n\n    @action\n    getCourseLectures(course_id) {\n        return this.courses.find(x => x.id === course_id).lectures;\n    }\n\n    // getQuestionWithId(lecture, question_id) {\n    //     console.log(\"get question with id\")\n    //     console.log(lecture)\n    //     console.log(question_id)\n    //     if (lecture.questions === [])\n    //         return { questions: [] };\n\n    //     if (lecture.questions.find(x => x.id === question_id) === undefined)\n    //         return { questions: [] };\n\n    //     return this.courses.find(course => course.lectures.find(lec => lec.id === lecture.id)).lectures\n    //         .find(lec => lec.id === lecture.id).questions.find(x => x.id === question_id)\n    // }\n    getQuestionWithId(lecture, question_id) {\n        if (lecture.questions === [] || lecture.questions === undefined)\n            return new QuestionObj();\n\n        if (lecture.questions.find(x => x.id === question_id) === undefined)\n            return new QuestionObj();\n\n        return this.courses.find(course => course.lectures.find(lec => lec.id === lecture.id)).lectures\n            .find(lec => lec.id === lecture.id).questions.find(x => x.id === question_id)\n    }\n\n    @action\n    getLectureQuestions(lecture_id) {\n        return this.courses.find(course => course.lectures.find(lec => lec.id === lecture_id)).lectures;\n    }\n\n    @action\n    updateData(data) {\n        this.dataLoaded = true;\n        this.courses = data;\n    }\n\n    @action\n    addCourse(courses, course) {\n        course.enroll_code = courses.find(x => x.id === course.id).enroll_code\n        this.courses.push(course);\n        this.courses.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n\n    @action\n    updateCourse(courseId, title) {\n        const oldCourse = this.courses.find(x => x.id === courseId);\n        oldCourse.title = title\n    }\n\n    @action\n    updateCourseData(courseId, course) {\n        const oldCourse = this.courses.find(x => x.id === courseId);\n        oldCourse.title = course.title\n        oldCourse.dept = course.dept\n        oldCourse.coursenum = course.coursenum\n        oldCourse.year = course.year\n        oldCourse.term = course.term\n        oldCourse.description = course.description\n        oldCourse.is_current = course.is_current\n    }\n\n    @action\n    updateLecture(lecture) {\n        const oldLecture = this.getLectureById(lecture.id)\n\n        oldLecture.title = lecture.title\n        oldLecture.close_date = lecture.close_date\n        oldLecture.open_date = lecture.open_date\n        oldLecture.scheduled = lecture.scheduled\n        oldLecture.date = lecture.date\n\n        console.log(oldLecture)\n    }\n\n    @action\n    deleteCourse(course_id) {\n        this.courses.remove(this.courses.find(x => x.id === course_id));\n    }\n\n    @action\n    addLecture(lecture) {\n        this.courses.find(x => x.id === lecture.course_id).lectures.push(lecture)\n        this.courses.find(x => x.id === lecture.course_id).lectures.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n    @action\n    removeCourse(course_id) {\n        this.courses.remove(this.courses.find(x => x.id === course_id));\n    }\n\n    @action\n    removeLecture(lecture_id, course_id) {\n        const lectures = this.courses.find(x => x.id === course_id).lectures;\n        lectures.remove(lectures.find(x => x.id === lecture_id));\n    }\n\n    @action\n    removeQuestion(question_id, parent_lecture_id) {\n        const questions = this.courses.find(course => course.lectures.find(lec => lec.id === parent_lecture_id)).lectures\n            .find(lec => lec.id === parent_lecture_id).questions;\n        questions.remove(questions.find(x => x.id === question_id));\n    }\n\n    @action\n    addQuestion(question) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === question.lecture_id)).lectures\n            .find(lecture => lecture.id === question.lecture_id).questions.push(question);\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === question.lecture_id)).lectures\n            .find(lecture => lecture.id === question.lecture_id).questions.slice().sort(function (a, b) {\n                if (a.created_at < b.created_at) {\n                    return -1;\n                }\n                if (a.created_at > b.created_at) {\n                    return 1;\n                }\n                // a must be equal to b\n                return 0;\n            });\n    }\n    @action \n    updateQuestion(questionObj) {\n        const lecture = this.courses.find(course => course.lectures.find(lecture => lecture.id === questionObj.lecture_id)).lectures\n        .find(lecture => lecture.id === questionObj.lecture_id);\n        const question = lecture.questions.find(q => q.id === questionObj.id);\n       \n        const keys = Object.keys(questionObj);\n        for (const key of keys) question[key] = questionObj[key];\n    }\n\n    @action\n    openQuestion(question_id, lecture_id) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).is_open = true;\n            this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\t\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).opened_at = Date.now();\n    }\n\n    @action\n    closeQuestion(question_id, lecture_id) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).is_open = false;\n    }\n\n    @action\n    closeAllQuestionsForLecture(lecture_id) {\n        var questions = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions;\n        \n        for (var question of questions) {\n            question.is_open = false;\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    }\n});\n\n\n@observer\nclass AddStudentsModal extends React.Component {\n    state = {\n        open: false,\n        code: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.joinCode = props.joinCode\n        this.profStore = props.profStore\n    }\n    componentDidMount() {\n        this.setState({ code: this.joinCode })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.joinCode !== undefined) {\n            this.setState({ code: nextProps.joinCode })\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit = () => {\n        // Close modal \n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid item>\n                <Tooltip title=\"Add Students\" placement=\"top\">\n                    <IconButton color=\"primary\" onClick={this.handleOpen}>\n                        <PersonAddIcon />\n                    </IconButton>\n                </Tooltip>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <Typography variant=\"subtitle1\">\n                            Share this code with your students:\n                        </Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {this.state.code}\n                        </Typography>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Done</Button>\n                    </div>\n                </Modal>\n            </Grid>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst AddStudentsModalWrapped = withStyles(styles)(AddStudentsModal);\n\nexport default AddStudentsModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 20,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 2,\n        direction: 'column'\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'column'\n    },\n    textField: {\n        width: theme.spacing.unit * 15,\n    },\n    button: {\n        width: theme.spacing.unit * 15,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    }\n});\n\n\n@observer\nclass DuplicateCourseModal extends React.Component {\n    state = {\n        open: false,\n        newYear: \"\",\n        newTerm: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n        this.styles = props.classes\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.courseId = nextProps.courseId\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({ [name]: value });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit = () => {\n        this.apiProfService.duplicateCourse(this.courseId, this.state.newYear, this.state.newTerm)\n            .then(data => {\n                this.setState({ open: false });\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid item>\n                <Tooltip title=\"Duplicate Course\" placement=\"top\">\n                    <IconButton color=\"secondary\" onClick={this.handleOpen}>\n                        <FileCopyIcon />\n                    </IconButton>\n                </Tooltip>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper} >\n                        <Typography variant=\"subtitle1\">\n                            Duplicate Course\n                        </Typography>\n                        <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                           <TextField\n                                 label=\"Year\"\n                                 name=\"newYear\"\n                                 className={this.styles.textField}\n                                 error={isNaN(this.state.newYear)}\n                                 value={this.state.newYear}\n                                 onChange={this.handleChange}\n                                 margin=\"normal\"\n                                 helperText=\"Year must be an integer.\"\n                           />\n\n                           <TextField\n                                 label=\"Term\"\n                                 name=\"newTerm\"\n                                 className={this.styles.textField}\n                                 value={this.state.newTerm}\n                                 onChange={this.handleChange}\n                                 margin=\"normal\"\n                           />\n\n                           <Button className={this.styles.button}\n                                 type=\"submit\"\n                                 disabled={!(this.state.newTerm && !isNaN(this.state.newYear))}\n                                 variant=\"outlined\"\n                                 color=\"primary\"\n                                 > submit\n                           </Button>\n                        </form>\n                    </div>\n                </Modal>\n            </Grid>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst DuplicateCourseModalWrapped = withStyles(styles)(DuplicateCourseModal);\n\nexport default DuplicateCourseModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport InputBase from '@material-ui/core/InputBase';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FormControl from '@material-ui/core/FormControl';\nimport AddStudentsModal from '../AddStudentsModal';\nimport DuplicateCourseModal from '../DuplicateCourseModal';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport Grid from '@material-ui/core/Grid';\nimport { baseURL } from '../../constants/api';\n\nconst styles = theme => ({\n    iconDone: {\n        color: theme.palette.primary.light\n    },\n    iconEdit: {\n        color: theme.palette.secondary\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 14,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\n@observer\nclass CourseListItemNavEdit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n        this.courseTitle = props.courseTitle\n        this.courseYear = props.courseYear\n        this.courseTerm = props.courseTerm\n        this.courseCode = props.courseCode\n    }\n\n    state = {\n        editMode: false,\n        courseTitle: this.courseTitle,\n        newTitle: \"\",\n        nav: false,\n        courseId: this.courseId,\n        courseYear: this.courseYear,\n        courseTerm: this.courseTerm,\n        courseCode: this.courseCode,\n        toHome: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            courseTitle: this.courseTitle,\n            newTitle: this.courseTitle,\n            courseId: this.courseId,\n            courseYear: this.courseYear,\n            courseTerm: this.courseTerm,\n            courseCode: this.courseCode\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.state.editMode) {\n            if (nextProps.courseId !== this.courseId) {\n                this.setState({\n                    courseTitle: nextProps.courseTitle,\n                    newTitle: nextProps.courseTitle,\n                    courseId: nextProps.courseId,\n                    courseYear: nextProps.courseYear,\n                    courseTerm: nextProps.courseTerm,\n                    courseCode: nextProps.courseCode\n                })\n            }\n        } \n    }\n\n    handleEdit = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n    \n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n\n        // only close if the title is not empty space\n        if (this.state.newTitle.replace(/\\s/g, '').length > 0) {\n            this.apiProfService.changeCourseTitle(this.state.courseId, this.state.newTitle);\n            this.setState({\n                courseTitle: this.state.newTitle,\n                editMode: false,\n            })\n        }\n        else { // defaults to not changing title if invalid title is input\n            this.setState({\n                editMode: false\n            })\n        }\n    }\n\n    handleToCourse = () => {\n        this.setState({\n            nav: true\n        })\n    }\n\n    handleArchive = () => {\n        this.apiProfService.archiveCourse(this.state.courseId)\n            .then(() => {\n                this.setState({ toHome: true })\n            })\n    }\n\n    handleExportGrades = () => {\n        this.apiProfService.exportGradesCourse(this.courseId)\n            .then(data => {\n                const element = document.createElement(\"a\");\n                const file = new Blob([data.fileData], {type: 'text/csv;charset=utf-8;'});\n                element.href = URL.createObjectURL(file);\n                element.download = data.fileName;\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n            })\n    }\n\n    render () {\n        if (this.state.nav) {\n            return  <Redirect to={'/professor/' + this.state.courseId + '/lectures'} push />\n        }\n\n        if (this.state.toHome) {\n            return  <Redirect to={'/professor'} push />\n        }\n\n        if (this.state.editMode) {\n            return (\n                <ListItem divider>\n                    <FormControl>\n                        <InputBase\n                        id=\"bootstrap-input\"\n                        name=\"newTitle\"\n                        value={this.state.newTitle}\n                        onChange={e => this.handleEdit(e)}\n                        classes={{\n                            input: this.styles.bootstrapInput\n                        }}\n                        />\n                    </FormControl>\n                    <ListItemSecondaryAction>\n                        <Grid container direction=\"row\" justify=\"flex-end\" >\n                            <Grid item>\n                                <Tooltip title=\"Done Editing\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleEditClose}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" href={baseURL + \"professor/courses/\" + this.courseId + \"/exportgrades\"} target=\"_blank\">\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <AddStudentsModal profStore={this.profStore} joinCode={this.state.courseCode} />\n                            </Grid>  \n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )\n        }\n        else {\n            return (\n                 <ListItem button divider onClick={this.handleToCourse}>\n                    <Grid container direction=\"row\" justify=\"flex-start\">\n                        <Grid item>\n                            <ListItemText primary={this.state.courseTitle} secondary={this.state.courseTerm + ' ' + this.state.courseYear} />\n                        </Grid>\n                    </Grid>\n                    <ListItemSecondaryAction>\n                        <Grid container direction=\"row\" justify=\"flex-end\">\n                            <Grid item>\n                                <Tooltip title=\"Change Title\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleEditOpen}>\n                                        <EditIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <DuplicateCourseModal profStore={this.profStore} apiProfService = {this.apiProfService} courseId={this.state.courseId} />\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title={this.props.archive ? \"Unarchive Course\" : \"Archive Course\"} placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleArchive}>\n                                        {this.props.archive ? <UnarchiveIcon /> : <ArchiveIcon />}\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleExportGrades}>\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <AddStudentsModal profStore={this.profStore} joinCode={this.state.courseCode} />\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )\n        }\n    }\n}\n\nexport default withStyles(styles)(CourseListItemNavEdit);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport CourseListItemNavEdit from '../CourseListItemNavEdit';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass ListOfAllCourses extends React.Component {\n    state = {\n        referrerCourseId: null,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n   \n    handleCourseClick = id => () => {\n        this.setState(() => ({\n            referrerCourseId: id\n        }))\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current\n        })\n\n        // Handle routes\n        if (this.state.referrerCourseId !== null) {\n            return <Redirect to={'/professor/' + this.state.referrerCourseId + '/lectures'} push />\n        }\n\n        var courseList = courses.map((courseObj, index) => {\n            return (\n                <CourseListItemNavEdit \n                    key={index}\n                    archive={false}\n                    profStore={this.profStore}\n                    apiProfService={this.apiProfService} \n                    courseId={courseObj.id}\n                    courseTitle={courseObj.title}\n                    courseYear={courseObj.year}\n                    courseTerm={courseObj.term}\n                    courseCode={courseObj.enroll_code}\n                />\n            )\n        })\n\n        return (\n            <List component=\"nav\">\n                {courseList}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfAllCourses);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    }\n});\n\n@observer\nclass DeleteCoursesList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delCourses: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n    }\n\n    componentDidMount() {\n        let shouldDelete = []\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current !== this.props.archive\n        })\n        \n        courses.forEach(courseObj => {\n            shouldDelete.push({\n                id: courseObj.id,\n                checked: false,\n                title: courseObj.title,\n                term: courseObj.term,\n                year: courseObj.year\n            })\n        })\n\n        this.setState({\n            delCourses: shouldDelete\n        })\n    }\n\n    handleChange = id =>  event => {\n        // if id in courses, then we are unchecking; otherwise we need to uncheck\n        this.state.delCourses.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delCourses: this.state.delCourses\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delCourses);\n    }\n\n\n    render() {\n        return (\n            <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delCourses\"\n                    value={this.state.delCourses}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delCourses.map((c, index) => {\n                                return (\n                                    <ListItem divider key={index}>\n                                        <ListItemText primary={c.title} secondary={c.term + ' ' + c.year} />\n                                        <ListItemSecondaryAction>\n                                            <FormControlLabel key={index} control={\n                                                    <Checkbox className={this.styles.checkBox} key={c.id} checked={c.checked} onChange={this.handleChange(c.id)} value={c.id} />\n                                                }/>\n                                        </ListItemSecondaryAction> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteCoursesList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport ListOfAllCourses from '../ListOfAllCourses';\nimport DeleteCoursesList from '../DeleteCoursesList';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    }\n});\n\n@observer\nclass AllCoursesFrame extends React.Component {\n    state = {\n        toNewCourse: false,\n        deleteMode: false,\n        deletions: [],\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n\n    // gets courses to be deleted from child component\n    getDeletions = (delCourses) => {\n        this.setState({\n            deletions: delCourses\n        })\n    }\n    handleNewCourseClick = () => {\n        this.setState(() => ({\n            toNewCourse: true\n        }))\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const courseArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    courseArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (courseArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: courseArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n        \n    }\n    handleClose = () => {\n        this.setState({ \n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteCourses(this.state.delIds);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewCourse === true) {\n            return <Redirect to='/professor/new' push />\n        }\n        \n        let list = <ListOfAllCourses profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction=\"Delete\"\n        \n        if (this.state.deleteMode) {\n            list = <DeleteCoursesList profStore={this.profStore} getDeletions={this.getDeletions} archive={false} />\n            deleteAction=\"Done\"\n        }\n\n        return (\n            <div>\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\"> Courses </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                                {deleteAction === 'Delete' ? <DeleteIcon /> : <DoneIcon />}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button onClick={this.handleNewCourseClick} color=\"primary\">\n                                            <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                                            Add Course\n                                        </Button>\n                                    </Grid>    \n                                </Grid>  \n                            </Grid>\n                        </Grid> \n                        {list}\n                    </CardContent>\n                </Card>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following course(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) => \n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n                                        \n                        )}\n    \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            no\n                        </Button>\n                        <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                            yes\n                        </Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AllCoursesFrame);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport CourseListItemNavEdit from '../CourseListItemNavEdit';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass ListOfArchivedCourses extends React.Component {\n    state = {\n        referrerCourseId: null,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n   \n    handleCourseClick = id => () => {\n        this.setState(() => ({\n            referrerCourseId: id\n        }))\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return !courseObj.is_current\n        })\n\n        // Handle routes\n        if (this.state.referrerCourseId !== null) {\n            return <Redirect to={'/professor/' + this.state.referrerCourseId + '/lectures'} push />\n        }\n        return (\n            <List component=\"nav\">\n                {courses.map((courseObj, index) => {\n                    return (\n                        <CourseListItemNavEdit \n                            key={index} \n                            archive={true}\n                            profStore={this.profStore} \n                            apiProfService={this.apiProfService} \n                            courseId={courseObj.id}\n                            courseTitle={courseObj.title} \n                            courseYear={courseObj.year}\n                            courseTerm={courseObj.term}\n                            joinCode={courseObj.enroll_code} \n                        />\n                    )\n                })}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfArchivedCourses);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport ListOfArchivedCourses from '../ListOfArchivedCourses';\nimport DeleteCoursesList from '../DeleteCoursesList';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    },\n    containerDiv: {\n        paddingTop: theme.spacing.unit * 8\n    }\n});\n\n@observer\nclass ArchivedCoursesFrame extends React.Component {\n    state = {\n        toNewCourse: false,\n        deleteMode: false,\n        deletions: [],\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false,\n        showArchive: false,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n\n    handleToggleArchive() {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                showArchive: !prevState.showArchive\n            }\n        })\n    }\n\n    // gets courses to be deleted from child component\n    getDeletions = (delCourses) => {\n        this.setState({\n            deletions: delCourses\n        })\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const courseArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    courseArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (courseArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: courseArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.setState({ \n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteCourses(this.state.delIds);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewCourse === true) {\n            return <Redirect to='/professor/new' push />\n        }\n        let list = <ListOfArchivedCourses profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction=\"Delete\"\n        \n        if (this.state.deleteMode) {\n            list = <DeleteCoursesList profStore={this.profStore} getDeletions={this.getDeletions} archive={true} />\n            deleteAction=\"Done\"\n        }\n\n        var titleString = this.state.showArchive ? \"Archived Courses\" : \"Show Archived Courses\"\n        var delButton = \"\"\n        if (this.state.showArchive) {\n            delButton = deleteAction === 'Delete' ? <DeleteIcon /> : <DoneIcon />\n        } \n\n        return (\n            <div className={this.props.classes.containerDiv} >\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Grid container direction='row' >\n                                    <Grid item>\n                                        <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\"> {titleString} </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <IconButton color=\"primary\" onClick={this.handleToggleArchive.bind(this)}>\n                                            {this.state.showArchive ? <ExpandLess /> : <ExpandMore />}\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} >\n                                                {delButton}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                </Grid>  \n                            </Grid>\n                        </Grid>\n\n                        <Collapse in={this.state.showArchive} timeout=\"auto\" unmountOnExit>\n                            {list}\n                        </Collapse>\n\n                        <Dialog\n                            open={this.state.open}\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following course(s): \"}</DialogTitle>\n                            <DialogContent>\n                                {this.state.delTitles.map((title, index) => \n                                    <DialogContentText key={index} id=\"alert-dialog-description\">\n                                        {title}\n                                    </DialogContentText>\n                                                \n                                )}\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ArchivedCoursesFrame);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\nimport AllCoursesFrame from '../../../components/AllCoursesFrame';\nimport ArchivedCoursesFrame from '../../../components/ArchivedCoursesFrame';\n\nconst styles = theme => ({\n\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorHome extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    render() {\n        return (\n            <div>\n                <AllCoursesFrame profStore={this.profStore} apiProfService={this.apiProfService} />\n                <ArchivedCoursesFrame profStore={this.profStore} apiProfService={this.apiProfService} />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorHome);\n","export default class CourseObj {\n    constructor(course) {\n        if (course !== undefined) {\n            this.title = course.title;\n            this.id = course.id;\n            this.num = course.num;\n            this.dept = course.dept;\n            this.description = course.description;\n            this.term = course.term;\n            this.joinCode = course.joinCode;\n            this.year = course.year;\n            this.is_current = course.is_current;\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\nimport CourseObj from '../../../models/CourseObj';\n\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    subcontainer: {\n        display: 'flex',\n        direction: 'row',\n        alignItems: 'flex-start'\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorNewCourse extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n\n        this.state = {\n            toHome: false,\n            title: '',\n            dept: '',\n            num: '',\n            year: '',\n            term: '',\n            description: '',\n            formValid: false,\n            yearValid: false,\n            titleValid: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleValidation() {\n        var titleValid = true;\n        var yearValid = true;\n\n        if (this.state.title === '' ) {\n            titleValid = false;\n        }\n\n        if (isNaN(this.state.year)) {\n            yearValid = false;\n        }\n\n        this.setState({titleValid: titleValid, yearValid: yearValid, formValid: titleValid && yearValid})\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target\n        this.setState({ [name]: value }, () => { this.handleValidation() })\n    }\n\n    handleSubmit(event) {\n        // Send course to API\n        event.preventDefault()\n        this.apiProfService.addCourse(\n            new CourseObj(this.state)\n        )\n        // Close modal\n        this.setState({ toHome: true });\n    }\n\n\n    // TODO: Make the year and term and Dept a drop down\n    render() {\n        if (this.state.toHome === true) {\n            return <Redirect to='/professor' push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Course:\n                </Typography>\n                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                    <TextField\n                        label=\"Course Name\"\n                        name=\"title\"\n                        error={!this.state.titleValid}\n                        helperText=\"Course must have a title\"\n                        className={this.styles.textField}\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Department\"\n                        name=\"dept\"\n                        className={this.styles.textField}\n                        value={this.state.dept}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Course Number\"\n                        name=\"num\"\n                        className={this.styles.textField}\n                        value={this.state.num}\n                        onChange={this.handleChange}\n                        margin=\"none\"\n                    />\n\n                    <TextField\n                        label=\"Year\"\n                        name=\"year\"\n                        error={!this.state.yearValid}\n                        helperText=\"Year must be an integer\"\n                        className={this.styles.textField}\n                        value={this.state.year}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Term\"\n                        name=\"term\"\n                        className={this.styles.textField}\n                        value={this.state.term}\n                        onChange={this.handleChange}\n                        margin=\"none\"\n                    />\n\n                    <TextField\n                        label=\"Description\"\n                        name=\"description\"\n                        className={this.styles.textField}\n                        value={this.state.description}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        multiline={true}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        disabled={!this.state.formValid}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        > submit\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorNewCourse);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { inject } from 'mobx-react';\nimport Collapse from '@material-ui/core/Collapse';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LectureObj from '../../models/LectureObj';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MomentUtils from \"@date-io/moment\";\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 80,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    gridItem: {\n        margin: theme.spacing.unit\n    },\n    dateField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 30,\n    },\n    gridItemButton: {\n        margin: theme.spacing.unit*2\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 60,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass EditLectureDialog extends React.Component {\n\n    constructor(props) {\n        super(props)\n        MomentUtils.prototype.getStartOfMonth =\n          MomentUtils.prototype.startOfMonth;\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiService\n\n        const date = this.modifyDate(new Date());\n\n        this.state = {\n            open: false,\n            title: \"\",\n            courseId: \"\",\n            id: \"\",\n            scheduled: false,\n            titleValid: true,\n            formValid: false,\n            selectedDate: date,\n            dateValid: true,\n            openDate: date,\n            closeDate: date\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.lectureObj !== undefined) {\n            this.setState({\n                title: nextProps.lectureObj.title,\n                scheduled: nextProps.lectureObj.scheduled,\n                selectedDate: this.modifyDate(new Date(nextProps.lectureObj.date)),\n                courseId: nextProps.lectureObj.courseId,\n                id: nextProps.lectureObj.id\n            }, () => { this.handleValidation() })\n\n            if (nextProps.lectureObj.scheduled) {\n                this.setState({\n                    openDate: this.modifyDate(new Date(nextProps.lectureObj.open_date)),\n                    closeDate: this.modifyDate(new Date(nextProps.lectureObj.close_date))\n                }, () => { this.handleValidation() })\n            }\n        }\n    }\n\n    handleValidation() {\n        let dateValid = this.state.dateValid;\n        let titleValid = this.state.title !== ''\n\n        if (this.state.scheduled) {\n            dateValid = this.state.closeDate.getTime() >= this.state.openDate.getTime()\n        } else {\n            dateValid = true\n        }\n\n        this.setState({ titleValid: titleValid, dateValid: dateValid }, this.validateForm);\n    }\n    \n    validateForm() {\n        this.setState({formValid: this.state.titleValid && this.state.dateValid });\n    }\n\n    modifyDate = date => {\n        date = new Date(Date.UTC(date.getYear() + 1900, date.getMonth(), date.getDate(), 12, 0, 0));\n\n        return date;\n    }\n\n    handleDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            selectedDate: date\n        })\n    }\n\n    handleOpenDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({ \n            openDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleCloseDateChange = date => {\n        date = this.modifyDate(date);\n        \n        this.setState({\n            closeDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        }, () => { this.handleValidation() });\n    };\n\n    handleCheck = (event) => {\n        const {name, checked} = event.target\n        this.setState({\n            [name]: checked\n        }, () => {this.handleValidation() });\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    handleSubmit = () => {\n        // Send course to API\n        this.props.apiService.editLecture(\n            new LectureObj(this.state.title, this.state.selectedDate, this.state.id, this.state.courseId, null, \n                this.state.scheduled, this.state.openDate, this.state.closeDate)\n        )\n        .then(() => {\n            this.handleClose();\n        })\n    }\n    \n    render() {\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen}>\n                    <Typography variant=\"h7\" color=\"textPrimary\">\n                        Edit\n                    </Typography>\n                </Button>\n                <Dialog\n                    fullWidth\n                    scroll=\"paper\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Edit Lecture Information\"}</DialogTitle>\n                    <DialogContent>\n                    <Grid container direction=\"column\">\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                requiredtitle=\"true\"\n                                error={!this.state.titleValid}\n                                name=\"title\"\n                                label=\"Lecture Title\"\n                                className={this.styles.textField}\n                                value={this.state.title}\n                                onChange={this.handleChange}\n                                margin=\"normal\"\n                                multiline={true}\n                            />\n                        </Grid>\n\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid item className={this.styles.gridItem}>\n                                <DatePicker\n                                    margin=\"normal\"\n                                    label=\"Lecture Date\"\n                                    name=\"selectedDate\"\n                                    value={this.state.selectedDate}\n                                    onChange={this.handleDateChange.bind}\n                                    className={this.styles.dateField}\n                                />\n                            </Grid>\n                        </MuiPickersUtilsProvider>\n\n                        <Grid item className={this.styles.gridItem}>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                    <Checkbox\n                                        checked={this.state.scheduled}\n                                        onChange={this.handleCheck}\n                                        name=\"scheduled\"\n                                    />\n                                </Grid>\n\n                                <Grid item>\n                                    <Typography variant=\"body2\" color=\"textPrimary\">\n                                        Schedule the Lecture to Open and Close at Specific Dates\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Collapse in={this.state.scheduled} timeout=\"auto\" unmountOnExit>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.gridItem}>\n                                        <DatePicker\n                                            margin=\"normal\"\n                                            label=\"Start Date\"\n                                            name=\"openDate\"\n                                            value={this.state.openDate}\n                                            onChange={this.handleOpenDateChange}\n                                            className={this.styles.dateField}\n                                            error={!this.state.dateValid}\n                                        />\n                                    </Grid>\n\n                                    <Grid item className={this.styles.gridItem}>\n                                        <DatePicker\n                                            margin=\"normal\"\n                                            label=\"End Date\"\n                                            name=\"closeDate\"\n                                            value={this.state.closeDate}\n                                            onChange={this.handleCloseDateChange}\n                                            className={this.styles.dateField}\n                                            error={!this.state.dateValid}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                \n                            </MuiPickersUtilsProvider>\n                        </Collapse>\n\n                    </Grid>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.handleClose} type=\"button\" autoFocus color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} type=\"submit\" color=\"secondary\" disabled={!this.state.formValid}>\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditLectureDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditLectureDialog from '../../components/EditLectureDialog'\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport InputBase from '@material-ui/core/InputBase';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport LectureObj from '../../models/LectureObj';\nimport { baseURL } from '../../constants/api';\n\nconst styles = theme => ({\n    iconDone: {\n        color: theme.palette.primary.light\n    },\n    iconEdit: {\n        color: theme.palette.secondary\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 14,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\n@observer\nclass LectListItemNavEdit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.lecture = props.lecture\n    }\n    \n    state = {\n        editMode: false,\n        lecture: new LectureObj(null, new Date()),\n        newTitle: \"\",\n        nav: false\n    }\n\n    componentDidMount() {\n        if (this.lecture !== undefined) {\n            this.setState({\n                lecture: this.lecture,\n                newTitle: this.lecture.title\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.state.editMode) {\n            if (nextProps.lecture !== undefined && nextProps.lecture.id !== this.state.lecture.id) {\n                this.setState({\n                    lecture: nextProps.lecture,\n                    newTitle: nextProps.lecture.title\n                })\n            }\n        } \n    }\n\n    handleEdit = (e) => {\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    \n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n\n        // only close if the title is not empty space\n        if (this.state.newTitle.replace(/\\s/g, '').length > 0) {\n            this.apiProfService.changeLectureTitle(this.state.lecture.id, this.state.newTitle);\n            this.setState({\n                editMode: false\n            })\n        }\n        else { // defaults to not changing title if invalid title is input\n            this.setState({\n                editMode: false\n            })\n        }\n    }\n\n    handleToLecture = () => {\n        this.setState({\n            nav: true\n        })\n    }\n\n    handleExportGrades = () => {\n        this.apiProfService.exportGradesLecture(this.state.lecture.id)\n            .then(data => {\n                const element = document.createElement(\"a\");\n                const file = new Blob([data.fileData], {type: 'text/csv;charset=utf-8;'});\n                element.href = URL.createObjectURL(file);\n                element.download = data.fileName;\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n            })\n    }\n\n    render () {\n        if (this.state.nav) {\n            return  <Redirect to={'/professor/' + this.state.lecture.id + '/questions'} push />\n        }\n\n        return (\n            <div>\n                <ListItem button divider onClick={this.handleToLecture}>\n                    <ListItemText primary={this.state.lecture.title} secondary={''+ this.state.lecture.date} />\n                    <ListItemSecondaryAction>  \n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">  \n                            <Grid item>\n                                <Tooltip title=\"Edit Lecture\" placement=\"top\">\n                                    <EditLectureDialog lectureObj={this.state.lecture} />\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleExportGrades}>\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(LectListItemNavEdit);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport LectListItemNavEdit from '../LectListItemNavEdit';\n\n\n\nconst styles = theme => ({\n    icon: {\n        color: theme.palette.primary.light\n    }\n});\n\n@observer\nclass ListOfAllLectures extends React.Component {\n    state = {\n        lectures: []\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId  = props.courseId\n        this.apiProfService = props.apiProfService\n    }\n    componentDidMount() {\n        if (this.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(this.courseId)\n            })\n        }\n        \n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(nextProps.courseId)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <List component=\"nav\">\n                {this.state.lectures.map((lectureObj, index) => {\n                    return (\n                        <LectListItemNavEdit key={index} profStore={this.profStore} apiProfService={this.apiProfService} lecture={lectureObj} />\n                    )\n                })}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfAllLectures);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport CourseObj from '../../models/LectureObj';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.secondary.main\n    },\n    editRoot: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.primary.main\n    },\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n        color: '#FFFFFF'\n    },\n    termYear: {\n        margin: theme.spacing.unit,\n        color: '#FFFFFF',\n        fontStyle: 'italic'\n    },\n    textFieldShort: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 350\n    },\n    textFieldLong: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 1000\n    },\n    divider: {\n        backgroundColor: '#FFFFFF'\n    }\n});\n\n\n@observer\nclass CourseInfo extends React.Component {\n    state = {\n        parentCourse: new CourseObj(),\n        editMode: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n    }\n\n    componentDidMount() {\n        if (this.courseId !== undefined) {\n            if (!this.profStore.dataLoaded) {\n                this.apiProfService.loadData().then(() => {\n                    this.profStore.dataLoaded = true;\n                    this.setState({\n                        parentCourse: this.profStore.getCourseWithId(this.courseId)\n                    })\n                })\n            } else {\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.courseId)\n                })\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.setState({\n                parentCourse: this.profStore.getCourseWithId(nextProps.courseId)\n            })\n        }\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState(prevState => {\n            let newCourse = {...prevState.parentCourse}\n            newCourse[name] = value\n            return { parentCourse: newCourse, editMode: prevState.editMode }\n        })\n    }\n\n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n        this.apiProfService.changeCourseData(this.state.parentCourse.id, this.state.parentCourse);\n        this.setState({\n            editMode: false,\n        })\n    }\n\n    render() {\n        if (this.state.editMode) {\n            return (\n                <Paper className={this.styles.editRoot} elevation={1}>\n                    <Grid container direction='column' justify='space-between' alignItems='stretch' >\n                        <Grid item xs={12}>\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item xs={11}>\n                                    <TextField\n                                        label=\"Course Name\"\n                                        name=\"title\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.title}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Department\"\n                                        name=\"dept\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.dept}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Course Number\"\n                                        name=\"coursenum\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.coursenum}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n                                </Grid>\n\n                                <Grid item>\n                                    <Tooltip title=\"Done Editing\" placement=\"top\">\n                                        <IconButton color=\"secondary\" disabled={!this.state.parentCourse.title} onClick={this.handleEditClose}>\n                                            <DoneIcon className={this.styles.iconDone}/>\n                                        </IconButton>\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        label=\"Term\"\n                                        name=\"term\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.term}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Year\"\n                                        name=\"year\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.year}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <TextField\n                                label=\"Description\"\n                                name=\"description\"\n                                className={this.styles.textFieldLong}\n                                value={this.state.parentCourse.description}\n                                onChange={this.handleChange}\n                                multiline={true}\n                                margin=\"normal\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )\n        } else {\n            return (\n                <Paper className={this.styles.root} elevation={1}>\n                    <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                        <Grid item xs={12}>\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item>\n                                    <Typography className={this.styles.title} \n                                                variant=\"h4\" \n                                                color=\"inherit\">\n                                                    {this.state.parentCourse.dept} {this.state.parentCourse.coursenum} - {this.state.parentCourse.title} \n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Tooltip title=\"Edit Course Info\" placement=\"top\">\n                                        <IconButton color=\"primary\" onClick={this.handleEditOpen}>\n                                            <EditIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                                \n                            <Typography className={this.styles.termYear} variant=\"h8\" >{this.state.parentCourse.term} {this.state.parentCourse.year}</Typography>\n                            <Divider className={this.styles.divider} />\n                            <Typography className={this.styles.title} variant=\"body2\" color=\"inherit\">{this.state.parentCourse.description}</Typography>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )\n        }\n        \n    }\n}\n\nexport default withStyles(styles)(CourseInfo);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    }\n});\n\n@observer\nclass DeleteLecturesList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delLectures: [],\n        lectures: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId  = props.courseId\n    }\n    componentDidMount() {\n        let shouldDelete = []\n        this.profStore.getCourseLectures(this.courseId).map(lectureObj => \n           shouldDelete.push({\n            id: lectureObj.id,\n            checked: false,\n            title: lectureObj.title\n        }))\n        if (this.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(this.courseId),\n                delLectures: shouldDelete\n            })\n        }\n        \n    }\n\n    handleChange = id =>  event => {\n        // if id in lectures, then we are unchecking; otherwise we need to uncheck\n        this.state.delLectures.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delLectures: this.state.delLectures\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delLectures);\n    }\n\n\n    render() {\n        return (\n            <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delLectures\"\n                    value={this.state.delLectures}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delLectures.map((lect, index) => {\n                                return (\n                                    <ListItem divider key={index}>\n                                        <ListItemText primary={lect.title}/>\n                                        <ListItemSecondaryAction>\n                                            <FormControlLabel key={index} control={\n                                                    <Checkbox className={this.styles.checkBox} key={lect.id} checked={lect.checked} onChange={this.handleChange(lect.id)} value={lect.id} />\n                                                }/>\n                                        </ListItemSecondaryAction> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteLecturesList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport CourseObj from '../../models/CourseObj';\nimport ListOfAllLectures from '../ListOfAllLectures';\nimport CourseInfo from '../CourseInfo';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteLecturesList from '../DeleteLecturesList';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    }\n\n});\n\n\n@observer\nclass AllLecturesFrame extends React.Component {\n    state = {\n        toNewLecture: false,\n        referrerLectureIndex: -1,\n        parentCourse: new CourseObj(),\n        numLects: undefined,\n        deletions: [],\n        deleteMode: false,\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n    }\n\n    componentDidMount() {\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                this.profStore.dataLoaded = true\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.courseId)\n                })\n            })\n        } else {\n            this.setState({\n                parentCourse: this.profStore.getCourseWithId(this.courseId)\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.parentCourse.id !== this.props.courseId) {\n            if (!this.props.profStore.dataLoaded) {\n                this.apiProfService.loadData().then(() => {\n                    this.props.profStore.dataLoaded = true\n                    this.setState({\n                        parentCourse: this.profStore.getCourseWithId(this.props.courseId)\n                    })\n                })\n            } else {\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.props.courseId)\n                })\n            }\n        }\n    }\n\n    // gets lectures to be deleted from child component\n    getDeletions = (delLectures) => {\n        this.setState({\n            deletions: delLectures\n        })\n    }\n    handleNewLectureClick = () => {\n        this.setState(() => ({\n            toNewLecture: true,\n            numLects: this.profStore.getCourseLectures(this.state.parentCourse.id).length + 1\n        }))\n    }\n\n    handleLectureClick = index => {\n        this.setState(() => ({\n            referrerLectureIndex: index\n        }))\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const lectArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    lectArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (lectArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: lectArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n\n    }\n    handleClose = () => {\n        this.setState({\n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteLectures(this.state.delIds, this.state.parentCourse.id);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewLecture === true) {\n            return <Redirect to={{\n                pathname: '/professor/' + this.state.parentCourse.id + '/new',\n                state: { numLects: this.state.numLects }\n            }} />\n        } else if (this.state.referrerLectureIndex !== -1) {\n            return <Redirect to={'/professor/' + this.state.referrerLectureIndex + '/questions'} push />\n        }\n\n        let list = <ListOfAllLectures courseId={this.state.parentCourse.id} profStore={this.profStore} apiProfService={this.apiProfService} />\n        let course_info = <CourseInfo courseId={this.state.parentCourse.id} profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction = \"delete\"\n\n        if (this.state.deleteMode) {\n            list = <DeleteLecturesList courseId={this.state.parentCourse.id} profStore={this.profStore} getDeletions={this.getDeletions} />\n            deleteAction = \"done\"\n        }\n\n        return (\n            <div>\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        {course_info} \n\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\">List of Lectures</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top-start\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                                {deleteAction === 'delete' ? <DeleteIcon /> : <DoneIcon />}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button onClick={this.handleNewLectureClick} color=\"primary\">\n                                            <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                                            Add Lecture\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        {list}\n\n                    </CardContent>\n                </Card>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following lecture(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) =>\n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n\n                        )}\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            no\n                        </Button>\n                        <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                            yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nAllLecturesFrame.propTypes = {\n    courseId: PropTypes.string\n};\n\nexport default withStyles(styles)(AllLecturesFrame);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AllLecturesFrame from '../../../components/AllLecturesFrame';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\n\nconst styles = theme => ({\n\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorViewLectures extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    render() {\n        return (\n            <AllLecturesFrame profStore={this.profStore} apiProfService={this.apiProfService} courseId={this.props.match.params.courseId} />\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorViewLectures);\n","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { List, ChatBubbleOutline } from '@material-ui/icons';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n    vert: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass AddQuestionModal extends React.Component {\n    state = {\n        open: false,\n        toNewMCQuestion: false,\n        toNewFreeTextQuestion: false,\n        toNewSliderQuestion: false,\n        lectureId: null\n    };\n\n    constructor(props) {\n        super(props);\n        this.styles = props.classes;\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleMC = () => {\n        // Close modal \n        this.setState({ open: false, toNewMCQuestion: true });\n    }\n\n    handleFreeText = () => {\n        // Close modal\n        this.setState({ open: false, toNewFreeTextQuestion: true});\n    }\n\n    handleSlider = () => {\n        this.setState({ open: false, toNewSliderQuestion: true })\n    }\n\n    render() {\n        const { classes } = this.props;\n        if (this.state.toNewMCQuestion === true) {\n            // Lecture Id\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-mc'} push />\n        } else if (this.state.toNewFreeTextQuestion === true) {\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-free-text'} push />\n        }\n        else  if (this.state.toNewSliderQuestion === true) {\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-slider'} push />\n        }\n\n        return (\n            <div>\n                <Button onClick={this.handleOpen} color=\"primary\">\n                    <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                    Add Question\n                </Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"multiple choice\" onClick={this.handleMC}>\n                                    <div className={classes.vert}>\n                                        <List color=\"primary\" fontSize=\"large\" />\n                                        <Typography>\n                                            Multiple Choice\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"free text\" onClick={this.handleFreeText}>\n                                    <div className={classes.vert}>\n                                        <ChatBubbleOutline color=\"primary\" fontSize=\"large\" />\n                                        <Typography>\n                                            Free Text\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"slider\" onClick={this.handleSlider}>\n                                    <div className={classes.vert}>\n                                        <Icon color=\"primary\" fontSize=\"large\">linear_scale</Icon>\n                                        <Typography>\n                                            Slider\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nAddQuestionModal.propTypes = {\n    lectureId: PropTypes.string\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst AddQuestionModalWrapped = withStyles(styles)(AddQuestionModal);\n\nexport default AddQuestionModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { observer, inject } from 'mobx-react';\nconst socket = socketIOClient(socketioURL)\n\nconst styles = theme => ({\n    startLectureBtn: {\n        float: \"right\"\n    }\n});\n\n@inject(\"apiService\")\n@inject(\"profStore\")\n@observer\nclass OpenClosedButton extends React.Component {\n\n    state = {\n        isOpen: false, \n        questionId: \"\",\n    }\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    componentDidMount() {\n\n        this.setState({ isOpen: this.props.open, questionId: this.props.questionId })\n        \n    }\n\n    // this is to detect if the scrolling question button has opened or closed a question\n    componentWillReceiveProps(nextProps) {\n        \n        if (nextProps.parentLecture.id !== this.props.parentLecture.id) {\n            this.setState({ isOpen: nextProps.open, questionId: nextProps.questionId })\n        }\n        else {\n            if (nextProps.recentlyOpenedId !== undefined) {\n                if (nextProps.recentlyOpenedId === this.state.questionId && !this.state.isOpen) {\n                    this.props.handleToUpdate(true);\n                    this.setState({ isOpen: true })\n                }\n            }\n            if (nextProps.recentlyClosedId !== undefined) {\n                if (nextProps.recentlyClosedId === this.state.questionId && this.state.isOpen) {\n                    this.props.handleToUpdate(false);\n                    this.setState({ isOpen: false })\n                }\n            }\n        }\n    }\n\n    handleBtnClick() {\n        \n        if (!this.state.isOpen) {\n            // Handle the \"Open Question\"\n            console.log(\"openeint the quesiton in button\")\n            this.props.apiService.openQuestion(this.props.questionId, this.props.parentLecture.id)\n            socket.emit('subscribe professor', this.props.questionId)\n            this.props.handleClick(this.props.questionId)\n            this.props.handleToUpdate(true)\n            this.setState({ isOpen: true })\n        }\n        else {\n            // Handle the \"Close Question\"\n            console.log(\"closing question in button\")\n            this.props.apiService.closeQuestion(this.props.questionId, this.props.parentLecture.id)\n            this.props.handleToUpdate(false)\n            this.props.handleListClose(this.props.questionId)\n            this.setState({ isOpen: false })\n        }\n    }\n\n    render() {\n        return (\n            <Collapse in={!this.props.parentLecture.scheduled}>\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleBtnClick()}\n                    className={this.styles.startLectureBtn}>\n                    {!this.state.isOpen ? \"Open\" : \"Close\"}\n                </Button>\n            </Collapse>\n        );\n    }\n}\n\nexport default withStyles(styles)(OpenClosedButton);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Timer from '@material-ui/icons/Timer';\nimport { observer } from 'mobx-react';\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    card: {\n        marginBottom: 10\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n@observer\nclass BaseStatsComponent extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            time: 0,\n            isOn: false,\n            questionTitle: \"\",\n            hidden: props.hidden\n        }\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({ hidden: this.props.hidden })\n    }\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.props.question.opened_at)\n        }), 1);\n    }\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidUpdate() {\n        if (this.props.timer) {\n            if (!this.props.hidden && !this.state.isOn) {\n                this.startTimer()\n            }\n            else if (this.props.hidden && this.state.time !== 0 && this.state.isOn) {\n                this.stopTimer()\n                this.resetTimer()\n            }\n        }\n        if (this.props.questionTitle !== this.state.questionTitle) {\n            this.setState({ questionTitle: this.props.questionTitle })\n        }\n\n        if (this.props.hidden !== this.state.hidden ){\n            this.setState({ hidden: this.props.hidden })\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopTimer()\n        this.resetTimer()\n        this.setState({ hidden: true })\n    }\n\n\n    render() {\n        return (\n            <Card className={this.styles.card} hidden={this.state.hidden}>\n                <CardContent>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Statistics for {this.props.questionTitle}\n                    </Typography>\n                    {this.props.timer ? (\n                        <Typography variant=\"subtitle2\" color=\"inherit\" hidden={!this.props.timer} >\n                            <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                        </Typography>\n                    ) : null\n                    }\n                    {this.props.children}\n                    <Typography variant=\"body1\" color=\"inherit\">\n                        Total Responses: {this.props.responsesNumber}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(BaseStatsComponent);","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { Bar, defaults } from 'react-chartjs-2';\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass MCQuestionStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            data: {},\n            responsesNumber: 0,\n            update: false,\n            override: true\n        }\n        defaults.global.legend.display = false;\n        defaults.global.tooltips.enabled = false;\n    }\n\n    componentDidMount() {\n\n        this.setState({ override: this.props.override })\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId !== 0) {\n            const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n            socket.emit('subscribe professor', question.id)\n            const labels = []\n            for (var i = 0; i < question.number_of_options; i++) {\n                let currLabel = question[\"option\" + (i + 1)]\n                if (currLabel.length > 10)\n                    currLabel = \"Option \" + (i + 1)\n                labels.push(currLabel)\n            }\n\n            this.setState({\n                question: question,\n                data: {\n                    labels: labels\n                }\n            })\n        }\n\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId === 0) {\n            this.setState({\n                question: { id: 0, data: { labels: [] } }\n            })\n        }\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    const values = []\n\n                    const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }]\n                        },\n                        responsesNumber: msg.count,\n                        question: question,\n                    })\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    const values = []\n\n                    const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }]\n                        },\n                        responsesNumber: msg.count,\n                        question: question\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId)\n        this.setState({ question: question, override: nextProps.override })\n        if (this.state.question.id !== nextProps.selectedQuestionId && nextProps.selectedQuestionId !== 0) {\n            \n            socket.emit('subscribe professor', question.id)\n            const labels = []\n            for (var i = 0; i < question.number_of_options; i++) {\n                let currLabel = question[\"option\" + (i + 1)]\n                if (currLabel.length > 10)\n                    currLabel = \"Option \" + (i + 1)\n                labels.push(currLabel)\n            }\n\n            this.setState({\n                data: {\n                    labels: labels\n                }\n            })\n        }\n\n        if (this.state.question.id !== nextProps.selectedQuestionId && nextProps.selectedQuestionId === 0) {\n            this.setState({\n                question: { id: 0, data: { labels: [] } }\n            })\n        }\n        if (!nextProps.override) {\n            socket.on('new results', (msg) => {\n\n                if (msg.question_id === nextProps.selectedQuestionId) {\n                    const values = []\n\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n                    const labels = []\n                    for (var j = 0; j < question.number_of_options; j++) {\n                        let currLabel = question[\"option\" + (j + 1)]\n                        if (currLabel.length > 10)\n                            currLabel = \"Option \" + (j + 1)\n                        labels.push(currLabel)\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }],\n                            labels: labels\n                        },\n                        responsesNumber: msg.count,\n                    })\n                }\n            })\n        } else {\n            nextProps.apiService.loadAnswers(nextProps.selectedQuestionId).then((msg) => {\n                if (msg.question_id === nextProps.selectedQuestionId) {\n                    const values = []\n\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n                    const labels = []\n                    for (var j = 0; j < question.number_of_options; j++) {\n                        let currLabel = question[\"option\" + (j + 1)]\n                        if (currLabel.length > 10)\n                            currLabel = \"Option \" + (j + 1)\n                        labels.push(currLabel)\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }],\n                            labels: labels\n                        },\n                        responsesNumber: msg.count,\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        const options = {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        userCallback: function (label, index, labels) {\n                            // when the floored value is the same as the value we have a whole number\n                            if (Math.floor(label) === label) {\n                                return label;\n                            }\n\n                        },\n                    }\n                }],\n            }\n        }\n\n        return (\n            <BaseStatsComponent question={this.state.question}\n                responsesNumber={this.state.responsesNumber}\n                timer={!this.state.override} questionTitle={this.state.question.question_title}\n                hidden={this.state.override ? false : !this.state.question.is_open} >\n                <Bar key={this.props.selectedQuestionId} data={this.state.data} options={options} />\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default MCQuestionStats;","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass MCQuestionStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            responsesNumber: 0,\n            responses: {},\n            override: false,\n        }\n    }\n\n    componentDidMount() {\n        const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n        this.setState({ override: this.props.override, question: question })\n\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId !== 0) {\n            socket.emit('subscribe professor', question.id)\n        }\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.setState({\n                        responsesNumber: msg.count,\n                        responses: msg.answers,\n                    })\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                \n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.setState({\n                        responsesNumber: msg.count,\n                        responses: msg.answers\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const next_question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId);\n\n        this.setState({ override: nextProps.override, question: next_question})\n        \n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        return (\n            <BaseStatsComponent question={this.state.question} responsesNumber={this.state.responsesNumber} timer={!this.state.override} questionTitle={this.state.question.question_title} hidden={this.state.override ? false : !this.state.question.is_open}  >\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Response</TableCell>\n                            <TableCell align=\"right\">Frequency</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.keys(this.state.responses).map((response, index) => {\n                            return (\n                                <TableRow key={index}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {response}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{this.state.responses[response]}</TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </Table>\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default MCQuestionStats;","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { Bar, defaults } from 'react-chartjs-2';\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass SliderStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            data: {},\n            responsesNumber: 0,\n            override: false,\n        }\n        defaults.global.legend.display = false;\n        defaults.global.tooltips.enabled = false;\n    }\n\n    componentDidMount() {\n        if (this.props.selectedQuestionId !== 0) {\n            const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n            this.setState({ question: question })\n        }\n        if (this.state.question.id !== this.props.selectedQuestionId) {\n            if (this.props.selectedQuestionId !== 0) {\n                const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                socket.emit('subscribe professor', question.id)\n                this.updateChartLabels(question)\n            } else {\n                this.setState({\n                    question: { id: 0, data: { labels: [] } }\n                })\n            }\n        }\n\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.updateChartData(msg.answers, msg.count)\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.updateChartData(msg.answers, msg.count)\n                }\n            })\n        }\n        this.setState({ override: this.props.override })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const next_question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId);\n        this.setState({ override: nextProps.override, question: next_question })\n        if (next_question.id === this.state.question.id) {\n\n            if (this.state.question.id !== nextProps.selectedQuestionId) {\n                if (nextProps.selectedQuestionId !== 0) {\n                    socket.emit('subscribe professor', next_question.id)\n                    this.updateChartLabels(next_question)\n                } else {\n                    this.setState({\n                        question: { id: 0, data: { labels: [] } }\n                    })\n                }\n            }\n    \n            if (!nextProps.override) {\n                socket.on('new results', (msg) => {\n                    if (msg.question_id === nextProps.selectedQuestionId) {\n                        this.updateChartData(msg.answers, msg.count)\n                    }\n                })\n            } else {\n                nextProps.apiService.loadAnswers(nextProps.selectedQuestionId).then((msg) => {\n                    if (msg.question_id === nextProps.selectedQuestionId) {\n                        this.updateChartData(msg.answers, msg.count)\n                    }\n                })\n            }\n        }\n    }\n\n    updateChartLabels(question) {\n        const labels = []\n        for (var i = 0; i <= 100; i++) {\n            if (i % 10 === 0)\n                labels.push(i)\n            else \n                labels.push('')\n        }\n\n        this.setState({\n            question: question,\n            data: {\n                labels: labels\n            }\n        })\n    }\n\n    updateChartData(values, count) {\n        this.setState({\n            data: {\n                datasets: [{\n                    label: \"Question Statistics\",\n                    backgroundColor: '#E9C46A',\n                    borderColor: '#E9C46A',\n                    data: values,\n                }]\n            },\n            responsesNumber: count\n        })\n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        const options = {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        userCallback: function (label, index, labels) {\n                            // when the floored value is the same as the value we have a whole number\n                            if (Math.floor(label) === label) {\n                                return label;\n                            }\n\n                        },\n                    }\n                }],\n            }\n        }\n\n        return (\n            <BaseStatsComponent question={this.state.question} responsesNumber={this.state.responsesNumber} timer={!this.state.override} questionTitle={this.state.question.question_title} hidden={this.state.override ? false : !this.state.question.is_open}  >\n                <Bar key={this.props.selectedQuestionId} data={this.state.data} options={options} />\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default SliderStats;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InsertChartOutlined from '@material-ui/icons/InsertChartOutlined';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\nimport MCQuestionStats from '../../components/MCQuestionStats';\nimport FreeTextStats from '../../components/FreeTextStats';\nimport SliderStats from '../../components/SliderStats';\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n    }\n});\n\nclass ViewStatsModal extends React.Component {\n    state = {\n        open: false,\n        question: {id: 0}\n    };\n\n    constructor(props) {\n        super(props);\n        this.styles = props.classes;\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        let stats;\n\n        if (this.props.question.question_type === \"multiple_choice\") {\n            stats = (<MCQuestionStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n        else if (this.props.question.question_type === \"free_text\") {\n            stats = (<FreeTextStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n        else if (this.props.question.question_type === \"slider\") {\n            stats = (<SliderStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n\n        return (\n            <div>\n                <IconButton color=\"secondary\" onClick={this.handleOpen}>\n                    <InsertChartOutlined />\n                </IconButton>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        {stats}\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst ViewStatsModalWrapped = withStyles(styles)(ViewStatsModal);\n\nexport default ViewStatsModalWrapped;","export class QuestionObj {\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, scheduled, opened_at, closed_at, created_at, modified_at, answer) {\n\n        this.id = id;\n        this.lecture_id = lecture_id;\n        this.question_type = question_type;\n        this.question_title = question_title;\n        this.question_image = question_image;\n        this.correct_answer = correct_answer;\n        this.creator_id = creator_id;\n        this.is_open = is_open;\n        this.opened_at = opened_at;\n        this.closed_at = closed_at;\n        this.created_at = created_at;\n        this.modified_at = modified_at;\n        this.answer = answer;\n        this.scheduled = scheduled;\n    }\n\n}\n\nexport class MultipleChoiceQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, scheduled, opened_at, closed_at, created_at, modified_at, answer, option1, option2, option3, option4, option5, number_of_options) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, scheduled, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.option1 = option1;\n        this.option2 = option2;\n        this.option3 = option3;\n        this.option4 = option4;\n        this.option5 = option5;\n        this.number_of_options = number_of_options;\n    }\n}\n\nexport class SliderQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, scheduled, opened_at, closed_at, created_at, modified_at, answer, lower_label, upper_label) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, scheduled, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.lower_label = lower_label;\n        this.upper_label = upper_label;\n    }\n}\n\nexport class FreeTextQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, scheduled, opened_at, closed_at, created_at, modified_at, answer, word_limit) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, scheduled, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.word_limit = word_limit;\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FreeTextQuestionObj } from '../../models/QuestionObj';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main\n    },\n    item: {\n        paddingBottom: theme.spacing.unit\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit\n    },\n    icon: {\n        margin: theme.spacing.unit\n    }\n});\n\n@observer\nclass EditFRQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: \"\",\n        correct_answer: \"\",\n        error: \"\",\n        titleValid: true,\n        question_image: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n        //this.handleClick = props.handleClick\n    }\n\n    componentDidMount() {\n        if (this.props.questionObj.correct_answer !== null) {\n            this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image, correct_answer: this.props.questionObj.correct_answer })\n        }\n        else {\n            this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image })\n        }\n        \n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleValidation() {\n        if (this.state.title === '') {\n            this.setState({\n                error: \"This field is required\",\n                titleValid: false,\n            })\n        } else {\n            this.setState({\n                error: \"\",\n                titleValid: true,\n            });\n        }\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.handleValidation(name, value) });\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if(this.state.titleValid) {\n            this.props.getEdits( \n                new FreeTextQuestionObj(this.props.questionObj.id, \n                    this.props.questionObj.lecture_id, \"free_text\", \n                    this.state.title, this.state.question_image, this.state.correct_answer, \n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, this.props.questionObj.scheduled, \n                    this.props.questionObj.opened_at, this.props.questionObj.closed_at, \n                    this.props.questionObj.created_at, null, null, this.props.questionObj.word_limit))\n        }\n        this.handleClose();\n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                <DialogTitle id=\"alert-dialog-title\">{\"Edit Free Text Question\"}</DialogTitle>\n                <DialogContent>\n                    <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={!this.state.titleValid && !(this.state.error === \"\")}\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.error}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    fullWidth\n                                    label=\"Correct Answer\"\n                                    value={this.state.correct_answer}\n                                    onChange={this.handleChange('correct_answer')}\n                                    margin=\"normal\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </form>\n\n                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                <Grid item className={this.styles.item}>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        Image Preview\n                                    </Typography>\n                                </Grid>\n                                <Grid item className={this.styles.item}>\n                                    <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                                </Grid>\n                            </Collapse>\n\n                            <Grid item className={this.styles.item}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                        >\n                                        {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                        <input\n                                            type=\"file\"\n                                            style={{ display: \"none\" }}\n                                            onChange={this.encodeImageFileAsURL}\n                                        />\n                                        </Button>\n                                    </Grid>\n\n                                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                        <Grid item className={this.styles.buttonItem}>\n                                            <Button\n                                                variant=\"contained\"\n                                                component=\"label\"\n                                                onClick={this.removeImage}\n                                            >\n                                            Remove Image\n                                            </Button>\n                                        </Grid>\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                        cancel\n                    </Button>\n                    <Button onClick={this.handleSubmit} color=\"secondary\" disabled={!this.state.titleValid}>\n                        submit\n                    </Button>\n            </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditFRQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { MultipleChoiceQuestionObj } from '../../models/QuestionObj';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main\n    },\n    select: {\n        width: 200\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit,\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit * 2,\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 12,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\nfunction answersValid(new_options) {\n    if (new_options.length < 2) return false;\n    for (const option of new_options) {\n        for (const val of Object.values(option)) {\n            if (val === undefined) {\n                return false; \n            }\n            else {\n                if (val.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n            }\n        }     \n    }\n    return true;\n}\n\n@observer\nclass EditMCQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: '',\n        correct_answer: '',\n        number_of_options: \"\",\n        question_image: \"\",\n        options: [], // necessary because of controlled form\n        answer_choices: {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"}, // must be set for input base to be controlled\n        checked: {option1: false, option2: false, option3: false, option4: false, option5: false},\n        should_delete: {option1:false, option2:false, option3:false, option4:false, option5:false},\n        titleError: \"\",\n        formValid: true,\n        titleValid: true,\n        hasAnswers: true,\n        optionsValid: true,\n        delete_mode: false,\n        deleteDisabled: false,\n        deleteConfirmDisabled: false,\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        let answer_choices = {};\n        let checked = this.state.checked;\n        let correct = this.props.questionObj.correct_answer \n        const number_of_options = Number(this.props.questionObj.number_of_options);\n        let options = [];\n\n        for (let i = 1; i <= number_of_options; i++) {\n            let option_string= \"option\" + i.toString();\n            answer_choices[option_string] = this.props.questionObj[option_string];\n            options.push({ [option_string]: answer_choices[option_string] })\n        }\n        if (correct !== null) {\n            correct = \"option\" + correct;\n            checked[correct] = true;\n        }\n       \n        this.setState({ title: this.props.questionObj.question_title,\n                        question_image: this.props.questionObj.question_image,\n                        correct_answer: correct,\n                        number_of_options: number_of_options,\n                        answer_choices: answer_choices,\n                        checked: checked,\n                        options: options\n        })\n       \n        \n    }\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n\n    handleDelete() {\n\n        let answer_choices = this.state.answer_choices;\n        let number_of_options = this.state.number_of_options;\n        let options = [];\n        let correct_answer = \"\";\n        let checked = {option1: false, option2: false, option3: false, option4: false, option5: false};\n\n        for (const k of Object.keys(this.state.should_delete)) {\n            if (this.state.should_delete[k]) {\n                number_of_options--;\n            }\n        }\n\n        // abort if less than two options remain, but button disabling should prevent this anyway\n        if (number_of_options < 2) {\n            this.setState({\n                should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n                delete_mode: false,\n            })\n            return;\n        }\n\n        let index = 1;\n        for (const k of Object.keys(answer_choices)) {\n            if (!this.state.should_delete[k]) {\n                let option_string = \"option\" + index.toString();\n                options.push({ [option_string]: answer_choices[k] });\n                if (k === this.state.correct_answer) correct_answer = option_string;\n                index++;\n                if (index > number_of_options) {\n                    break;\n                }\n            }\n        }\n\n        answer_choices = {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"};\n        // this is not the nicest way to do this, but it's functional, and I couldn't find my bug in my nicer code\n        options.map(option => answer_choices[Object.keys(option)[0]] = Object.values(option)[0]);\n\n        if (correct_answer !== \"\" && correct_answer !== null) checked[correct_answer] = true;\n\n        this.setState({\n            should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n            answer_choices: answer_choices,\n            correct_answer: correct_answer,\n            checked: checked,\n            number_of_options: number_of_options,\n            delete_mode: false,\n            options: options,\n            deleteDisabled: number_of_options <= 2,\n        }, () => { this.validateFields('answer_choices', options) });\n       \n    }\n\n    validateFields(name, value) {\n        let titleValid = this.state.titleValid;\n        let errors = this.state.errors;\n        let has_answers = this.state.hasAnswers\n        let optionsValid = this.state.optionsValid;\n        let titleError = this.state.titleError;\n\n        switch(name) {\n            case \"title\":\n                if (value === \"\") {\n                    titleError = \"This field is required\";\n                    titleValid = false;\n                }\n                else {\n                    titleError = '';\n                    titleValid = true;\n                }\n                break;\n            case \"number_of_options\":\n                has_answers = true;\n                optionsValid = answersValid(value);\n                break;\n            case \"answer_choices\":\n                optionsValid = answersValid(value);\n                break;\n            default:\n        }\n       \n        this.setState({ errors: errors, \n                        titleValid: titleValid, \n                        titleError: titleError,\n                        hasAnswers: has_answers,\n                        optionsValid: optionsValid,\n         }, this.validateForm);\n\n    }\n    \n    validateForm() {\n        const titleValid = this.state.title.replace(/^\\s+|\\s+$/g, '') !== \"\";\n        if (!titleValid) {\n            this.setState({ titleValid: false })\n        }\n        this.setState({ formValid: titleValid && this.state.hasAnswers && this.state.optionsValid });\n    }\n\n\n    handleOption = option => event => {\n        const key = Object.keys(option)[0];\n        let answer_choices = this.state.answer_choices;\n        let options = this.state.options;\n        answer_choices[key] = event.target.value;\n        options.find(x => Object.keys(x)[0] === key)[key] = event.target.value\n        this.setState({\n            answer_choices: answer_choices,\n            options: options,\n        }, () => { this.validateFields('answer_choices', options) });\n    }\n    \n    handleSetNumberOfOptions = name => event => {\n        let options = [];\n        let answer_choices = this.state.answer_choices;\n        let deleteDisabled = event.target.value <= 2;\n\n        for (let i = 1; i <= event.target.value; i++) {\n            let option_string = \"option\" + i.toString();\n            options.push({ [option_string]: this.state.answer_choices[option_string] })\n        }\n        if (event.target.value < this.state.number_of_options) {\n            for (let i = event.target.value + 1; i <=5; i++) {\n                let option_string = \"option\" + i.toString();\n                answer_choices[option_string] = \"\";\n            }\n        }\n\n        this.setState({\n            answer_choices: answer_choices,\n            number_of_options: event.target.value,\n            options: options,\n            deleteDisabled: deleteDisabled,\n        }, () => { this.validateFields(name, options)});\n\n    }\n\n    handleDeleteQueue = name => event => {\n        let should_delete = this.state.should_delete;\n        if (event.target.checked) {\n            should_delete[name] = true;\n        }\n        else {\n            should_delete[name] = false;\n        }\n\n        // compute if confirm button should be disabled\n        let numRemainingOptions = 0;\n        for (const k of Object.keys(should_delete)) {\n            if (!should_delete[k]) {\n                numRemainingOptions++;\n            }\n        }\n        \n        // adjust for the \"invisible\" options which have been counted as well\n        numRemainingOptions -= (5 - this.state.number_of_options);\n\n        this.setState({\n            should_delete: should_delete,\n            deleteConfirmDisabled: numRemainingOptions < 2,\n        })\n    }\n\n    handleCheck = option => event => {\n        const key = Object.keys(option)[0];\n        let checked = this.state.checked;\n        let correct_answer = key;\n        checked[key] = event.target.checked;\n\n        if (this.state.correct_answer === key) {\n            checked[key] = false;\n            correct_answer = \"\";\n        }\n    \n        this.setState({\n            correct_answer: correct_answer,\n            checked: checked\n        })\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.validateFields(name, value) });\n    };\n\n    setDeleteMode() {\n        const delete_mode = !this.state.delete_mode;\n        this.setState({ delete_mode: delete_mode });\n    }\n\n    handleOpen =  () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.formValid) {\n            let correct_answer = \"\";\n            if (this.state.correct_answer !== \"\" && this.state.correct_answer !== null) {\n                correct_answer = this.state.correct_answer.substring(6, 7);\n            }\n        \n            if(this.state.formValid) {\n                this.props.getEdits( \n                    new MultipleChoiceQuestionObj(this.props.questionObj.id,\n                    this.props.questionObj.lecture_id, \"multiple_choice\",\n                    this.state.title, this.state.question_image, correct_answer,\n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, this.props.questionObj.scheduled, this.props.questionObj.opened_at, this.props.questionObj.closed_at,\n                    this.props.questionObj.created_at, this.props.questionObj.modified_at, this.props.questionObj.answer,\n                    this.state.answer_choices.option1, this.state.answer_choices.option2, this.state.answer_choices.option3, this.state.answer_choices.option4, this.state.answer_choices.option5,\n                    this.state.number_of_options))\n            }\n            this.handleClose();\n        }  \n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    scroll=\"paper\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Edit Multiple Choice Question\"}</DialogTitle>\n                    <DialogContent>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item className={this.styles.item}>\n                                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        error={!this.state.titleValid}\n                                        id=\"standard-name\"\n                                        label=\"Question Title\"\n                                        value={this.state.title}\n                                        onChange={this.handleChange('title')}\n                                        margin=\"normal\"\n                                        helperText={this.state.titleError}\n                                    />\n                                </form>\n                            </Grid>\n                            <Grid item className={this.styles.item}>\n                                <form autoComplete=\"off\">\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"number-options\">number of answer choices</InputLabel>\n                                        <Select\n                                            value={this.state.number_of_options}\n                                            onChange={this.handleSetNumberOfOptions('number_of_options')}\n                                            className={this.styles.select}\n                                            disabled={this.state.delete_mode}\n                                            inputProps={{\n                                            name: 'number_of_options',\n                                            id: 'number-options',\n                                            }}\n                                        >\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </form>\n                            </Grid>\n                            {this.state.hasAnswers && \n                            <Grid item>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            {this.state.delete_mode ? \n                                                <TableCell> Delete?</TableCell>\n                                                :\n                                                <TableCell>Correct Answer?</TableCell>\n                                            }\n                                            <TableCell>Answer Choices</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                    {this.state.delete_mode ? \n                                    this.state.options.map((option, index) => \n                                            <TableRow key={index}> \n                                                <TableCell>\n                                                    <Checkbox\n                                                        checked={this.state.should_delete[Object.keys(option)[0]]}\n                                                        onChange={this.handleDeleteQueue(Object.keys(option)[0])}\n                                                        value={Object.keys(option)[0]}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Typography variant=\"body1\" align=\"justify\"> {this.state.answer_choices[Object.keys(option)[0]]}</Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                        :\n                                        this.state.options.map((option, index) => \n                                            <TableRow key={index}>\n                                                <TableCell>\n                                                    <Checkbox\n                                                        checked={this.state.correct_answer === Object.keys(option)[0]}\n                                                        onChange={this.handleCheck(option)}\n                                                        value={Object.keys(option)[0]}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <FormControl>\n                                                        <InputBase\n                                                        multiline\n                                                        id=\"bootstrap-input\"\n                                                        name={Object.keys(option)[0]}\n                                                        value={this.state.answer_choices[Object.keys(option)[0]]}\n                                                        onChange={this.handleOption(option)}\n                                                        classes={{\n                                                            input: this.styles.bootstrapInput\n                                                        }}\n                                                        />\n                                                    </FormControl>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    }\n                                    </TableBody>\n                                </Table>    \n                    \n                                    \n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    {!this.state.delete_mode ? \n\n                                    <IconButton onClick={this.setDeleteMode.bind(this)} color=\"secondary\" disabled={this.state.deleteDisabled}>\n                                        <DeleteIcon />\n                                    </IconButton>\n\n                                    :\n                                    \n                                    <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} disabled={this.state.deleteConfirmDisabled}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                    </IconButton>\n                            \n                                    }     \n                                </Grid>\n                            </Grid>\n                            }\n\n                            <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                <Grid item className={this.styles.item}>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        Image Preview\n                                    </Typography>\n                                </Grid>\n                                <Grid item className={this.styles.item}>\n                                    <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                                </Grid>\n                            </Collapse>\n\n                            <Grid item className={this.styles.item}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                        >\n                                        {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                        <input\n                                            type=\"file\"\n                                            style={{ display: \"none\" }}\n                                            onChange={this.encodeImageFileAsURL}\n                                        />\n                                        </Button>\n                                    </Grid>\n\n                                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                        <Grid item className={this.styles.buttonItem}>\n                                            <Button\n                                                variant=\"contained\"\n                                                component=\"label\"\n                                                onClick={this.removeImage}\n                                            >\n                                            Remove Image\n                                            </Button>\n                                        </Grid>\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <form onSubmit={this.handleSubmit}>\n                            <Button onClick={this.handleClose} type=\"button\" autoFocus color=\"secondary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleSubmit} type=\"submit\" color=\"secondary\" disabled={!this.state.formValid}>\n                                Submit\n                            </Button>\n                        </form>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditMCQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { SliderQuestionObj } from '../../models/QuestionObj';\nimport Switch from '@material-ui/core/Switch';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    button:{\n        color: theme.palette.secondary.main\n    },\n    icon: {\n        margin: theme.spacing.unit\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        marginRight: theme.spacing.unit*2.5,\n        width: 45\n    },\n    percentText: {\n        color: \"white\",\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"0.75em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n    },\n    entry: {\n        maxWidth: 500,\n        paddingBottom: theme.spacing.unit\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit * 2,\n    },\n    titleContainer: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit*2\n    },\n    slidercontainer: {\n        paddingRight: theme.spacing.unit*2\n    },\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        flexWrap: 'wrap',\n    },\n\n    andor: {\n        padding: theme.spacing.unit,\n        width: \"15%\"\n    },\n});\n\nconst answerBoundOptions = [\n    {\n      value: '=',\n      label: '=',\n    },\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n  const answerBoundOptionsRange = [\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n\n@observer\nclass EditSLQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: '',\n        titleError: \"\",\n        question_image: \"\",\n        labels: {lower:\"0%\", upper:\"100%\"}, // labels on slider\n        answer_bounds: {upper:\"\", lower:\"\"}, \n        range: false, // whether or not correct answer has a range\n        rangeVal: \"not_range\", // added for radio group purposes\n        equality_operators: {upper:\"\", lower:\"\"},\n        slider_value: 50,\n        has_correct_answer: false,\n        custom_labels: false,\n        fieldsValid: {title: true, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true},\n        disabled: false\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        const {lower_label, upper_label, correct_answer} = this.props.questionObj\n\n        this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image })\n\n        if (lower_label !== null) {\n            if (lower_label !== \"0%\" || upper_label !== \"100%\") {\n                this.setState({\n                    labels: {lower: lower_label, \n                             upper: upper_label\n                            }\n                })\n            }\n        }\n        \n        if (correct_answer) {\n            const correct_arr = correct_answer.split(\" \");\n            if (correct_arr.length === 2) {\n                this.setState({\n                    answer_bounds: {\n                        lower: correct_arr[1],\n                        upper: \"\",\n                    },\n                    equality_operators: {\n                        lower: correct_arr[0],\n                        upper: \"\"\n                    },\n                })\n            }\n            else {\n                this.setState({\n                    answer_bounds: {\n                        lower: correct_arr[1],\n                        upper: correct_arr[4],\n                    },\n                    equality_operators: {\n                        lower: correct_arr[0],\n                        upper: correct_arr[3]\n                    },\n                    range: true,\n                    rangeVal: \"range\",\n                })\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    validateAnswers() {\n        let disabled = false;\n\n        if (this.state.custom_labels && this.state.has_correct_answer) {\n            const keys = Object.keys(this.state.fieldsValid);\n            for (const key of keys) {\n                if (!this.state.fieldsValid[key]) disabled = true;\n            }\n        }\n        else {\n            if (this.state.custom_labels) {\n                if (!this.state.fieldsValid.lower_label || !this.state.fieldsValid.upper_label || !this.state.fieldsValid.title) disabled = true;\n            }\n            else {\n                if (this.state.has_correct_answer) {\n                    if (!this.state.fieldsValid.lower_bound || !this.state.fieldsValid.upper_bound || !this.state.fieldsValid.equality_operators) {\n                        disabled = true;\n                    }\n                }\n                else {\n                    if (!this.state.fieldsValid.title) disabled = true;\n                }\n            }\n        }\n       \n        if (!this.state.fieldsValid.title) disabled = true;\n\n        this.setState({ disabled: disabled })\n    }\n    \n    // handles the switch to control setting a correct answer for the question\n    setCorrectAnswer = name => event => {\n\n        if (!event.target.checked) {\n            this.setState({\n                answer_bounds:{upper:\"\", lower:\"\"},\n                equality_operators: {upper:\"\", lower:\"\"}, \n                range: false,\n                rangeVal: \"not_range\", \n            })\n        }\n       \n\n        this.setState({ [name]: event.target.checked },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n    // controls switch to set custom labels for bounds\n    setCustomLabels = name => event => {\n        if (!event.target.checked) {\n            let fieldsValid = this.state.fieldsValid;\n            fieldsValid.lower_label = true;\n            fieldsValid.upper_label = true;\n            this.setState({\n                fieldsValid: fieldsValid,\n                labels: {upper:\"100%\", lower:\"0%\"},\n                custom_labels: false,\n            })\n        }\n        this.setState({ [name]: event.target.checked });\n        this.validateAnswers();\n    };\n\n    // gets opposite of upper_bound/lower_bound vice\n    getOppBound(bound) {\n       if (bound === \"upper_bound\") return \"lower_bound\";\n       return \"upper_bound\";\n    }\n\n    // gets opposite of upper/lower vice\n    getOppSide(side) {\n        if (side === \"upper\") return \"lower\";\n        return \"upper\";\n     }\n\n    isInRange(operator, value) {\n        if (operator.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n\n        if (operator === \"<\") {\n            if (value === \"0\") {\n                return false;\n            }\n        }\n        if (operator === \">\") {\n            if (value === \"100\") return false;\n        }\n        return true;\n    }\n\n    // sets if bounds and operators are valid \n    validateBoundsAndOperators() {\n\n        let allValid = true;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (!this.isInRange(this.state.equality_operators.lower, this.state.answer_bounds.lower)) {\n            fieldsValid.equality_operators = false;\n            fieldsValid.lower_bound = false;\n            allValid = false;\n        }\n\n        if (this.state.range) {\n            if (!this.isInRange(this.state.equality_operators.upper, this.state.answer_bounds.upper)) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.upper_bound = false;\n                allValid = false;\n            }\n\n            if (this.state.answer_bounds.lower === this.state.answer_bounds.upper) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.lower_bound = false;\n                allValid = false;\n            }\n\n            let valid = true;\n            switch(this.state.equality_operators.lower) {\n                case \">\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \">=\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \"<\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                case \"<=\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                default:\n                    valid = true;\n            }\n\n            fieldsValid.equality_operators = valid && fieldsValid.equality_operators;\n\n            if (!valid) allValid = false;\n\n        }\n\n        if (allValid) {\n            fieldsValid = {title: this.state.fieldsValid.title, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true};\n        }\n        else {\n        }\n\n        this.setState({ fieldsValid: fieldsValid },\n            () => { this.validateAnswers() });\n    }\n    \n   \n    // function to handle setting correct answer bounds. prop contains \"lower\" or \"upper\"\n    setCorrectBounds = prop => event => {\n        let answerBounds = this.state.answer_bounds;\n        let val = event.target.value;\n\n        answerBounds[prop] = val;\n\n        if (val < 0) {\n            val = 0;\n        }\n        if (val > 100) {\n            val = 100;\n        }\n\n        if (!Number.isInteger(val)) {\n            val = Math.round(val);\n        }\n        \n    \n        this.setState({ answer_bounds: answerBounds },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    // function to set equality operators\n    handleEqualityOperator = prop => event => {\n\n        let equality_operators = this.state.equality_operators;\n        equality_operators[prop] = event.target.value;\n        this.setState({ equality_operators: equality_operators },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    validateTitle(value) {\n        let error = this.state.titleError;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n           error = \"Required\" ;\n           fieldsValid.title = false;\n        }\n        else {\n            error = \"\";\n            fieldsValid.title = true;\n        }\n            \n        this.setState({ titleError: error, fieldsValid: fieldsValid });\n\n        this.validateAnswers();\n    }\n\n    handleTitleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            title: value,\n        }, () => { this.validateTitle(value) });\n    };\n\n    handleLabelsValidation() {\n        let valid = false;\n        if (this.state.labels.upper.replace(/^\\s+|\\s+$/g, '') !== \"\" && this.state.labels.lower.replace(/^\\s+|\\s+$/g, '') !== \"\") valid  = true;\n\n        let fieldsValid = this.state.fieldsValid;\n        fieldsValid.lower_label = valid;\n        fieldsValid.upper_label = valid;\n        this.setState({ fieldsValid: fieldsValid })\n\n        this.validateAnswers();\n    }\n\n    handleLabelsChange = name => event => {\n        let value = event.target.value;\n        let labels = this.state.labels;\n        labels[name] = event.target.value;\n        this.setState({\n            labels: labels,\n        }, () => { this.handleLabelsValidation(name, value) });\n    };\n\n    handleSliderChange = (event, value) => {\n        this.setState({ slider_value: value });\n      };\n\n    // whether or not to display to inqualities\n    handleSetRange = (e) => {\n        let range = true;\n        if (e.target.value === \"not_range\") {\n            range = false;\n        }\n        this.setState({\n            rangeVal: e.target.value,\n            range: range\n        });\n    };\n\n    // true will be && and false will be ||\n    getOperatorCondition(lower_operator) {\n        \n        let condition = true;\n\n        switch (lower_operator) {\n            case \"<\":\n                condition = \"||\";\n                break;\n            case \"<=\":\n                condition = \"||\";\n                break;\n            case \">\":\n                condition = \"&&\";\n                break;\n            case \">=\":\n                condition = \"&&\";\n                break;\n            default:\n                condition = true;\n        }\n        return condition;\n    }\n\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        // need this check for submitting with enter key\n        if (this.state.disabled) {\n            return;\n        }\n\n        \n        let correct_answer = \"\";\n        if (this.state.answer_bounds.lower !== \"\") {\n            \n            if (this.state.range) {\n                let answerBounds = this.state.answer_bounds;\n                let equalityOperators = this.state.equality_operators;\n                if (Number(answerBounds.lower) > Number(answerBounds.upper)) {\n                    const lower = answerBounds.lower;\n                    answerBounds.lower = answerBounds.upper;\n                    answerBounds.upper = lower;\n                    let equalityOperators = this.state.equality_operators;\n                    const lower_operator = this.state.equality_operators.lower;\n                    equalityOperators.lower = equalityOperators.upper;\n                    equalityOperators.upper = lower_operator;\n                }\n                correct_answer = equalityOperators.lower + \" \" + answerBounds.lower.toString() + \" \" +  this.getOperatorCondition(equalityOperators.lower) + \" \" + equalityOperators.upper + \" \" + answerBounds.upper.toString();\n            }\n            else {\n                correct_answer = this.state.equality_operators.lower + \" \" + this.state.answer_bounds.lower.toString();\n            }\n        }\n\n        if(!this.state.disabled) {\n            this.props.getEdits( \n                new SliderQuestionObj(this.props.questionObj.id, \n                    this.props.questionObj.lecture_id, \"slider\", \n                    this.state.title, this.state.question_image, correct_answer, \n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, this.props.questionObj.scheduled,\n                    this.props.questionObj.opened_at, this.props.questionObj.closed_at, \n                    this.props.questionObj.created_at, null, null, this.state.labels.lower, this.state.labels.upper))\n        }\n        this.handleClose();\n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                <DialogTitle id=\"alert-dialog-title\">{\"Edit Slider Question\"}</DialogTitle>\n                <DialogContent>\n                <Grid container justify=\"center\" className={this.styles.container}  >\n                    <Grid container direction=\"column\" align-items=\"flex-start\">\n                        <Grid item className={this.styles.entry}>\n                            <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={this.state.titleError !== \"\"}\n                                    id=\"standard-name\"\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleTitleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.titleError}\n                                />\n                            </form>\n                        </Grid>\n\n                        <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                            <Grid item className={this.styles.entry}>\n                                <Typography variant=\"h6\" color=\"textPrimary\">\n                                    Image Preview\n                                </Typography>\n                            </Grid>\n                            <Grid item className={this.styles.entry}>\n                                <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n\n                        <Grid item className={this.styles.entry}>\n                            <Grid container direction=\"row\">\n                                <Grid item className={this.styles.buttonItem}>\n                                    <Button\n                                        variant=\"contained\"\n                                        component=\"label\"\n                                    >\n                                    {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                    <input\n                                        type=\"file\"\n                                        style={{ display: \"none\" }}\n                                        onChange={this.encodeImageFileAsURL}\n                                    />\n                                    </Button>\n                                </Grid>\n\n                                <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                            onClick={this.removeImage}\n                                        >\n                                        Remove Image\n                                        </Button>\n                                    </Grid>\n                                </Collapse>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"column\" justify=\"flex-start\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.custom_labels}\n                                    onChange={this.setCustomLabels('custom_labels')}\n                                    value={this.state.custom_labels}\n                                    />\n                                }\n                                label=\"change/set labels\"\n                            />\n                        </Grid>\n                        \n                        {this.state.custom_labels && \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={24} className={this.styles.entry}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"lower label\"\n                                            value={this.state.labels.lower}\n                                            onChange={this.handleLabelsChange('lower')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"upper label\"\n                                            value={this.state.labels.upper}\n                                            onChange={this.handleLabelsChange('upper')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        }\n                    </Grid>                       \n                    <Grid container direction=\"column\" justify=\"space-evenly\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.has_correct_answer}\n                                    onChange={this.setCorrectAnswer('has_correct_answer')}\n                                    value={this.state.has_correct_answer}\n                                    />\n                                }\n                                label=\"change/set correct answer\"\n                            />\n                        </Grid>\n                        {this.state.has_correct_answer && \n                            <Grid item>\n                                <Grid container direction=\"row\">\n                                    <FormControl component=\"fieldset\">\n                                        <RadioGroup\n                                            name=\"rangeVal\"\n                                            value={this.state.rangeVal}\n                                            onChange={this.handleSetRange}\n                                        >\n                                            <FormControlLabel value={\"not_range\"} name=\"not_range\" control={<Radio />} label={\"inequality/equality\"} />\n                                            <FormControlLabel value={\"range\"} name=\"range\" control={<Radio />} label={\"set range\"} />  \n                                        </RadioGroup>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        }\n                        \n                        {this.state.has_correct_answer && this.state.range ? ( <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry} spacing={16}> \n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.lower}\n                                        onChange={this.handleEqualityOperator('lower')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer lower bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.lower}\n                                        onChange={this.setCorrectBounds('lower')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.upper}\n                                        onChange={this.handleEqualityOperator('upper')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">and/or</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer upper bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.upper}\n                                        onChange={this.setCorrectBounds('upper')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    /> \n                                </Grid>\n                            </Grid>\n                        </Grid>)\n                        : (this.state.has_correct_answer && <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry}>\n                                <Grid item> \n                                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={24}>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                select\n                                                fullWidth\n                                                value={this.state.equality_operators.lower}\n                                                onChange={this.handleEqualityOperator('lower')}\n                                                InputProps={{\n                                                    startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                                }}\n                                                >\n                                                {answerBoundOptions.map(option => (\n                                                    <MenuItem key={option.value} value={option.value}>\n                                                    {option.label}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                fullWidth\n                                                id=\"correct answer lower bound\"\n                                                type=\"number\"\n                                                value={this.state.answer_bounds.lower}\n                                                onChange={this.setCorrectBounds('lower')}\n                                                InputProps={{\n                                                    endAdornment: (\n                                                    <InputAdornment variant=\"filled\" position=\"end\">\n                                                        %\n                                                    </InputAdornment>\n                                                    ),\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                    </Grid>\n                \n            </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                        cancel\n                    </Button>\n                    <Button onClick={this.handleSubmit} color=\"secondary\" disabled={this.state.disabled}>\n                        submit\n                    </Button>\n            </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditSLQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport OpenClosedButton from '../OpenClosedButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { observer } from 'mobx-react';\nimport ViewStatsModalWrapped from '../ViewStatsModal';\nimport EditFRQDialog from '../EditFRQDialog';\nimport EditMCQDialog from '../EditMCQDialog';\nimport EditSLQDialog from '../EditSLQDialog';\n\n\nconst styles = theme => ({\n    open: {\n        marginTop: 5\n    }\n});\n\n@observer\nclass QuestionListItem extends React.Component {\n    state = {\n        selected: false,\n        open: false,\n        editMode: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    componentDidMount() {\n        if (!this.props.profStore.dataLoaded) {\n            this.props.apiProfService.loadData().then(() => {\n                this.props.profStore.dataLoaded = true\n            })\n        }\n        if (this.props.parentLecture !== undefined && this.props.questionObj.id !== undefined) {\n            this.setState({ selected: this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.questionObj.id).is_open })\n        }\n        this.setState({ editMode: this.props.mode === \"editMode\" })\n    }\n    componentDidUpdate(prevProps) {\n        if(prevProps.parentLecture.id !== this.props.parentLecture.id) {\n            this.setState({ selected: this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.questionObj.id).is_open })\n        }\n    }\n\n    handleToUpdate = (selected) => {\n        this.setState({\n            selected\n        })\n    }\n\n\n    render() {\n        return (\n            <ListItem selected={this.state.selected} divider > \n                <ListItemText primary={(this.props.number + 1) + \". \" + this.props.questionObj.question_title} />\n                <ListItemSecondaryAction>\n                    <Grid container direction=\"row\" justify=\"flex-end\">\n                        <Grid item className={this.styles.open}>\n                            {this.props.mode === \"viewingMode\" ? (<OpenClosedButton className={this.styles.open} parentLecture={this.props.parentLecture}\n                                questionId={this.props.questionObj.id} handleListClose={this.props.handleListClose}\n                                handleClick={this.props.handleClick} handleToUpdate={this.handleToUpdate} open={this.props.questionObj.is_open} \n                                recentlyClosedId={this.props.recentlyClosedId} recentlyOpenedId={this.props.recentlyOpenedId} />) \n                                : ( this.props.questionObj.question_type === 'free_text' ? \n                                    (<EditFRQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/>) \n                                    : (this.props.questionObj.question_type === 'multiple_choice' ? \n                                        (<EditMCQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/>) \n                                        : (<EditSLQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/> )) \n                                )\n                            }\n                        </Grid>\n\n                        <Grid item >\n                            <Tooltip title=\"View Stats\" placement=\"top\">\n                                <ViewStatsModalWrapped index={(this.props.number + 1)} question={this.props.questionObj} parentLecture={this.props.parentLecture} />\n                            </Tooltip>\n                        </Grid>\n                    </Grid>\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withStyles(styles)(QuestionListItem)","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    },\n    checkBoxContainer: {\n        height: theme.spacing.unit*4.5,\n        width: theme.spacing.unit*12.5,\n        justify: \"center\"\n    }\n});\n\n@observer\nclass DeleteQuestionsList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delQuestions: [],\n        questions: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.questions  = props.questions\n    }\n    componentDidMount() {\n        let shouldDelete = [];\n        let closed_questions = [];\n        for (let i = 0; i < this.questions.length; i++) {\n            if (!this.questions[i].is_open) closed_questions.push(this.questions[i]); // open questions cannot be deleted\n        }\n        closed_questions.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        }).map((questionObj, index) => \n           shouldDelete.push({\n            id: questionObj.id,\n            checked: false,\n            title: questionObj.question_title\n        }))\n        if (closed_questions !== undefined && closed_questions !== null) {\n            this.setState({\n                questions: closed_questions,\n                delQuestions: shouldDelete\n            })\n        }\n        \n    }\n    // looked up to here\n    handleChange = id =>  event => {\n        // if id in lectures, then we are unchecking; otherwise we need to uncheck\n        this.state.delQuestions.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delQuestions: this.state.delQuestions\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delQuestions);\n    }\n\n\n    render() {\n        return (\n            this.state.questions.length > 0 ? (\n                <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delQuestions\"\n                    value={this.state.delQuestions}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delQuestions.map((q, index) => {\n                                return (\n                                    <ListItem divider key={index} >\n                                        <ListItemText primary={(index + 1).toString() + \". \" +q.title}/>\n                                        <div className={this.styles.checkBoxContainer}>\n                                            <ListItemSecondaryAction>\n                                                <FormControlLabel key={index} control={\n                                                        <Checkbox className={this.styles.checkBox} key={q.id} checked={q.checked} onChange={this.handleChange(q.id)} value={q.id} />\n                                                    }/>\n                                            </ListItemSecondaryAction>\n                                        </div> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n            ) : (\n                <Typography variant=\"body1\" > It looks like all your questions are open... Please close questions you would like to delete. </Typography>\n            )\n            \n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteQuestionsList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport AddQuestionModalWrapped from '../AddQuestionModal';\nimport QuestionListItem from '../QuestionListItem';\nimport PropTypes from 'prop-types';\n// import EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteQuestionsList from '../DeleteQuestionsList';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LectureObj from '../../models/LectureObj';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    startLectureBtn: {\n        float: \"right\"\n    },\n    title: {\n        margin: theme.spacing.unit,\n    },\n});\n\n@observer\nclass AllQuestionsFrame extends React.Component {\n    state = {\n        toNewQuestion: false,\n        deleteMode: false,\n        editMode: false,\n        mode: \"viewingMode\",\n        deletions: [],\n        delTitles: [],\n        open: false,\n        parentLecture: new LectureObj(),\n        lectureTitle: \"\",\n        questions: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.parentLectureId = props.parentLectureId\n    }\n\n    componentDidMount() {\n        console.log(\"mounting\")\n         if (!this.profStore.dataLoaded) {\n             this.apiProfService.loadData().then(() => {\n                 console.log(\"loading data\")\n                 this.profStore.dataLoaded = true\n                 const lecture = this.profStore.getLectureWithId(this.parentLectureId);\n                 if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: lecture,\n                        questions: lecture.questions,\n                        lectureTitle: lecture.title\n                    })\n                 }\n                })\n            } else {\n            const lecture = this.profStore.getLectureWithId(this.parentLectureId);\n            if (lecture !== undefined) {\n                this.setState({\n                    parentLecture: lecture,\n                    questions: lecture.questions,\n                    lectureTitle: lecture.title\n                })\n             }\n         }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextLecture = nextProps.profStore.getLectureWithId(nextProps.parentLectureId);\n        if (nextLecture.questions.length === this.state.questions.length || nextLecture.id !== this.state.parentLecture.id) {\n            this.setState({\n                parentLecture: nextLecture,\n                questions: nextLecture.questions,\n                lectureTitle: nextLecture.title\n            })\n        }\n    }\n\n    \n    \n\n    handleNewQuestionClick = () => {\n        this.setState(() => ({\n            toNewQuestion: true\n        }))\n    }\n\n    handleDeleteQuestions = () => {  \n        this.props.disableTopButton()\n        this.setState({ mode: \"deleteMode\", deleteMode: true, editMode: false }); \n    }\n\n    handleEditQuestions = () => {\n        this.props.disableTopButton()\n        this.setState({ mode: \"editMode\", deleteMode: false, editMode: true });\n    }\n\n    handleRestoreMode = () => {\n        this.props.restoreTopButton()\n        this.setState({ mode: \"viewingMode\", deleteMode: false, editMode: false });\n    }\n\n    // gets course edits from child\n    getEdits = (question) => {\n        this.props.apiProfService.editQuestion(question);\n        this.props.mcqEditDetect();\n    }\n\n     // gets questions to be deleted from child component\n     getDeletions = (delQuestions) => {\n        this.setState({\n            deletions: delQuestions\n        })\n    }\n\n    handleDelete = () => {\n        if (this.state.deletions.length === 0) {\n            this.handleRestoreMode();\n        }\n        else {\n            const qArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    qArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (qArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: qArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n\n    }\n\n    handleClose = () => {\n        this.setState({\n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleDeletion = () => {\n\n        this.props.handleFinalDeletion(this.state.delIds);\n        this.handleClose();\n        this.handleRestoreMode();\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewQuestion === true) {\n            return <Redirect to='/professor/TODO' push />\n        }\n\n        return (\n            <Card className={this.styles.card}>\n                <CardContent>\n                    {console.log(this.state.parentLecture)}\n                    <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                        <Grid item>\n                            <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\">\n                                Questions for {this.state.lectureTitle}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-end\">\n                                <Grid item>\n                                    {this.state.editMode ? (\n                                    <Tooltip title={\"Done Editing\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleRestoreMode}>\n                                            <DoneIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    ) : (\n                                    <Tooltip title={\"Edit Questions\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleEditQuestions} component=\"div\" disabled={this.state.mode === \"deleteMode\" || this.state.questions.length === 0}>  \n                                            <EditIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    )}    \n                                </Grid>\n                                <Grid item>\n                                {this.state.deleteMode ? (\n                                    <Tooltip title={\"Done Deleting\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                            <DoneIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    ) : (\n                                    <Tooltip title={\"Delete Questions\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleDeleteQuestions} component=\"div\" disabled={this.state.mode === \"editMode\" || this.state.questions.length === 0}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    )}\n                                </Grid>\n                                <Grid item>\n                                    <AddQuestionModalWrapped lectureId={this.state.parentLecture.id} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    {this.state.deleteMode ? \n                    (<DeleteQuestionsList questions={this.state.questions} getDeletions={this.getDeletions}/>)\n                    : \n                    (<List component=\"nav\">\n                        {this.state.questions.slice().sort(function (a, b) {\n                            if (a.created_at < b.created_at) {\n                                return -1;\n                            }\n                            if (a.created_at > b.created_at) {\n                                return 1;\n                            }\n                            // a must be equal to b\n                            return 0;\n                        }).map((questionObj, index) => {\n                            return (<QuestionListItem number={index} mode={this.state.mode} getEdits={this.getEdits} handleListClose={this.props.handleListClose} recentlyOpenedId={this.props.recentlyOpenedId} profStore={this.profStore} handleClick={this.props.handleClick} parentLectureId={this.state.parentLecture.id} parentLecture={this.state.parentLecture} questionObj={questionObj} key={index} recentlyClosedId={this.props.recentlyClosedId} />\n                            )\n                        })}\n                    </List>)\n                    }\n                </CardContent>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following question(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) =>\n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            No\n                        </Button>\n                        <Button onClick={this.handleDeletion} color=\"secondary\">\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Card>\n        );\n    }\n}\n\nAllQuestionsFrame.propTypes = {\n    parentLecture: PropTypes.object\n};\n\nexport default withStyles(styles)(AllQuestionsFrame);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport Paper from '@material-ui/core/Paper';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport Typography from '@material-ui/core/Typography';\nimport AllQuestionsFrame from '../../../components/AllQuestionsFrame';\nimport MCQuestionStats from '../../../components/MCQuestionStats';\nimport FreeTextStats from '../../../components/FreeTextStats';\nimport SliderStats from '../../../components/SliderStats';\n\n\nconst socket = socketIOClient(socketioURL)\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    grid: {\n        paddingTop: theme.spacing.unit * 2,\n    },\n    text: {\n        color: '#ffffff'\n    },\n    textQ: {\n        color: '#ffffff',\n        paddingTop: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 10,\n        paddingLeft: theme.spacing.unit * 10,\n        paddingBottom: theme.spacing.unit * 2\n    },\n    startLectureBtn: {\n        float: \"right\"\n    },\n    showCodeBtn: {\n        float: \"left\"\n    }\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorViewQuestions extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.lectureId = null\n        this.state = {\n            currentQuestionIndex: 0,\n            currentQuestionId: 0,\n            openQuestionId: 0,\n            recentlyClosedId: 0,\n            recentlyOpenedId: 0,\n            btnStatus: 0,\n            parentLecture: { questions: [], title: \"\" },\n            editDeleteMode: false,\n            updateMCQStats: false,\n        }\n        this.profStore = props.profStore\n        this.apiProfService = props.apiService\n    }\n\n    componentDidMount() {\n        // Get the lecture\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                const lecture = this.profStore.getLectureWithId(lectureId)\n                if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: this.profStore.getLectureWithId(lectureId)\n                    })\n                    this.setState({\n                        currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                    })\n                }\n            })\n        } else {\n            const { lectureId } = this.props.match.params\n            this.lectureId = lectureId\n            const lecture = this.profStore.getLectureWithId(lectureId)\n            if (lecture !== undefined) {\n                this.setState({\n                    parentLecture: this.profStore.getLectureWithId(lectureId)\n                })\n                this.setState({\n                    currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                })\n            }\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.match.params.lectureId !== this.state.parentLecture.id) {\n\n            if (this.state.parentLecture.questions.length > 0) {\n                this.apiProfService.closeAllQuestions(this.state.parentLecture.id);\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                this.setState({\n                    parentLecture: this.profStore.getLectureWithId(lectureId),\n                    currentQuestionIndex: 0,\n                    currentQuestionId: this.convertQuestionIndexToId(0),\n                    openQuestionId: 0,\n                    recentlyClosedId: 0,\n                    recentlyOpenedId: 0,\n                    btnStatus: 0,\n                    editDeleteMode: false,\n                    updateMCQStats: false,\n                })\n            }\n            else {\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                const lecture = this.profStore.getLectureWithId(lectureId)\n                if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: this.profStore.getLectureWithId(lectureId)\n                    })\n                    this.setState({\n                        currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                    })\n                }\n            }\n                \n            \n        }\n        if (this.state.currentQuestionId !== this.convertQuestionIndexToId(this.state.currentQuestionIndex)) {\n            this.setState({\n                currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n            })\n        }     \n    }\n\n    componentWillUnmount() {\n        // close all questions in this lecture\n        this.apiProfService.closeAllQuestions(this.lectureId)\n    }\n\n    mcqStatsUpdated = () => {\n        this.setState({ updateMCQStats: false })\n    }\n    mcqEditDetect = () => {\n        this.setState({ updateMCQStats: true })\n    }\n\n    disableTopButton = () => {\n        this.setState({ editDeleteMode: true })\n    }\n\n    restoreTopButton = () => {\n        this.setState({ editDeleteMode: false });\n    }\n    handleFinalDeletion = (delIds) => {\n\n        for (let i = 0; i < delIds.length; i++) {\n            var question = this.state.parentLecture.questions.find(q => q.id === delIds[i]);\n            if (question && question.is_open) {\n                this.apiProfService.closeQuestion(delIds[i], this.state.parentLecture.id);\n                this.handleListClickClose(delIds[i]);\n            }\n        }\n        this.apiProfService.deleteQuestions(delIds, this.state.parentLecture.id);\n        this.setState({\n            parentLecture: this.profStore.getLectureWithId(this.props.match.params)\n        })\n    };\n\n\n    handleBtnClick = () => {\n        switch (this.state.btnStatus) {\n            case 0:\n                if (!this.profStore.getQuestionWithId(this.state.parentLecture, this.convertQuestionIndexToId(this.state.currentQuestionIndex)).is_open) {\n                    // Handle the \"Open Question\"\n                    this.setState({ recentlyOpenedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), recentlyClosedId: 0 })\n                    this.apiProfService.openQuestion(this.convertQuestionIndexToId(this.state.currentQuestionIndex), this.state.parentLecture.id)\n                    socket.emit('subscribe professor', this.convertQuestionIndexToId(this.state.currentQuestionIndex))\n                    this.setState({ btnStatus: 1,  openQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex) })\n                }\n                break;\n\n            case 1:\n                // Handle the \"Close Question\"\n                this.apiProfService.closeQuestion(this.state.currentQuestionId, this.state.parentLecture.id)\n                this.setState({ recentlyClosedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), recentlyOpenedId: 0})\n                // Check if this is last question\n                if (this.state.currentQuestionIndex + 1 >= this.state.parentLecture.questions.length) {\n                    \n                    this.setState({ btnStatus: 3, openQuestionId: 0 })\n                }   \n                else{\n                   \n                    this.setState({ btnStatus: 2, openQuestionId: 0 })\n                }\n                break;\n\n            case 2:\n                // Handle the \"Open Next Question\"\n                this.apiProfService.openQuestion(this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1), this.state.parentLecture.id)\n                socket.emit('subscribe professor', this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1))\n                this.setState({ recentlyOpenedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1), recentlyClosedId: 0 })\n                \n                // Update the index to the next question\n                \n                this.setState({\n                    btnStatus: 1,\n                    currentQuestionIndex: this.state.currentQuestionIndex + 1,\n                    currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1),\n                    openQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1)\n                })\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handleListClick = (question_id) => {\n        // Update the index to the next question\n        \n        this.setState({\n            btnStatus: 1,\n            currentQuestionIndex: this.convertQuestionIdToIndex(question_id),\n            currentQuestionId: question_id,\n            openQuestionId: question_id\n        })\n    }\n    \n    handleListClickClose = (question_id) => {\n        // Update the index to the next question\n        if (this.state.currentQuestionIndex + 1 >= this.state.parentLecture.questions.length) {\n            \n            this.setState({ btnStatus: 3, openQuestionId: 0, recentlyOpenedId: 0 })\n        }\n        else{\n            \n            this.setState({\n                btnStatus: 2,\n                openQuestionId: 0,\n                recentlyOpenedId: 0\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.root} elevation={1}>\n                    <Typography variant=\"h6\" component=\"h6\" className={this.styles.text}>\n                        {this.state.parentLecture.title} on {this.state.parentLecture.date}\n                    </Typography>\n                    <Collapse in={this.state.parentLecture.scheduled}>\n                        <Typography variant=\"h6\" component=\"h6\" className={this.styles.text} align=\"right\">\n                            Questions available from {this.state.parentLecture.open_date} to {this.state.parentLecture.close_date}\n                        </Typography>\n                    </Collapse>\n                    <Typography variant=\"h4\" component=\"h4\" className={this.styles.textQ} align=\"center\">\n                        Q{this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1}: {this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_title}\n                    </Typography>\n                    <Collapse in={this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_image}>\n                        <Grid item align=\"center\">\n                            <img src={this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_image} alt=\"Preview Unavailable\" height={300}></img>\n                        </Grid>\n                    </Collapse>\n                    <Collapse in={!this.state.parentLecture.scheduled}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleBtnClick()} className={this.styles.startLectureBtn} disabled={this.state.btnStatus === 3 || this.state.parentLecture.questions.length === 0 || this.state.editDeleteMode }>\n                            {this.state.btnStatus === 0 ? \"Open Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1) :\n                                this.state.btnStatus === 1 ? \"Close Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1) :\n                                    this.state.btnStatus === 2 ? \"Open Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 2) :\n                                        \"No More Questions\"}\n                        </Button>\n                    </Collapse>\n                </Paper>\n                \n                <Grid container spacing={24} className={this.styles.grid}>\n                    <Grid item xs={12} md={8}>\n                        <AllQuestionsFrame handleListClose={this.handleListClickClose} handleClick={this.handleListClick} profStore={this.profStore}  \n                        apiProfService={this.apiProfService} parentLecture={this.state.parentLecture} parentLectureId={this.props.match.params.lectureId} \n                        handleFinalDeletion={this.handleFinalDeletion} recentlyClosedId={this.state.recentlyClosedId} recentlyOpenedId={this.state.recentlyOpenedId} \n                        selectedQuestionId={this.state.openQuestionId} disableTopButton={this.disableTopButton} restoreTopButton={this.restoreTopButton} mcqEditDetect={this.mcqEditDetect}/>\n                    </Grid>\n                    <Grid item xs={12} sm={9} md={4}>\n                        <List>\n                            {this.state.parentLecture.questions.map((questionObj, index) => {\n                                if (questionObj.question_type === \"multiple_choice\")\n                                return (<MCQuestionStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} updateMCQStats={this.state.updateMCQStats} mcqStatsUpdated={this.mcqStatsUpdated} />)\n                                else if (questionObj.question_type === \"free_text\")\n                                return (<FreeTextStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} />)\n                                else if (questionObj.question_type === \"slider\")\n                                return (<SliderStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} />)\n                                \n                                // Something went wrong\n                                return (null)\n                            })}\n                        </List>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n    \n    getSortedQuestionsCopy() {\n        return this.profStore.getLectureWithId(this.props.match.params.lectureId).questions.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n\n    convertQuestionIndexToId(index) {\n        if (index < this.profStore.getLectureWithId(this.props.match.params.lectureId).questions.length) {\n            var sortedQuestionsCopy = this.getSortedQuestionsCopy();\n            return sortedQuestionsCopy[index].id;\n        }\n\n        else {\n            return 0;\n        }\n\n    }\n\n    convertQuestionIdToIndex(question_id) {\n        var sortedQuestionsCopy = this.getSortedQuestionsCopy();\n        for (var i = 0; i < sortedQuestionsCopy.length; i++) {\n            if (sortedQuestionsCopy[i].id === question_id)\n                return i;\n        }\n        return 0;\n    }\n\n}\n\nexport default withStyles(styles)(ProfessorViewQuestions);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { MultipleChoiceQuestionObj } from '../../../models/QuestionObj';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit*60,\n    },\n    select: {\n        width: theme.spacing.unit*60\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit*4\n    },\n    buttonContainer: {\n        paddingTop: theme.spacing.unit*2,\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 12,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\nfunction answersValid(new_options) {\n    if (new_options.length === 0) return false;\n    for (const option of new_options) {\n        for (const val of Object.values(option)) {\n            if (val.replace(/^\\s+|\\s+$/g, '') === \"\") return false; \n        }     \n    }\n    return true;\n}\n\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddMCQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        correct_answer: '',\n        number_of_options: \"\",\n        question_image_string: \"\",\n        options: [], // necessary because of controlled form\n        answer_choices: {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"}, // must be set for input base to be controlled\n        checked: {option1: false, option2: false, option3: false, option4: false, option5: false},\n        should_delete: {option1:false, option2:false, option3:false, option4:false, option5:false},\n        titleError: \"\",\n        formValid: false,\n        titleValid: true,\n        hasAnswers: false,\n        optionsValid: false,\n        delete_mode: false,\n        deleteDisabled: false,\n        deleteConfirmDisabled: false,\n        uploading: false,\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    setAnswerObject(num_options) {\n        let answer_choices = {};\n        for (let i = 1; i <= num_options; i++) {\n            let option_string = \"option\" + i.toString();\n            answer_choices[option_string] = \"\";\n        }\n        return answer_choices;\n    }\n    setCheckedObject(num_options) {\n        let checked = {};\n        for (let i = 1; i <= num_options; i++) {\n            let option_string = \"option\" + i.toString();\n            checked[option_string] = false;\n        }\n        return checked;\n    }\n    handleDelete() {\n\n        let answer_choices = this.state.answer_choices;\n        let number_of_options = this.state.number_of_options;\n        let options = [];\n        let correct_answer = \"\";\n        let checked = {option1: false, option2: false, option3: false, option4: false, option5: false};\n\n        for (const k of Object.keys(this.state.should_delete)) {\n            if (this.state.should_delete[k]) {\n                number_of_options--;\n            }\n        }\n\n        // abort if less than two options remain, but button disabling should prevent this anyway\n        if (number_of_options < 2) {\n            this.setState({\n                should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n                delete_mode: false,\n            })\n            return;\n        }\n\n        let index = 1;\n        for (const k of Object.keys(answer_choices)) {\n            if (!this.state.should_delete[k]) {\n                let option_string = \"option\" + index.toString();\n                options.push({ [option_string]: answer_choices[k] });\n                if (k === this.state.correct_answer) correct_answer = option_string;\n                index++;\n                if (index > number_of_options) {\n                    break;\n                }\n            }\n        }\n\n        answer_choices = {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"};\n        // this is not the nicest way to do this, but it's functional, and I couldn't find my bug in my nicer code\n        options.map(option => answer_choices[Object.keys(option)[0]] = Object.values(option)[0]);\n\n        if (correct_answer !== \"\") checked[correct_answer] = true;\n\n        this.setState({\n            should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n            answer_choices: answer_choices,\n            correct_answer: correct_answer,\n            checked: checked,\n            number_of_options: number_of_options,\n            delete_mode: false,\n            options: options,\n            deleteDisabled: number_of_options <= 2,\n        }, () => { this.validateFields('answer_choices', options) });\n       \n    }\n\n    validateFields(name, value) {\n        let titleValid = this.state.titleValid;\n        let errors = this.state.errors;\n        let has_answers = this.state.hasAnswers\n        let optionsValid = this.state.optionsValid;\n        let titleError = this.state.titleError;\n\n        switch(name) {\n            case \"title\":\n                if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n                    titleError = \"This field is required\";\n                    titleValid = false;\n                }\n                else {\n                    titleError = '';\n                    titleValid = true;\n                }\n                break;\n            case \"number_of_options\":\n                has_answers = true;\n                optionsValid = answersValid(value);\n                break;\n            case \"answer_choices\":\n                optionsValid = answersValid(value);\n                break;\n            default:\n        }\n       \n        this.setState({ errors: errors, \n                        titleValid: titleValid, \n                        titleError: titleError,\n                        hasAnswers: has_answers,\n                        optionsValid: optionsValid,\n         }, this.validateForm);\n\n    }\n    \n    validateForm() {\n        const titleValid = this.state.title !== \"\";\n        if (!titleValid) {\n            this.setState({ titleValid: false })\n        }\n        this.setState({ formValid: titleValid && this.state.hasAnswers && this.state.optionsValid });\n    }\n\n\n    handleOption = option => event => {\n        const key = Object.keys(option)[0];\n        let answer_choices = this.state.answer_choices;\n        let options = this.state.options;\n        answer_choices[key] = event.target.value;\n        options.find(x => Object.keys(x)[0] === key)[key] = event.target.value\n        this.setState({\n            answer_choices: answer_choices,\n            options: options,\n        }, () => { this.validateFields('answer_choices', options) });\n    }\n    \n    handleSetNumberOfOptions = name => event => {\n        let options = [];\n        let answer_choices = this.state.answer_choices;\n        let deleteDisabled = event.target.value <= 2;\n\n        for (let i = 1; i <= event.target.value; i++) {\n            let option_string = \"option\" + i.toString();\n            options.push({ [option_string]: this.state.answer_choices[option_string] })\n        }\n        if (event.target.value < this.state.number_of_options) {\n            for (let i = event.target.value + 1; i <=5; i++) {\n                let option_string = \"option\" + i.toString();\n                answer_choices[option_string] = \"\";\n            }\n        }\n\n        this.setState({\n            answer_choices: answer_choices,\n            number_of_options: event.target.value,\n            options: options,\n            deleteDisabled: deleteDisabled,\n        }, () => { this.validateFields(name, options)});\n\n    }\n\n    handleDeleteQueue = name => event => {\n        let should_delete = this.state.should_delete;\n        if (event.target.checked) {\n            should_delete[name] = true;\n        }\n        else {\n            should_delete[name] = false;\n        }\n\n        // compute if confirm button should be disabled\n        let numRemainingOptions = 0;\n        for (const k of Object.keys(should_delete)) {\n            if (!should_delete[k]) {\n                numRemainingOptions++;\n            }\n        }\n        \n        // adjust for the \"invisible\" options which have been counted as well\n        numRemainingOptions -= (5 - this.state.number_of_options);\n\n        this.setState({\n            should_delete: should_delete,\n            deleteConfirmDisabled: numRemainingOptions < 2,\n        })\n    }\n\n    handleCheck = option => event => {\n        const key = Object.keys(option)[0];\n        let checked = this.state.checked;\n        let correct_answer = key;\n        checked[key] = event.target.checked;\n\n        if (this.state.correct_answer === key) {\n            checked[key] = false;\n            correct_answer = \"\";\n        }\n    \n        this.setState({\n            correct_answer: correct_answer,\n            checked: checked\n        })\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.validateFields(name, value) });\n    };\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.formValid) {\n            const { lectureId } = this.props.match.params\n            \n            // Send course to API\n            this.props.apiService.addQuestion(\n                new MultipleChoiceQuestionObj(null,\n                    lectureId, \"multiple_choice\",\n                    this.state.title, this.state.question_image_string, this.state.correct_answer,\n                    null, null, null, null, null, null, null, null,\n                    this.state.answer_choices.option1, this.state.answer_choices.option2, this.state.answer_choices.option3, this.state.answer_choices.option4, this.state.answer_choices.option5,\n                    this.state.number_of_options)\n            )\n    \n            this.setState({ toQuestions: true });\n        }\n\n    }\n    setDeleteMode() {\n        const delete_mode = !this.state.delete_mode;\n        this.setState({ delete_mode: delete_mode });\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n        \n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <Grid container direction=\"column\" justify=\"center\" className={this.styles.paper}>\n                <Grid item className={this.styles.item} >\n                    <Typography variant=\"h3\" color=\"textPrimary\">\n                        Add New Question:\n                    </Typography>\n                </Grid>\n                <Grid item className={this.styles.item}>\n                    <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                        <TextField\n                            fullWidth\n                            required\n                            error={!this.state.titleValid}\n                            id=\"standard-name\"\n                            label=\"Question Title\"\n                            value={this.state.title}\n                            onChange={this.handleChange('title')}\n                            margin=\"normal\"\n                            helperText={this.state.titleError}\n                        />\n                    </form>\n                </Grid>\n                <Grid item className={this.styles.item}>\n                    <form autoComplete=\"off\">\n                        <FormControl>\n                            <InputLabel htmlFor=\"number-options\">number of answer choices</InputLabel>\n                            <Select\n                                value={this.state.number_of_options}\n                                onChange={this.handleSetNumberOfOptions('number_of_options')}\n                                className={this.styles.select}\n                                disabled={this.state.delete_mode}\n                                inputProps={{\n                                name: 'number_of_options',\n                                id: 'number-options',\n                                }}\n                            >\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </form>\n                </Grid>\n\n                {this.state.hasAnswers && \n                    <Grid item>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    {this.state.delete_mode ? \n                                        <TableCell> Delete?</TableCell>\n                                        :\n                                        <TableCell>Correct Answer?</TableCell>\n                                    }\n                                    <TableCell>Answer Choices</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {this.state.delete_mode ? \n                               this.state.options.map((option, index) => \n                                    <TableRow key={index}> \n                                        <TableCell>\n                                            <Checkbox\n                                                checked={this.state.should_delete[Object.keys(option)[0]]}\n                                                onChange={this.handleDeleteQueue(Object.keys(option)[0])}\n                                                value={Object.keys(option)[0]}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Typography variant=\"body1\" align=\"justify\"> {this.state.answer_choices[Object.keys(option)[0]]}</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                                :\n                                this.state.options.map((option, index) => \n                                    <TableRow key={index}>\n                                        <TableCell>\n                                            <Checkbox\n                                                checked={this.state.correct_answer === Object.keys(option)[0]}\n                                                onChange={this.handleCheck(option)}\n                                                value={Object.keys(option)[0]}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <FormControl>\n                                                <InputBase\n                                                multiline\n                                                id=\"bootstrap-input\"\n                                                name={Object.keys(option)[0]}\n                                                value={this.state.answer_choices[Object.keys(option)[0]]}\n                                                onChange={this.handleOption(option)}\n                                                classes={{\n                                                    input: this.styles.bootstrapInput\n                                                }}\n                                                />\n                                            </FormControl>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            }\n\n                            </TableBody>\n                        </Table>    \n                    \n                                    \n                        <Grid container direction=\"row\" justify=\"flex-end\">\n                                {!this.state.delete_mode ? \n\n                                <IconButton onClick={this.setDeleteMode.bind(this)} color=\"secondary\" disabled={this.state.deleteDisabled}>\n                                    <DeleteIcon />\n                                </IconButton>\n\n                                :\n                                \n                                <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} disabled={this.state.deleteConfirmDisabled}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                </IconButton>\n                         \n                                }     \n                        </Grid>\n                            \n                    </Grid>\n                }\n                \n                <Grid item className={this.styles.item}>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >\n                    Upload Image\n                    <input\n                        type=\"file\"\n                        style={{ display: \"none\" }}\n                        onChange={this.encodeImageFileAsURL}\n                    />\n                    </Button>\n                </Grid>\n\n                <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                    <Typography variant=\"h6\" color=\"textPrimary\">\n                        Image Preview\n                    </Typography>\n                    <Grid item className={this.styles.item}>\n                        <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                    </Grid>\n                </Collapse>\n\n                <Grid item className={this.styles.item}>\n                    <Grid container direction=\"row\" className={this.styles.buttonContainer}>\n                        <form>\n                            <Button\n                                type=\"submit\"\n                                disabled={!this.state.formValid}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={this.handleSubmit}>\n                                    Submit\n                            </Button>\n                        </form>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddMCQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { FreeTextQuestionObj } from '../../../models/QuestionObj';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddFreeTextQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        correct_answer: '',\n        error: '',\n        titleValid: false,\n        correct_answer_valid: true,\n        question_image_string: ''\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    handleValidation(name, value) {\n        switch(name) {\n            case \"title\":\n                if (this.state.title.replace(/^\\s+|\\s+$/g, '') === '') {\n                    this.setState({\n                        error: \"This field is required\",\n                        titleValid: false,\n                    })\n                } else {\n                    this.setState({\n                        error: \"\",\n                        titleValid: true,\n                    });\n                }\n                break;\n            case \"correct_answer\":\n                if (this.state.correct_answer !== \"\") {\n                    if (this.state.correct_answer.replace(/^\\s+|\\s+$/g, '') === '') {\n                        this.setState({ correct_answer_valid: false })\n                    }\n                    else {\n                        this.setState({ correct_answer_valid: true })\n                    }\n                }\n                else {\n                    if (!this.state.correct_answer_valid) this.setState({ correct_answer_valid: true })\n                }\n                break;\n            default:\n        }\n        \n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.handleValidation(name, value) });\n    };\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        if(this.state.titleValid) {\n            const { lectureId } = this.props.match.params\n    \n            // Send course to API\n            this.props.apiService.addQuestion(\n                new FreeTextQuestionObj(null, lectureId, \"free_text\", this.state.title, this.state.question_image_string, this.state.correct_answer, null, null, null, null, null, null, null, null, '')\n            )\n    \n            this.setState({ toQuestions: true });\n        }\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n\n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Question:\n                </Typography>\n\n                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                    <Grid container direction=\"column\">\n                        <TextField\n                            required\n                            error={!this.state.titleValid && !(this.state.error === \"\")}\n                            label=\"Question Title\"\n                            className={this.styles.textField}\n                            value={this.state.title}\n                            onChange={this.handleChange('title')}\n                            margin=\"normal\"\n                            helperText={this.state.error}\n                        />\n                        \n                        <TextField\n                            label=\"Correct Answer\"\n                            className={this.styles.textField}\n                            value={this.state.correct_answer}\n                            onChange={this.handleChange('correct_answer')}\n                            margin=\"normal\"\n                        />\n\n                        <Grid item className={this.styles.item}>\n                            <Button\n                                variant=\"contained\"\n                                component=\"label\"\n                            >\n                            Upload Image\n                            <input\n                                type=\"file\"\n                                style={{ display: \"none\" }}\n                                onChange={this.encodeImageFileAsURL}\n                            />\n                            </Button>\n                        </Grid>\n\n                        <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                            <Grid item className={this.styles.item}>\n                                <Typography variant=\"h6\" color=\"textPrimary\">\n                                    Image Preview\n                                </Typography>\n                            </Grid>\n\n                            <Grid item className={this.styles.item}>\n                                <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n\n                        <Grid item className={this.styles.item}>\n                            <Button\n                                type=\"submit\"\n                                disabled={!this.state.titleValid || !this.state.correct_answer_valid}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={this.handleSubmit}>\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddFreeTextQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Collapse from '@material-ui/core/Collapse';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { SliderQuestionObj } from '../../../models/QuestionObj';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Slider from '@material-ui/lab/Slider';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        marginRight: theme.spacing.unit*2.5,\n        width: 45\n    },\n    percentText: {\n        color: \"white\",\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"0.75em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n    },\n    entry: {\n        maxWidth: 500\n    },\n    titleContainer: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit*2\n    },\n    slidercontainer: {\n        paddingRight: theme.spacing.unit*2\n    },\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        flexWrap: 'wrap',\n    },\n    button: {\n        paddingTop: theme.spacing.unit*3,\n    },\n    andor: {\n        padding: theme.spacing.unit,\n        width: \"15%\"\n    },\n});\n\nconst answerBoundOptions = [\n    {\n      value: '=',\n      label: '=',\n    },\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n  const answerBoundOptionsRange = [\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddSliderQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        titleError: \"\",\n        correct_answer: '', // will be sent as statement such as = 5 or >2 && < 100\n        labels: {lower:\"0%\", upper:\"100%\"}, // labels on slider\n        answer_bounds: {upper:\"\", lower:\"\"}, \n        range: false, // whether or not correct answer has a range\n        rangeVal: \"not_range\", // added for radio group purposes\n        equality_operators: {upper:\"\", lower:\"\"},\n        slider_value: 50,\n        has_correct_answer: false,\n        custom_labels: false,\n        question_image_string: \"\",\n        fieldsValid: {title: false, lower_label:false, upper_label:false, lower_bound:false, upper_bound: false, equality_operators: false},\n        disabled: true\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    validateAnswers() {\n        let disabled = false;\n\n        if (this.state.custom_labels && this.state.has_correct_answer) {\n            const keys = Object.keys(this.state.fieldsValid);\n            for (const key of keys) {\n                if (!this.state.fieldsValid[key]) disabled = true;\n            }\n        }\n        else {\n            if (this.state.custom_labels) {\n                if (!this.state.fieldsValid.lower_label || !this.state.fieldsValid.upper_label || !this.state.fieldsValid.title) disabled = true;\n            }\n            else {\n                if (this.state.has_correct_answer) {\n                    if (!this.state.fieldsValid.lower_bound || !this.state.fieldsValid.upper_bound || !this.state.fieldsValid.equality_operators) {\n                        disabled = true;\n                    }\n                }\n                else {\n                    if (!this.state.fieldsValid.title) disabled = true;\n                }\n            }\n        }\n       \n        if (!this.state.fieldsValid.title) disabled = true;\n\n        this.setState({ disabled: disabled })\n    }\n    \n    // handles the switch to control setting a correct answer for the question\n    setCorrectAnswer = name => event => {\n\n        if (!event.target.checked) {\n            this.setState({\n                answer_bounds:{upper:\"\", lower:\"\"},\n                equality_operators: {upper:\"\", lower:\"\"}, \n                range: false,\n                rangeVal: \"not_range\", \n            })\n        }\n       \n\n        this.setState({ [name]: event.target.checked },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n    // controls switch to set custom labels for bounds\n    setCustomLabels = name => event => {\n        if (!event.target.checked) {\n            let fieldsValid = this.state.fieldsValid;\n            fieldsValid.lower_label = true;\n            fieldsValid.upper_label = true;\n            this.setState({\n                fieldsValid: fieldsValid,\n                labels: {upper:\"100%\", lower:\"0%\"},\n                custom_labels: false,\n            })\n        }\n        this.setState({ [name]: event.target.checked });\n        this.validateAnswers();\n    };\n\n    // gets opposite of upper_bound/lower_bound vice\n    getOppBound(bound) {\n       if (bound === \"upper_bound\") return \"lower_bound\";\n       return \"upper_bound\";\n    }\n\n    // gets opposite of upper/lower vice\n    getOppSide(side) {\n        if (side === \"upper\") return \"lower\";\n        return \"upper\";\n     }\n\n    isInRange(operator, value) {\n        if (operator.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n\n        if (operator === \"<\") {\n            if (value === \"0\") {\n                return false;\n            }\n        }\n        if (operator === \">\") {\n            if (value === \"100\") return false;\n        }\n        return true;\n    }\n\n    // sets if bounds and operators are valid \n    validateBoundsAndOperators() {\n\n        let allValid = true;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (!this.isInRange(this.state.equality_operators.lower, this.state.answer_bounds.lower)) {\n            fieldsValid.equality_operators = false;\n            fieldsValid.lower_bound = false;\n            allValid = false;\n        }\n\n        if (this.state.range) {\n            if (!this.isInRange(this.state.equality_operators.upper, this.state.answer_bounds.upper)) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.upper_bound = false;\n                allValid = false;\n            }\n\n            if (this.state.answer_bounds.lower === this.state.answer_bounds.upper) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.lower_bound = false;\n                allValid = false;\n            }\n\n            let valid = true;\n            switch(this.state.equality_operators.lower) {\n                case \">\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \">=\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \"<\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                case \"<=\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                default:\n                    valid = true;\n            }\n\n            fieldsValid.equality_operators = valid && fieldsValid.equality_operators;\n\n            if (!valid) allValid = false;\n\n        }\n\n        if (allValid) {\n            fieldsValid = {title: this.state.fieldsValid.title, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true};\n        }\n        else {\n        }\n\n        this.setState({ fieldsValid: fieldsValid },\n            () => { this.validateAnswers() });\n    }\n    \n   \n    // function to handle setting correct answer bounds. prop contains \"lower\" or \"upper\"\n    setCorrectBounds = prop => event => {\n        let answerBounds = this.state.answer_bounds;\n        let val = event.target.value;\n\n        answerBounds[prop] = val;\n\n        if (val < 0) {\n            val = 0;\n        }\n        if (val > 100) {\n            val = 100;\n        }\n\n        if (!Number.isInteger(val)) {\n            val = Math.round(val);\n        }\n        \n    \n        this.setState({ answer_bounds: answerBounds },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    // function to set equality operators\n    handleEqualityOperator = prop => event => {\n\n        let equality_operators = this.state.equality_operators;\n        equality_operators[prop] = event.target.value;\n        this.setState({ equality_operators: equality_operators },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    validateTitle(value) {\n        let error = this.state.titleError;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n           error = \"Required\" ;\n           fieldsValid.title = false;\n        }\n        else {\n            error = \"\";\n            fieldsValid.title = true;\n        }\n            \n        this.setState({ titleError: error, fieldsValid: fieldsValid });\n\n        this.validateAnswers();\n    }\n\n    handleTitleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            title: value,\n        }, () => { this.validateTitle(value) });\n    };\n\n    handleLabelsValidation() {\n        let valid = false;\n        if (this.state.labels.upper.replace(/^\\s+|\\s+$/g, '') !== \"\" && this.state.labels.lower.replace(/^\\s+|\\s+$/g, '') !== \"\") valid  = true;\n\n        let fieldsValid = this.state.fieldsValid;\n        fieldsValid.lower_label = valid;\n        fieldsValid.upper_label = valid;\n        this.setState({ fieldsValid: fieldsValid })\n\n        this.validateAnswers();\n    }\n\n    handleLabelsChange = name => event => {\n        let value = event.target.value;\n        let labels = this.state.labels;\n        labels[name] = event.target.value;\n        this.setState({\n            labels: labels,\n        }, () => { this.handleLabelsValidation(name, value) });\n    };\n\n    handleSliderChange = (event, value) => {\n        this.setState({ slider_value: value });\n      };\n\n    // whether or not to display to inqualities\n    handleSetRange = (e) => {\n        let range = true;\n        if (e.target.value === \"not_range\") {\n            range = false;\n        }\n        this.setState({\n            rangeVal: e.target.value,\n            range: range\n        });\n    };\n\n    // true will be && and false will be ||\n    getOperatorCondition(lower_operator) {\n        \n        let condition = true;\n\n        switch (lower_operator) {\n            case \"<\":\n                condition = \"||\";\n                break;\n            case \"<=\":\n                condition = \"||\";\n                break;\n            case \">\":\n                condition = \"&&\";\n                break;\n            case \">=\":\n                condition = \"&&\";\n                break;\n            default:\n                condition = true;\n        }\n        return condition;\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        // need this check for submitting with enter key\n        if (this.state.disabled) {\n            return;\n        }\n\n        const { lectureId } = this.props.match.params;\n        let correct_answer = \"\";\n        \n        if (this.state.has_correct_answer) {\n            if (this.state.range) {\n                let answerBounds = this.state.answer_bounds;\n                let equalityOperators = this.state.equality_operators;\n                if (Number(answerBounds.lower) > Number(answerBounds.upper)) {\n                    const lower = answerBounds.lower;\n                    answerBounds.lower = answerBounds.upper;\n                    answerBounds.upper = lower;\n                    let equalityOperators = this.state.equality_operators;\n                    const lower_operator = this.state.equality_operators.lower;\n                    equalityOperators.lower = equalityOperators.upper;\n                    equalityOperators.upper = lower_operator;\n                }\n                correct_answer = equalityOperators.lower + \" \" + answerBounds.lower.toString() + \" \" +  this.getOperatorCondition(equalityOperators.lower) + \" \" + equalityOperators.upper + \" \" + answerBounds.upper.toString();\n            }\n            else {\n                correct_answer = this.state.equality_operators.lower + \" \" + this.state.answer_bounds.lower.toString();\n            }\n        }\n\n        // Send course to API\n        this.props.apiService.addQuestion(\n            new SliderQuestionObj(null, lectureId, \"slider\", this.state.title, this.state.question_image_string, correct_answer, null, null, null, null, null, null, null, null, this.state.labels.lower, this.state.labels.upper)\n        );\n\n        this.setState({ toQuestions: true });\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n\n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <Grid container justify=\"center\" className={this.styles.container} spacing={24} >\n                <Grid item className={this.styles.gridItem} xs={12} sm={6}>\n                    <Grid container direction=\"column\" align-items=\"flex-start\">\n                        <Grid item>\n                            <Typography variant=\"h6\" color=\"textPrimary\">\n                                Add New Question:\n                            </Typography>\n                        </Grid>\n                        <Grid item className={this.styles.entry}>\n                            <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={this.state.titleError !== \"\"}\n                                    id=\"standard-name\"\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleTitleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.titleError}\n                                />\n                            </form>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                component=\"label\"\n                            >\n                            Upload Image\n                            <input\n                                type=\"file\"\n                                style={{ display: \"none\" }}\n                                onChange={this.encodeImageFileAsURL}\n                            />\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"column\" justify=\"flex-start\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.custom_labels}\n                                    onChange={this.setCustomLabels('custom_labels')}\n                                    value={this.state.custom_labels}\n                                    />\n                                }\n                                label=\"custom labels (optional)\"\n                            />\n                        </Grid>\n                        \n                        {this.state.custom_labels && \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={24} className={this.styles.entry}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"lower label\"\n                                            value={this.state.labels.lower}\n                                            onChange={this.handleLabelsChange('lower')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"upper label\"\n                                            value={this.state.labels.upper}\n                                            onChange={this.handleLabelsChange('upper')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        }\n                    </Grid>                       \n                    <Grid container direction=\"column\" justify=\"space-evenly\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.has_correct_answer}\n                                    onChange={this.setCorrectAnswer('has_correct_answer')}\n                                    value={this.state.has_correct_answer}\n                                    />\n                                }\n                                label=\"set correct answer (optional)\"\n                            />\n                        </Grid>\n                        {this.state.has_correct_answer && \n                            <Grid item>\n                                <Grid container direction=\"row\">\n                                    <FormControl component=\"fieldset\">\n                                        <RadioGroup\n                                            name=\"rangeVal\"\n                                            value={this.state.rangeVal}\n                                            onChange={this.handleSetRange}\n                                        >\n                                            <FormControlLabel value={\"not_range\"} name=\"not_range\" control={<Radio />} label={\"inequality/equality\"} />\n                                            <FormControlLabel value={\"range\"} name=\"range\" control={<Radio />} label={\"set range\"} />  \n                                        </RadioGroup>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        }\n                        \n                        {this.state.has_correct_answer && this.state.range ? ( <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry} spacing={16}> \n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.lower}\n                                        onChange={this.handleEqualityOperator('lower')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer lower bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.lower}\n                                        onChange={this.setCorrectBounds('lower')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.upper}\n                                        onChange={this.handleEqualityOperator('upper')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">and/or</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer upper bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.upper}\n                                        onChange={this.setCorrectBounds('upper')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    /> \n                                </Grid>\n                            </Grid>\n                        </Grid>)\n                        : (this.state.has_correct_answer && <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry}>\n                                <Grid item> \n                                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={24}>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                select\n                                                fullWidth\n                                                value={this.state.equality_operators.lower}\n                                                onChange={this.handleEqualityOperator('lower')}\n                                                InputProps={{\n                                                    startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                                }}\n                                                >\n                                                {answerBoundOptions.map(option => (\n                                                    <MenuItem key={option.value} value={option.value}>\n                                                    {option.label}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                fullWidth\n                                                id=\"correct answer lower bound\"\n                                                type=\"number\"\n                                                value={this.state.answer_bounds.lower}\n                                                onChange={this.setCorrectBounds('lower')}\n                                                InputProps={{\n                                                    endAdornment: (\n                                                    <InputAdornment variant=\"filled\" position=\"end\">\n                                                        %\n                                                    </InputAdornment>\n                                                    ),\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                    </Grid>\n                    <Grid container className={this.styles.button}>\n                        <Button\n                            disabled={this.state.disabled}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            onClick={this.handleSubmit}>\n                            Submit\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item className={this.styles.gridItem} xs={12} sm={6}>\n                    <Grid container direction=\"column\" align-items=\"flex-start\" spacing={24}>\n                        <Grid item><Typography variant=\"h6\" color=\"textPrimary\"> Preview: </Typography></Grid>\n                        <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                            <Grid item align=\"center\">\n                                <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n                        <Grid item>\n                            <Grid container direction=\"column\" justify=\"center\" spacing={24}>\n                                <Grid item xs={12}>\n                                    <Grid container direction=\"row\" justify=\"space-between\" className={this.styles.titleContainer}>\n                                        <Grid item>\n                                            <div className={this.styles.titleWrap}> {this.state.title} </div>\n                                        </Grid>\n                                        <Grid item>\n                                            <Grid container direction=\"row\" justify=\"flex-end\">\n                                                <Card className={this.styles.card}>\n                                                    <Typography align=\"center\" className={this.styles.percentText}>\n                                                        {this.state.slider_value.toString() + \" \"}%\n                                                    </Typography>\n                                                </Card>\n                                            </Grid>\n                                        </Grid>  \n                                    </Grid>\n                                </Grid>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" className={this.styles.slidercontainer} spacing={24}>\n                                    <Grid item xs><div className={this.styles.labels}>{this.state.labels.lower}</div></Grid>\n                                    <Grid item xs={8}>\n                                        <Slider\n                                            value={this.state.slider_value}\n                                            min={0}\n                                            max={100}\n                                            step={1}\n                                            aria-labelledby=\"label\"\n                                            onChange={this.handleSliderChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs><div className={this.styles.labels}>{this.state.labels.upper}</div></Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>  \n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddSliderQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Collapse from '@material-ui/core/Collapse';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport { Redirect } from \"react-router-dom\";\nimport { inject } from 'mobx-react';\nimport LectureObj from '../../../models/LectureObj';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport MomentUtils from \"@date-io/moment\";\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 80,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    gridItem: {\n        margin: theme.spacing.unit\n    },\n    dateField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 30,\n    },\n    gridItemButton: {\n        margin: theme.spacing.unit*2\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 60,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\nclass ProfessorAddLecture extends React.Component {\n    constructor(props) {\n        super(props)\n        MomentUtils.prototype.getStartOfMonth =\n          MomentUtils.prototype.startOfMonth;\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId = this.props.match.params.courseId\n        \n        const date = new Date();\n       \n        this.state = {\n            toLecture: false,\n            title: \"Lecture \",\n            courseId: this.courseId,\n            // description: \"\",\n            scheduled: false,\n            numLects: this.props.location.state.numLects.toString(),\n            errors: {title: ''},\n            titleValid: true,\n            formValid: false,\n            selectedDate: date,\n            dateValid: true,\n            openDate: date,\n            closeDate: date\n        }\n    }\n\n    componentDidMount() {\n        const lectString = \"Lecture \" + this.state.numLects.toString();\n        this.setState({\n            title: lectString\n        })\n        this.handleValidation()\n    }\n\n\n    handleValidation() {\n        let titleValid = this.state.titleValid;\n        let dateValid = this.state.dateValid;\n        let errors = this.state.errors;\n\n        if (this.state.title === '') {\n            errors.title = \"This field is required.\"\n            titleValid = false\n        }\n        else {\n            titleValid = true\n        }\n\n        if (this.state.scheduled) {\n            dateValid = this.state.closeDate.getTime() >= this.state.openDate.getTime()\n        }\n\n        this.setState({ titleValid: titleValid, dateValid: dateValid }, this.validateForm);\n    }\n\n\n    validateForm() {\n        this.setState({formValid: this.state.titleValid && this.state.dateValid });\n    }\n\n    modifyDate = date => {\n        date = new Date(Date.UTC(date.getYear() + 1900, date.getMonth(), date.getDate(), 12, 0, 0));\n\n        return date;\n    }\n\n    handleDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            selectedDate: date\n        })\n    }\n\n    handleOpenDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({ \n            openDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleCloseDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            closeDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        }, () => { this.handleValidation() });\n    };\n\n    handleCheck = (event) => {\n        const {name, checked} = event.target\n        this.setState({\n            [name]: checked\n        }, () => {this.handleValidation() });\n    }\n\n    handleSubmit = () => {\n        this.props.apiService.addLecture(\n            new LectureObj(this.state.title, this.state.selectedDate, null, this.state.courseId, null, this.state.scheduled, this.state.openDate, this.state.closeDate)\n        )\n        this.setState({ toLecture: true });\n    }\n\n    render() {\n        if (this.state.toLecture === true) {\n            return <Redirect to={'/professor/' + this.state.courseId + '/lectures'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Grid container direction=\"column\">\n                    <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h6\" color=\"textPrimary\">\n                            Add New Lecture:\n                        </Typography>\n                    </Grid>\n                    <form noValidate autoComplete=\"off\">\n                    <Grid item className={this.styles.gridItem}>\n                        <TextField\n                            requiredtitle=\"true\"\n                            error={!this.state.titleValid}\n                            name=\"title\"\n                            label=\"Lecture Title\"\n                            className={this.styles.textField}\n                            value={this.state.title}\n                            onChange={this.handleChange}\n                            margin=\"normal\"\n                            helperText={this.state.errors[\"title\"]}\n                            multiline={true}\n                        />\n                    </Grid>\n\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid item className={this.styles.gridItem}>\n                            <DatePicker\n                                margin=\"normal\"\n                                label=\"Lecture Date\"\n                                name=\"selectedDate\"\n                                value={this.state.selectedDate}\n                                onChange={this.handleDateChange}\n                                className={this.styles.dateField}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n\n                    <Grid item className={this.styles.gridItem}>\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item>\n                                <Checkbox\n                                    checked={this.state.scheduled}\n                                    onChange={this.handleCheck}\n                                    name=\"scheduled\"\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\">\n                                    Schedule the Lecture to Open and Close at Specific Dates\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Collapse in={this.state.scheduled} timeout=\"auto\" unmountOnExit>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid container direction=\"row\">\n                                <Grid item className={this.styles.gridItem}>\n                                    <DatePicker\n                                        margin=\"normal\"\n                                        label=\"Start Date\"\n                                        name=\"openDate\"\n                                        value={this.state.openDate}\n                                        onChange={this.handleOpenDateChange}\n                                        className={this.styles.dateField}\n                                    />\n                                </Grid>\n\n                                <Grid item className={this.styles.gridItem}>\n                                    <DatePicker\n                                        margin=\"normal\"\n                                        label=\"End Date\"\n                                        name=\"closeDate\"\n                                        value={this.state.closeDate}\n                                        onChange={this.handleCloseDateChange}\n                                        className={this.styles.dateField}\n                                    />\n                                </Grid>\n                            </Grid>\n                            \n                        </MuiPickersUtilsProvider>\n                    </Collapse>\n\n                    <Grid item className={this.styles.gridItemButton}>\n                        <Button\n                            disabled={!this.state.formValid}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            className={this.styles.container}\n                            onClick={this.handleSubmit}>\n                                Submit\n                        </Button>\n                   </Grid>\n                    </form>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddLecture);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass NoMatch extends React.Component {\n\n    render() {\n        return (\n            <Typography variant=\"h5\">\n                Woops! This page does not exist.\n            </Typography>\n        );\n    }\n\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport SideMenuBar from '../../components/SideMenuBar';\nimport TopMenuBar from '../../components/TopMenuBar';\nimport ProfessorStore from '../../stores/ProfessorStore';\nimport APIProfService from '../../services/APIProfService';\nimport ProfessorHome from './ProfessorHome';\nimport ProfessorNewCourse from './NewCourse';\nimport ProfessorViewLectures from './ViewLectures';\nimport ProfessorViewQuestions from './ViewQuestions';\nimport ProfessorAddMCQuestion from './AddMCQuestion';\nimport ProfessorAddFreeTextQuestion from './AddFreeTextQuestion';\nimport ProfessorAddSliderQuestion from './AddSliderQuestion';\nimport ProfessorAddLecture from './AddLecture';\nimport NoMatch from '../../components/NoMatch';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    content: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth,\n        },\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass ProfessorRoutes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = new ProfessorStore()\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                this.profStore.dataLoaded = true\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Provider profStore={this.profStore} apiService={this.apiProfService}>\n                <div>\n                    <CssBaseline />\n                    <Route path='/professor' component={TopMenuBar} />\n                    <nav>\n                        <Hidden xsDown implementation=\"css\">\n                            <Route path='/professor' component={SideMenuBar} />\n                        </Hidden>\n                    </nav>\n                    \n                    <main className={this.styles.content}>\n                        <Switch>\n                            <Route exact path='/professor' component={ProfessorHome} />\n                            <Route path='/professor/new' component={ProfessorNewCourse} />\n                            <Route path='/professor/:courseId/lectures' component={ProfessorViewLectures} />\n                            <Route path='/professor/:courseId/new' component={ProfessorAddLecture} />\n                            <Route exact path='/professor/:lectureId/questions' component={ProfessorViewQuestions} />\n                            <Route path='/professor/:lectureId/questions/new-mc' component={ProfessorAddMCQuestion} />\n                            <Route path='/professor/:lectureId/questions/new-free-text' component={ProfessorAddFreeTextQuestion} />\n                            <Route path='/professor/:lectureId/questions/new-slider' component={ProfessorAddSliderQuestion} />\n                            <Route component={NoMatch} />\n                        </Switch>\n                    </main>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorRoutes);\n","import { observable, action } from \"mobx\";\nimport CourseObj from '../models/CourseObj';\nimport { MultipleChoiceQuestionObj, FreeTextQuestionObj, SliderQuestionObj } from \"../models/QuestionObj\";\n\nexport default class StudentStore {\n  @observable\n  courses = []; // CourseObj[]\n\n  @observable\n  questions = []; // QuestionObj[]\n\n  @observable\n  prevQuestions = []; // QuestionObj[]\n\n  @observable\n  lastQuestion = null;\n\n  @observable\n  lastAnswer = null;  // the submitted answer to the most recently closed question\n\n  @observable\n  socketIOStatus = false;\n\n\n  @action\n  setSocketIOStatus(status) {\n    this.socketIOStatus = status;\n  }\n\n  /** Call this when the question is closed and the component about to unmount.\n   *  DO NOT call it when the student submits an answer!\n   */\n  @action\n  updateLastQuestion(question) {\n    this.lastQuestion = question;\n  }\n\n  @action\n  resetQuestions() {\n    this.questions = [];\n    this.prevQuestions = [];\n    this.lastAnswer = null;\n    this.lastQuestion = null;\n  }\n\n  @action\n  updateLastAnswer(answer) {\n    this.lastAnswer = answer;\n  }\n\n  @action\n  updateAllCourses(courses) {\n    this.courses = []\n\n    courses.forEach(element => {\n      element.num = element['coursenum']\n      element.joinCode = element['enroll_code']\n      this.courses.push(new CourseObj(element))\n    })\n  }\n\n  @action\n  dropCourse(course_id) {\n      this.courses.remove(this.courses.find(x=> x.id === course_id));\n  }\n\n  getQuestionWithId(question_id) {\n    return this.questions.find(x => x.id === question_id);\n  }\n\n  getPrevQuestionWithId(question_id) {\n    return this.prevQuestions.find(x => x.id === question_id);\n  }\n\n  @action\n  updateQuestion(question) {\n    const original_question = this.questions.find(x => x.id === question.id);\n\n    if (question.question_type === 'free_text') {\n      original_question.id = question.id;\n      original_question.lecture_id = question.lecture_id;\n      original_question.question_type = question.question_type;\n      original_question.question_title = question.question_title;\n      original_question.correct_answer = question.correct_answer;\n      original_question.creator_id = question.creator_id;\n      original_question.is_open = question.is_open;\n      original_question.opened_at = question.opened_at;\n      original_question.closed_at = question.closed_at;\n      original_question.created_at = question.created_at;\n      original_question.modified_at = question.modified_at;\n      original_question.answer =  question.answer;\n      original_question.word_limit = question.word_limit;\n    }\n  }\n\n  @action\n  updateAllQuestions(questions) {\n      this.questions = []\n\n      questions.forEach(element => {\n        if (element.question_type === 'multiple_choice') {\n          this.questions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n            element.question_type, element.question_title, element.question_image,\n            element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at,\n            element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n            element.option2, element.option3, element.option4, element.option5, element.number_of_options))\n        }\n        else {\n          if (element.question_type === 'free_text') {\n            this.questions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n              element.question_type, element.question_title, element.question_image,\n              element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at,\n              element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit))\n            }\n          else {\n            this.questions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n              element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at, \n              element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label))\n          }\n\n          }\n          \n\n      });\n  }\n\n  @action\n  updateAllPrevQuestions(questions) {\n    this.prevQuestions = [];\n\n    questions.forEach(element => {\n      console.log(element.question_title)\n      if (element.question_type === 'multiple_choice') {\n        this.prevQuestions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options))\n      }\n      else {\n        if (element.question_type === 'free_text') {\n          this.prevQuestions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n            element.question_type, element.question_title, element.question_image,\n            element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at,\n            element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit))\n        }\n        else {\n          this.prevQuestions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n            element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at, \n            element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label))\n        }\n      }\n    });\n  }\n\n  @action\n  addOneQuestion(element) {\n    if (this.questions.find(x => x.id === element.id) === undefined) {\n      if (element.question_type === 'multiple_choice') {\n        this.questions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options));\n      } else if (element.question_type === 'free_text') {\n        this.questions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit));\n      } else {\n        this.questions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n          element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at, \n          element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label));\n      }\n\n    }\n    \n  }\n\n  @action\n  updateOneQuestion(element) {\n    var question_id = element.id;\n    var oldQuestion = this.questions.find(x => x.id === question_id);\n    var index = this.questions.indexOf(oldQuestion);\n    if (index <= -1) {\n      // not yet in store\n      this.addOneQuestion(element);\n    } else {\n      // update existing\n      var updatedQuestion;\n      if (element.question_type === 'multiple_choice') {\n        updatedQuestion = new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title,\n          element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options);\n      } else if (element.question_type === 'free_text') {\n        updatedQuestion = new FreeTextQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, \n          element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit);\n      } else {\n        updatedQuestion = new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n          element.question_title, element.correct_answer, element.creator_id, element.is_open, element.scheduled, element.opened_at, \n          element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label);\n      }\n      this.questions[index] = updatedQuestion;\n    }\n  }\n\n  @action\n  removeQuestionById(question_id) {\n   \n      this.questions.remove(this.questions.find(x => x.id === question_id));\n  }\n\n  // get number of open questions for course \n  getNumberOfQuestions() {\n    return this.questions.length;  \n  }\n\n}\n","import { getStudentCoursesAPI, getStudentNameAPI, postEnrollStudentAPI, getStudentQuestionsByCourseAPI, getStudentPrevQuestionsByCourseAPI, postAnswerQuestionAPI, getLogoutStudentAPI, deleteDropCourseAPI } from '../utils/api-facade';\n\nexport default class APIStudentService {\n    constructor(studentStore) {\n        this.studentStore = studentStore;\n    }\n\n    loadAllCourses() {\n        getStudentCoursesAPI()\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllCourses(res.data)\n\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n        \n    }\n\n    async getName() {\n        return getStudentNameAPI()\n            .then(res => {\n                return res.data.name\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    loadAllQuestions(course_id) {\n        getStudentQuestionsByCourseAPI(course_id)\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllQuestions(res.data)\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n        \n    }\n\n    loadAllPrevQuestions(course_id) {\n        getStudentPrevQuestionsByCourseAPI(course_id)\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllPrevQuestions(res.data)\n\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n    }\n\n    // remove the course\n    dropCourse(course_id) {\n        deleteDropCourseAPI(course_id)\n        .then(\n            this.studentStore.dropCourse(course_id)\n        )\n        .catch(error => {\n            console.log(error.response);\n            this._checkAuth(error);\n        })\n    }\n\n    async postAnswer(answer, question_id) {\n        postAnswerQuestionAPI(answer, question_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n    }\n\n    async enrollCourse(code) {\n        return postEnrollStudentAPI(code)\n            .then(res => {\n                getStudentCoursesAPI()\n                    .then(res => {\n                        console.log(res.data)\n                        this.studentStore.updateAllCourses(res.data)\n        \n                    })\n                    .catch(error => {\n                        console.log(error.response);\n                        this._checkAuth(error);\n                    })\n                return null;\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n                return error.response.data;\n            })\n        // getStudentCoursesAPI()\n        //     .then(res => {\n        //         this.studentStore.updateAllCourses(res.data)\n\n        //     })\n        //     .catch(error => {\n        //         console.log(error.response);\n        //         this._checkAuth(error);\n        //     })\n    }\n\n    async getLogoutStudent() {\n        getLogoutStudentAPI()\n        .catch(error => {\n            console.log(error.response);\n            this._checkAuth(error);\n        })\n    }\n\n    _checkAuth(error) {\n        if (error.response !== undefined) {\n            if (error.response.status === 401)\n                window.location.replace('/login-student')\n        }\n    }\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom'\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    yellowCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.main\n    },\n    navyCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.secondary.light\n    },\n    greenCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.light\n    },\n    orangeCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.dark\n    },\n    link: {\n        width: '98%',\n        textDecoration: 'none',\n    },\n    icon: {\n        margin: theme.spacing.unit\n    },\n    typography: {\n        width: '100%'\n    }\n\n});\n\n@inject(\"store\")\n@observer\nclass ClassCard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.styles = props.classes\n    }\n    \n    state = {\n        link:'student/questions',\n        colorStyle: undefined,\n        open:false,\n    }\n\n    componentDidMount () {\n        var colors = [this.styles.orangeCard, this.styles.greenCard, this.styles.yellowCard, this.styles.navyCard];\n        this.setState({\n            colorStyle: colors[this.props.colorIndex]\n        });\n    }\n    \n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n      \n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleDelete = () => {\n        this.apiStudentService.dropCourse(this.props.id);\n        this.handleClose()\n    };\n\n    \n    render() {\n        return (\n            \n                <Card className={this.state.colorStyle}>\n                    <CardContent>\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\" spacing={24}>\n                            <Grid item xs={10}>\n                                <Link className={this.styles.link} to={{\n                                pathname: '/student/questions',\n                                state : {\n                                    course_id: this.props.id,\n                                }\n                                }}>\n                                    <Typography className={this.styles.typography} variant=\"h4\">\n                                        {this.props.course.dept} {this.props.course.num} - {this.props.course.title}: {this.props.course.term} {this.props.course.year}\n                                    </Typography>\n                                </Link>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Tooltip title=\"Drop Course\" disableFocusListener placement=\"top-start\">\n                                        <Button variant=\"text\" size=\"small\" onClick={this.handleOpen}>\n                                            <Icon className={this.styles.icon} color=\"secondary\">delete</Icon>\n                                        </Button>\n                                    </Tooltip>\n                                </Grid>\n                                \n                            </Grid>\n                            <Dialog\n                                open={this.state.open}\n                                onClose={this.handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete \\\"\" + this.props.name + \"\\\"?\"}</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">\n                                    Doing so will remove this course and all of its data permanently.\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleDelete} color=\"secondary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClassCard);","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport { Redirect } from 'react-router-dom';\n\n@inject(\"store\")\n@observer\nclass LogoutButton extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    state = {\n        logout: false\n    }\n\n    handleLogout = () => {\n        this.apiStudentService.getLogoutStudent();\n        this.setState({\n            logout: true\n        })\n    }\n\n    render() {\n        if (this.state.logout) {\n            return <Redirect to={'/'} push />\n        }\n        return (\n          \n            <Button onClick={this.handleLogout}>logout</Button>\n            \n        );\n    }\n}\nexport default LogoutButton;","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../../../assets/clikrlogo.png'\nimport LogoutButton from '../Buttons/LogoutButton';\nimport { Link } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n    render () {\n        return(\n            <div>\n            <AppBar position=\"static\" color='primary'>\n                <Toolbar>\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems='center'>\n                        <Grid item>\n                            <Link to=\"/student\">\n                                <img src = {logo} alt = \"logo\" width=\"100\"></img>\n                            </Link>\n                        </Grid>\n\n                        <Grid item>\n                            <Grid container direction=\"row\" alignItems='right'>\n                                <Typography variant=\"h5\" color=\"secondary\"> {this.props.userName} </Typography>\n\n                                <LogoutButton />\n                            </Grid>\n                        </Grid>\n                        \n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { observer, inject } from 'mobx-react';\nimport Icon from '@material-ui/core/Icon';\nimport APIStudentService from '../../../services/APIStudentService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main,\n        marginRight: theme.spacing.unit*2\n    },\n    icon: {\n        margin: theme.spacing.unit,\n        color: \"white\"\n    }\n});\n\n@inject('store')\n@observer\nclass AddCourseDialog extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    state = {\n        message: \"Enter Course Enrollment Code:\",\n        open: false,\n        code: \"\",\n        disabled: true,\n        errorMsg: null,\n    };\n\n    handleChange = (e) => {\n        if (e.target.value.length > 0) {\n            this.setState({\n                [e.target.name]: e.target.value.toUpperCase(),\n                disabled: false,\n            })\n        }\n        else {\n            this.setState({\n                disabled: true,\n                [e.target.name]: e.target.value.toUpperCase(),\n            })\n        }\n        \n    }  \n    handleOpen = () => {\n        this.setState({\n            message: \"Enter Course Enrollment Code:\",\n            open: true,\n            code: \"\",\n            disabled: true,\n        })\n    };\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    enroll() {\n        this.apiStudentService.enrollCourse(this.state.code).then((data) => {\n            if (data !== null) {\n                this.setState(() => {\n                    return {\n\n                        message: data.error,\n                        disabled: true,\n                        open: true,\n                    }\n                });\n            }\n            else {\n                this.setState(() => {\n                    return {\n                        open: false,\n                    }\n                });\n            }\n            \n        });\n    }\n    handleSubmit = () => {\n        \n        this.enroll();\n        if (this.state.message === \"Enter Course Enrollment Code:\") {\n            this.apiStudentService.loadAllCourses();\n            this.handleClose();\n        }\n\n    };\n\n    \n    render() {\n        return (\n            <div>\n                <Fab color=\"secondary\" aria-label=\"Add\" className={this.styles.button} onClick={this.handleOpen}>\n                    <Icon className={this.styles.icon}>add</Icon>\n                </Fab>\n                <Dialog\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">{this.state.message}</DialogTitle>\n                        <DialogContent>\n                            <TextField\n                                id=\"title\"\n                                helperText=\"Enter code\"\n                                name='code'\n                                value={this.state.code}\n                                onChange={e => this.handleChange(e)}\n                                fullWidth\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                cancel\n                            </Button>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disabled} color=\"secondary\">\n                                enroll\n                            </Button>\n                    </DialogActions>\n                </Dialog>   \n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(AddCourseDialog);","import { socketioURL } from '../constants/api';\nimport socketIOClient from 'socket.io-client';\n\nexport default class SocketIOStudentService {\n    \n    constructor(store) {\n        this.store = store;\n        this.socket = socketIOClient(socketioURL);\n        this.timeout = null;\n        \n        store.setSocketIOStatus(true);  // optimistic approach: assume we're connected, verify later\n        setTimeout(() => {\n            this.checkConnection();\n        }, 1000)\n    }\n\n    reset() {\n        this.store.resetQuestions();\n    }\n\n    // subscribe student for particular class\n    // must be called before all other calls\n    subscribe(course_id) {\n        this.socket.emit('subscribe student', course_id);\n    }\n\n    // check for opening of a question\n    detectOpenQuestion() {\n        this.socket.on('question opened', (data) => {\n            this.store.addOneQuestion(data.question);\n        });\n    }\n    \n\n    // check for closing of a question\n    detectCloseQuestion() {\n        this.socket.on('question closed', (msg) => {\n            this.store.updateLastQuestion(msg.question);\n            this.store.removeQuestionById(msg.question.id);\n        });\n    }\n    \n\n    // listen for server messages\n    listen() {\n        this.socket.on('server message', (msg) => {\n            console.log('Received message: ' + msg);\n        });\n    }\n\n    // get all open questions for a course \n    getAllQuestions() {\n        return this.socket.on('all open questions', (data) => {\n            this.store.updateAllQuestions(data.questions);\n            console.log(data);\n        });\n    }\n\n    // detect broken connection\n    startCheckingConnection() {\n        this.timeout = setInterval(() => {\n            this.checkConnection();\n        }, 1000);\n    }\n\n    // clear the timeout\n    stopCheckingConnection() {\n        clearTimeout(this.timeout);\n    }\n\n    // check if connected\n    checkConnection() {\n        if (this.socket.connected) {\n            this.store.setSocketIOStatus(true);\n        } else {\n            this.store.setSocketIOStatus(false);\n        }\n    }\n\n}","import React, { Component } from 'react';\nimport ClassCard from '../../../components/Student/StudentClassCards';\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { withStyles } from '@material-ui/core/styles'\nimport AddCourseDialog from '../../../components/Student/AddCourseDialog';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport SocketIOStudentService from '../../../services/SocketIOStudentService';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    paper: {\n        padding: theme.spacing.unit*2,\n    }\n});\n\n@inject(\"store\")\n@observer\nclass StudentHome extends Component {\n    state = {\n        course_ids: [],\n        userName: \"\",\n        showArchive: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.styles = props.classes\n        this.socketIOStudentService = new SocketIOStudentService(this.store);\n\n        this.handleToggleArchive = this.handleToggleArchive.bind(this)\n    }\n\n    componentDidMount() {\n        this.apiStudentService.getName()\n            .then(name => {\n                this.setState({ userName: name });\n            })\n    }\n    \n    componentWillReceiveProps() {\n        this.apiStudentService.loadAllCourses()\n    }\n    \n    handleToggleArchive() {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                showArchive: !prevState.showArchive\n            }\n        })\n    }\n\n    render() {\n        var currentCourses = this.store.courses.filter(courseObj => {\n            return courseObj.is_current\n        })\n\n        var archivedCourses = this.store.courses.filter(courseObj => {\n            return !courseObj.is_current\n        })\n\n        var showString = this.state.showArchive ? \"\" : \"Show\"\n\n        return (\n            <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header userName={this.state.userName} />\n                <Grid item className={this.styles.gridItem}>\n                    <Paper className={this.styles.paper}>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\" className={this.styles.gridContainer}>\n                            <Grid item xs={12} sm={10}>\n                                <Typography variant=\"h2\" color=\"secondary\" className={this.styles.typeography}> My Classes </Typography>\n                            </Grid>\n                            <Grid item container justify=\"flex-end\" xs={12} sm={2}>\n                                <AddCourseDialog />      \n                            </Grid>\n                        </Grid>\n                        <Grid container justify=\"center\" alignItems=\"flex-end\">\n                            {currentCourses.map(function (courseObj, index) {\n                                const colorIndex = index%4;\n                                return (\n                                    <ClassCard key={index} course={courseObj} id={courseObj.id} colorIndex={colorIndex}/>\n                                );\n                            })}\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n                <Grid item className={this.styles.gridItem} >\n                    <Paper className={this.styles.paper}>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\" className={this.styles.gridContainer}>\n                            <Grid item xs={12} sm={10}>\n                                <Typography variant=\"h2\" color=\"secondary\" className={this.styles.typeography}> {showString} Archived Courses </Typography>\n                            </Grid>\n                            <Grid item container justify=\"flex-end\" xs={12} sm={2}>\n                                <IconButton color=\"secondary\" onClick={this.handleToggleArchive}>\n                                    {this.state.showArchive ? <ExpandLess /> : <ExpandMore />}\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                        <Collapse in={this.state.showArchive} timeout=\"auto\" unmountOnExit>\n                            <Grid container justify=\"center\" alignItems=\"flex-end\">\n                                {archivedCourses.map(function (courseObj, index) {\n                                    const colorIndex = index%4;\n                                    return (\n                                        <ClassCard key={index} course={courseObj} id={courseObj.id} colorIndex={colorIndex}/>\n                                    );\n                                })}\n                            </Grid>\n                        </Collapse>\n                    </Paper>\n                </Grid>\n            </Grid>\n        )\n    }\n}\nexport default withStyles(styles)(StudentHome);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Timer from '@material-ui/icons/Timer';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingRight: theme.spacing.unit*2,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n@inject(\"store\")\n@observer\nclass FRQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answer: \"\",\n        sent: \"\",\n        disabled: false,\n        dialogue: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.sent);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer(this.state.answer, this.question.id)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    }\n\n    handleClick = (e) => {\n        if (this.state.sent === \"\"){\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    }\n\n    handleChange = (e) => {\n\n        if (e.target.value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        }\n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({ dialogue: false });\n        };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n    render() {\n        var timerString = `Open for ${this.state.time < 1000 ?\n            '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}`;\n        \n        if (this.question.scheduled === true) {\n            timerString = `Open from ${this.question.opened_at} to ${this.question.closed_at}`\n        }\n        \n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Typography variant=\"subtitle2\" color=\"secondary\"> \n                            <Timer className={this.styles.icon} /> {timerString}\n                        </Typography>\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                id=\"full-width\"\n                                helperText=\"Enter Response\"\n                                name = 'answer'\n                                value={this.state.answer}\n                                onChange={e => this.handleChange(e)}\n                                fullWidth\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Button onClick={this.handleClick} disabled={this.state.disabled} variant=\"contained\" color=\"secondary\">\n                            Submit\n                        </Button>\n                        <Dialog\n                            open={this.state.dialogue}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\"Answer changed- \"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                no\n                                </Button>\n                                <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                                yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(FRQ);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Timer from '@material-ui/icons/Timer';\nimport { withStyles } from '@material-ui/core/styles';\nconst prettyMs = require('pretty-ms')\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit * 1.5,\n    },\n    answerOption: {\n        marginLeft: theme.spacing.unit * 0.3,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n@inject(\"store\")\n@observer\nclass MCQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answerchoices: [],\n        answer: \"\",\n        sent: \"\",\n        dialogue: false,\n        disabled: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n\n        var answers = []\n\n        for (var i = 1; i <= this.question['number_of_options']; i++) {\n            var qstring = this.question[\"option\" + i.toString()];\n            answers.push(qstring)\n        }\n\n        this.setState({\n            answerchoices: answers\n        })\n\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.answerchoices.indexOf(this.state.sent) + 1);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            answer: e.target.value\n        });\n        if (e.target.value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        }\n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n    };\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer((this.state.answerchoices.indexOf(this.state.answer) + 1).toString(), this.props.questionId)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    };\n\n    handleClick = () => {\n        if (this.state.sent === \"\") {\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    };\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({\n            dialogue: false,\n            answer: this.state.sent,\n            disabled: true\n        });\n    };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n\n    render() {\n        var timerString = `Open for ${this.state.time < 1000 ?\n            '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}`;\n        \n        if (this.question.scheduled === true) {\n            timerString = `Open from ${this.question.opened_at} to ${this.question.closed_at}`\n        }\n\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Typography variant=\"subtitle2\" color=\"secondary\"> \n                            <Timer className={this.styles.icon} /> {timerString}\n                        </Typography>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup\n                                name=\"answers\"\n                                value={this.state.answer}\n                                onChange={this.handleChange}\n                            >\n                                {this.state.answerchoices.map((a, index) => {\n                                    return (\n                                        <FormControlLabel value={a} key={a} control={<Radio />} label={a} className={this.styles.answerOption} />\n                                    )\n                                })\n                                }\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n\n\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Button onClick={this.handleClick} disabled={this.state.disabled} value={this.state.answer} variant=\"contained\" color=\"secondary\">\n                            Submit\n                        </Button>\n                        <Dialog\n                            open={this.state.dialogue}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\"Answer changed- \"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                    \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </Paper>\n            </div>\n\n\n        );\n    }\n}\nexport default withStyles(styles)(MCQ);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/lab/Slider';\nimport Timer from '@material-ui/icons/Timer';\nimport Card from '@material-ui/core/Card';\n\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingTop: theme.spacing.unit*3,\n        paddingBottom: theme.spacing.unit*3,\n        paddingRight: theme.spacing.unit*1.5\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n        width: \"100%\"\n    },\n    percentContainer: {\n        paddingRight: theme.spacing.unit*3\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n        color: theme.palette.secondary.main\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        width: 45\n    },\n    whiteTypography: {\n        color: \"white\"\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n@inject(\"store\")\n@observer\nclass SLQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answer: 50,\n        sent: \"\",\n        disabled: false,\n        dialogue: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n    \n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.sent);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer(this.state.answer.toString(), this.question.id)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    }\n\n    handleClick = (e) => {\n        if (this.state.sent === \"\"){\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    }\n\n    handleSliderChange = (event, value) => {\n        if (value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        } \n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n        \n        this.setState({ answer: value });\n      };\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({ dialogue: false });\n    };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n    render() {\n        var timerString = `Open for ${this.state.time < 1000 ?\n            '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}`;\n        \n        if (this.question.scheduled === true) {\n            timerString = `Open from ${this.question.opened_at} to ${this.question.closed_at}`\n        }\n\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" justify=\"space-between\" className={this.styles.gridContainer}>\n                        <Grid item>\n                            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={24}>\n                                <Grid item xs>\n                                    <div className={this.styles.titleWrap}> {this.question.question_title} </div>\n                                    <Typography variant=\"subtitle2\" color=\"secondary\"> \n                                        <Timer className={this.styles.icon} /> {timerString}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Grid container justify=\"flex-end\" direction=\"row\" className={this.styles.percentContainer}>\n                                        <Card className={this.styles.card}>\n                                            <Typography align=\"center\" className={this.styles.whiteTypography}>\n                                                {this.state.answer.toString() + \" \"}%\n                                            </Typography>\n                                        </Card>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={24} className={this.styles.gridItem}>\n                            <Grid item xs>\n                                <Grid container justify=\"center\">\n                                    <div className={this.styles.labels}>{this.question.lower_label}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Slider\n                                    value={this.state.answer}\n                                    min={0}\n                                    max={100}\n                                    step={1}\n                                    aria-labelledby=\"label\"\n                                    onChange={this.handleSliderChange}\n                                />\n                            </Grid>\n                            <Grid item xs>\n                                <Grid container justify=\"center\">\n                                    <div className={this.styles.labels}>{this.question.upper_label}</div>\n                                </Grid>\n                            </Grid>\n                        </Grid> \n                    </Grid>\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Grid item >\n                            <Button onClick={this.handleClick} disabled={this.state.disabled} variant=\"contained\" color=\"secondary\">\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                <Dialog\n                    open={this.state.dialogue}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Answer changed- \"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                        \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                        no\n                        </Button>\n                        <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                        yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>            \n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(SLQ);\n","\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    neutralAnswer: {\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n\n});\n\n@inject(\"store\")\n@observer\nclass PrevMCQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = null;\n        this.answerchoices = [];\n        this.correct = null;\n    }\n\n    render() {\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            this.answer = this.store.lastAnswer;\n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            this.answer = this.question.answer;\n        }\n\n        // answer choices\n        var answers = []\n\n        for (var i = 1; i <= this.question['number_of_options']; i++) {\n            var qstring = this.question[\"option\" + i.toString()];\n            answers.push(qstring)\n        }\n\n        this.answerchoices = answers;\n\n        // compute correct answer\n        var a =  this.question.correct_answer\n        if (a !== undefined) {\n            if (a !== null && a !== \"\") {\n                this.correct = Number(a) - 1;\n            } else {\n                this.correct = null;\n            }\n        }\n\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup\n                                name=\"answers\"\n                            >\n                                {this.answerchoices.map((a, index) => {\n                                    var background_style;\n                                    if (this.correct === undefined || this.correct === null) {\n                                        background_style = this.styles.neutralAnswer;\n                                    }\n                                    else if (index === this.correct) {\n                                        background_style = this.styles.correctAnswer;\n                                    }\n                                    else if (parseInt(this.answer, 10)-1 === index) {\n                                        background_style = this.styles.wrongAnswer;\n                                    }\n\n                                    return (\n                                        <FormControlLabel value={a} key={a} control={<Radio disabled checked={index === parseInt(this.answer)-1} />} label={a} className={background_style}/>\n                                    );\n                                })}\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                </Paper>\n            </div>\n\n\n        );\n    }\n}\nexport default withStyles(styles)(PrevMCQ);\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingRight: theme.spacing.unit*2,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    neutralAnswer: {\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n});\n\n@inject(\"store\")\n@observer\nclass PrevFRQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = \"\";\n        this.correct = null;\n        this.helperText = \"\";\n    }\n\n    \n\n    render() {\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            if (this.store.lastAnswer !== null) {\n                this.answer = this.store.lastAnswer;\n            } \n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            if (this.question.answer !== null) {\n                this.answer = this.question.answer;\n            }   \n        }\n\n        // correct answer\n        var a =  this.question.correct_answer\n        if (a !== undefined) {\n            this.correct = a;\n\n            if (a === \"\" || a === null) {\n                this.helperText = \"Your Answer: \"\n            } else if (this.answer === a) {\n                this.helperText = \"Correct\"\n            } else {\n                this.helperText = \"Correct Answer: \" + a\n            }\n        }\n\n        var backgroundStyle;\n        if (this.correct && this.correct !== \"\") {\n            if (this.answer === this.correct) {\n                backgroundStyle = this.styles.correctAnswer;\n            } else {\n                backgroundStyle = this.styles.wrongAnswer;\n            }\n        } else {\n            backgroundStyle = this.styles.neutralAnswer;\n        }\n    \n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                id=\"full-width\"\n                                helperText={this.helperText}\n                                name = 'answer'\n                                value={this.answer}\n                                fullWidth\n                                disabled\n                                className={backgroundStyle}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(PrevFRQ);\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1em\", \n        display:\"flex\", \n        justifyContent:\"center\",\n        color: \"#424242\"\n    },\n    titleContainer: {\n        paddingBottom: theme.spacing.unit*0.25\n    },\n    percentContainer: {\n        paddingRight: theme.spacing.unit*3\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n        color: theme.palette.secondary.main\n    },\n    card: {\n        backgroundColor: \"gray\",\n        padding: theme.spacing.unit*0.25,\n        width: 45\n    },\n    gridItem: {\n        width: \"98%\"\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n        paddingTop: theme.spacing.unit*2\n        \n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n        paddingTop: theme.spacing.unit*2\n    },\n    neutralAnswer: {\n        paddingTop: theme.spacing.unit*2\n    },\n    textField: {\n\t\tfontSize: 50\n\t}\n});\n\n@inject(\"store\")\n@observer\nclass PrevSLQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = -1;\n        this.helperText = \"\";\n        \n    }\n\n    // helper method to see if answer is correct\n    operatorToComparison(response, operator, answer) {\n        let correct = false;\n        switch(operator) {\n            case \"<\":\n                correct = response < answer;\n                break;\n            case \"<=\":\n                correct = response <= answer;\n                break;\n            case \">\":\n                correct = response > answer;\n                break;\n            case \">=\":\n                correct = response >= answer;\n                break;\n            default:\n                correct = response === answer;\n        } \n        return correct;\n    }\n    \n    // check if answer is correct\n    checkAnswer(correct_answer, answer) {\n        if (correct_answer === null || correct_answer === \"\") return true;\n        const expression = correct_answer.split(\" \");\n        if (expression.length === 2) {\n            return this.operatorToComparison(Number(answer), expression[0], Number(expression[1]))\n        }\n        else {\n            const exp1 = this.operatorToComparison(Number(answer), expression[0], Number(expression[1]))\n            const exp2 = this.operatorToComparison(Number(answer), expression[3], Number(expression[4]))\n            if (expression[2] === \"&&\") return exp1 && exp2;\n            return exp1 || exp2;\n        }\n    }\n\n    // helper method for function that turns answer into a more readable form \n    operatorToWord(operator) {\n        let string = \"equals\";\n        switch(operator) {\n            case \"<\":\n                string = \"<\";\n                break;\n            case \"<=\":\n                string = \"\\u2264\";\n                break;\n            case \">\":\n                string = \">\";\n                break;\n            case \">=\":\n                string = \"\\u2265\";\n                break;\n            case \"||\":\n                string = \"or\";\n                break;\n            case \"&&\":\n                string = \"and\";\n                break;\n            default:\n                string = \"=\";\n        } \n        return string;\n    }\n\n    // turn the answer into a more readable form\n    getAnswerText(answer) {\n        if (answer === null) {\n            return \"\";\n        }\n        const expression = answer.split(\" \");\n        if (expression.length === 2) {\n            return \"answer \" + this.operatorToWord(expression[0]) + \" \" +  expression[1] + \"%\";\n        }\n        else {\n            return \"answer \" + this.operatorToWord(expression[0]) + \" \" +  expression[1] + \"% \" + this.operatorToWord(expression[2]) + \" \" + this.operatorToWord(expression[3]) + \" \" + expression[4] + \"%\";\n        }\n    }\n\n    render() {\n\n        // fetch question data\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            if (this.store.lastAnswer !== null) {\n                this.answer = Number(this.store.lastAnswer);\n            } \n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            if (this.question.answer !== null) {\n                this.answer = Number(this.question.answer);\n            }   \n        }\n        \n        // background style\n        var correct = this.checkAnswer(this.question.correct_answer, this.answer);\n        var backgroundStyle;\n        if (correct) {\n            if (this.question.correct_answer !== \"\" && this.question.correct_answer !== null) {\n                backgroundStyle = this.styles.correctAnswer;\n            } else {\n                backgroundStyle = this.styles.neutralAnswer;\n            }\n        } else {\n            backgroundStyle = this.styles.wrongAnswer;\n        }\n\n        // helper text\n        if (this.question.correct_answer === \"\" || this.question.correct_answer === null) {\n            this.helperText = \"Your Answer: \" + this.answer.toString() + \"%\"\n        } else {\n            this.helperText = \"Correct Answer: \" + this.getAnswerText(this.question.correct_answer) \n        }\n\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" justify=\"center\" className={this.styles.gridContainer}>\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={16} className={this.styles.titleContainer}>\n                            <Grid item xs>\n                                <div className={this.styles.titleWrap}> {this.question.question_title} </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Grid container justify=\"flex-end\" direction=\"row\" className={this.styles.percentContainer}>\n                                    <Card className={this.styles.card}>\n                                        <Typography align=\"center\" className={this.styles.whiteTypography}>\n                                            {this.answer.toString() + \" \"}%\n                                        </Typography>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid container direction=\"column\" className={this.styles.gridItem}>\n                            <Grid container direction=\"column\" justify=\"space-evenly\" className={backgroundStyle}>\n                                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={24}>\n                                    <Grid item xs>\n                                        <Grid container justify=\"center\">\n                                            <div className={this.styles.labels}>{this.question.lower_label}</div>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Slider\n                                            disabled\n                                            value={this.answer}\n                                            min={0}\n                                            max={100}\n                                            step={1}\n                                            aria-labelledby=\"label\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Grid container justify=\"center\">\n                                            <div className={this.styles.labels}>{this.question.upper_label}</div>\n                                        </Grid>\n                                    </Grid>\n                                </Grid> \n                                <Grid container direction=\"row\" >\n                                    <TextField\n                                        id=\"correctAnswer\"\n                                        helperText={this.helperText}\n                                        fullWidth\n                                        disabled\n                                    />\n                                </Grid>\n                            </Grid> \n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(PrevSLQ);\n","import React, { Component } from 'react';\n//import './style.css'; // Not our preferred way of importing style\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { observer, inject } from 'mobx-react';\nimport FRQ from '../../../components/Student/Questions/FRQ';\nimport MCQ from '../../../components/Student/Questions/MCQ';\nimport SLQ from '../../../components/Student/Questions/SLQ';\nimport PrevMCQ from '../../../components/Student/Questions/PrevMCQ';\nimport PrevFRQ from '../../../components/Student/Questions/PrevFRQ';\nimport PrevSLQ from '../../../components/Student/Questions/PrevSLQ';\nimport { withStyles } from '@material-ui/core/styles';\nimport SocketIOStudentService from '../../../services/SocketIOStudentService';\n\nconst styles = theme => ({\n    gridContainer: {\n        padding: theme.spacing.unit,\n    },\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    }\n\n});\n\n@inject(\"store\")\n@observer\nclass QuestionPage extends Component {\n\n    state = {\n        show_previous_questions: false,\n        show_last_question: true,\n        dots: '',\n    }\n    \n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.socketIOStudentService = new SocketIOStudentService(this.store)\n        this.timeout = null;  \n    }\n\n    componentDidMount() {\n        this.socketIOStudentService.reset();\n\n        const { course_id } = this.props.location.state\n        \n        this.socketIOStudentService.subscribe(course_id);\n\n        this.socketIOStudentService.detectOpenQuestion();\n        \n        this.socketIOStudentService.detectCloseQuestion();\n\n        this.socketIOStudentService.getAllQuestions();\n\n        this.socketIOStudentService.listen();\n\n        this.socketIOStudentService.startCheckingConnection();\n\n        // timeout for the status dots\n        this.timeout = setInterval(() => {\n            var dots = this.state.dots;\n            if (dots === '...') {\n                dots = '';\n            } else {\n                dots += '.';\n            }\n            this.setState({\n                dots: dots,\n            })\n        }, 1000);\n\n    }\n\n    componentWillUnmount() {\n        // cancel the timeout\n        clearTimeout(this.timeout);\n\n        // stop checking connection\n        this.socketIOStudentService.stopCheckingConnection();\n    }\n\n    handleClick = () => {\n        const { course_id } = this.props.location.state;\n\n        if (!this.state.show_previous_questions) {\n            this.apiStudentService.loadAllPrevQuestions(course_id);\n            this.setState({\n                show_previous_questions: true,\n                show_last_question: false,\n            });\n        } else {\n            this.setState({\n                show_previous_questions: false,\n                show_last_question: true,\n            }); \n        }\n    };\n\n    render() {\n        return (\n            <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header />\n                <Grid className={this.styles.gridContainer}>\n                    <Paper className={this.styles.paper} style={{backgroundColor: \"secondary\"}}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.store.socketIOStatus ? ((this.store.getNumberOfQuestions() !== 0 ? \"Open Questions\" : \"No Open Questions\") + this.state.dots) : \"Connection lost!\"} </Typography>\n                        {this.store.getNumberOfQuestions() !== 0 ? (\n                            <Grid>\n                                {this.store.questions.map(q => {\n                                    if (q.question_type === 'free_text') {\n                                        return (\n                                            <Grid item className={this.styles.gridItem} key={q.id}>\n                                                <FRQ questionId={q.id} />\n                                            </Grid>\n            \n                                        )\n                                    }\n                                    else {\n                                        // TODO: handle slider and drag-and-drop questions!\n                                        if (q.question_type === \"slider\") {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <SLQ questionId={q.id} />\n                                                </Grid>\n                                            )\n                                        }\n                                        else {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <MCQ questionId={q.id} />\n                                                </Grid>\n                                            )\n\n                                        }\n                                       \n                                    }\n            \n                                })}\n            \n                            </Grid>\n                        ) : null} \n\n                    </Paper>\n                </Grid>\n                <Grid className={this.styles.gridContainer}>\n                    <Paper className={this.styles.paper}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.state.show_last_question && this.store.lastQuestion !== null ? \"Recently Closed\" : \"Previous Questions\"} </Typography>\n                        {this.state.show_last_question ? (\n                            <Grid className={this.styles.gridContainer}>\n                                {this.store.lastQuestion !== null ? (\n                                    this.store.lastQuestion.question_type === \"multiple_choice\" ? (\n                                        <PrevMCQ isLast={true} />\n                                    ) : this.store.lastQuestion.question_type === \"free_text\" ? (\n                                        <PrevFRQ isLast={true} />\n                                    ) : (<PrevSLQ isLast={true} />)\n                                ) : null } \n                            </Grid>\n                        ) : null}\n                        <Grid className={this.styles.gridContainer}>\n                            <Button onClick={this.handleClick} variant=\"outlined\" color=\"secondary\">\n                                {this.state.show_previous_questions ? \"Hide Previous Questions\" : \"Show All Previous Questions\"}\n                            </Button>\n                        </Grid>\n                        <Grid >\n                            {this.state.show_previous_questions ? (\n                                this.store.prevQuestions.length > 0 ? (\n                                    this.store.prevQuestions.map(q => {\n                                        if (q.question_type === 'free_text') {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <PrevFRQ questionId={q.id} />\n                                                </Grid>\n            \n                                            )\n                                        }\n                                        else {\n                                            if (q.question_type === \"multiple_choice\") {\n                                                return (\n                                                    <Grid item className={this.styles.gridItem} key={q.id}>\n                                                        <PrevMCQ questionId={q.id}/>\n                                                    </Grid>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <Grid item className={this.styles.gridItem} key={q.id}>\n                                                        <PrevSLQ questionId={q.id}/>\n                                                    </Grid>\n                                                )\n                                            }\n                                            \n                                        }\n            \n                                    })) : \n                                    <Typography color=\"secondary\"> There are no previous questions </Typography>\n                                ) : null}\n                        </Grid>\n                    </Paper>\n                </Grid>\n                \n\n            </Grid>\n        );\n\n    }\n}\nexport default withStyles(styles)(QuestionPage);","import React, { Component } from 'react';\n//import './style.css'; // Not our preferred way of importing style\nimport Header from '../../../components/Student/LoggedinHeader';  \nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { observer, inject } from 'mobx-react';\nimport { Link } from 'react-router-dom'\n\n@inject(\"store\")\n@observer\nclass CheckQuestions extends Component {\n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)        \n    }\n\n    componentDidMount() {\n        const { course_id } = this.props.location.state\n        this.apiStudentService.loadAllQuestions(course_id)\n        this.setState({\n            course_id: this.props.location.state\n        })\n    }\n    state = {\n        course_id: \"\"\n    }\n\n    render() {\n        if (this.store.questions['length'] !== 0) {\n            return (\n             <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header/>\n                \n                <Grid container direction='column' justify='center'>\n                    <Paper style={{padding:\"2%\"}}>\n                    <Button size=\"large\" variant=\"contained\" color=\"secondary\" width=\"100%\">\n                        <Link to={{\n                            pathname: '/student/questions',\n                            state : {\n                                course_id: this.state.course_id\n                            }\n                        }} style={{ \"color\": \"white\", \"text-decoration\": \"none\" }}> Open Questions </Link>\n\n                    </Button>\n                    </Paper>\n                </Grid>\n            </Grid>\n            )\n        } \n        else {\n            return (\n             <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header/>\n                {}\n\n                <Grid item>\n                    <Paper style={{paddingTop:\"1%\", paddingBottom:\"1%\"}}>\n                        <Typography variant=\"h5\" color=\"secondary\" style={{width:\"98%\", paddingLeft:\"1%\", paddingRight:\"1%\"}}> There are no questions for this course at the moment... </Typography> \n                    </Paper>\n                </Grid>\n            </Grid>\n            )\n\n        }\n    }\n}\nexport default CheckQuestions;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport StudentStore from '../../stores/StudentStore';\nimport APIStudentService from '../../services/APIStudentService';\nimport StudentHome from './StudentHome';\nimport QuestionPage from './StudentQuestionPage';\nimport CheckQuestions from './CheckQuestions';\nimport NoMatch from '../../components/NoMatch';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    content: {\n        marginLeft: drawerWidth,\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass StudentRoutes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = new StudentStore()\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    componentDidMount() {\n        this.apiStudentService.loadAllCourses()\n    }\n\n    render() {\n        return (\n            <div>\n                <Provider store={this.store}>\n                    <Switch>\n                        <Route exact path='/student' component={StudentHome} />\n                        <Route path='/student/checkquestions' component={CheckQuestions} />\n                        <Route path='/student/questions' component={QuestionPage}/>\n                        <Route component={NoMatch} />\n                    </Switch>\n                </Provider>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StudentRoutes);","import React, { Component } from 'react';\nimport './style.css'; // Not our preferred way of importing style\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport logoprof from '../../assets/clikrlogo2.png';\nimport logostudent from '../../assets/clikrlogo.png';\nimport background from '../../assets/background.jpeg';\n\n\nconst styles = theme => ({\n  studentTypography: {\n    color: theme.palette.secondary.main,\n  },\n  profTypography: {\n    color: theme.palette.primary.main,\n  },\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    width: '100vw',\n    backgroundImage: 'url(' + background + ')',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center center',\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  studentcard: {\n    backgroundColor: theme.palette.primary.main,\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: 400,\n    },\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: 300,\n    },\n  },\n  profcard: {\n    backgroundColor: theme.palette.secondary.main,\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: 400,\n    },\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: 300,\n    },\n    marginBottom: 16,\n  }\n});\n\n\nclass Home extends Component {\n\n  state = {\n    toStudent: false,\n    toProf: false\n  }\n\n  constructor(props) {\n    super(props)\n    this.styles = props.classes\n  }\n\n  handleLoginProf = () => {\n    this.setState({\n      toProf: true\n    })\n  }\n\n  handleLoginStudent = () => {\n    this.setState({\n      toStudent: true\n    })\n  }\n\n  render() {\n    if (this.state.toProf) {\n      return <Redirect to={'/login-prof'} push />\n    }\n    if (this.state.toStudent) {\n      return <Redirect to={'/login-student'} push />\n    }\n    return (\n      <div className={this.styles.root}>\n        <Grid container spacing={24} justify=\"center\">\n          <Grid item className={this.styles.clickGrid}>\n            <Card className={this.styles.studentcard}>\n              <CardActionArea onClick={this.handleLoginStudent}>\n                <CardContent>\n                  <Grid item container direction=\"column\" spacing={16} >\n                    <Grid item align=\"center\">\n                      <img src={logostudent} alt=\"logo\" width={100}></img>\n                    </Grid>\n                    <Grid item align=\"center\">\n                      <Typography variant=\"h2\" gutterBottom className={this.styles.studentTypography}>\n                        STUDENT LOGIN\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n\n          <Grid item className={this.styles.clickGrid}>\n            <Card className={this.styles.profcard}>\n              <CardActionArea onClick={this.handleLoginProf}>\n                <CardContent>\n                  <Grid item container direction=\"column\" spacing={16} >\n                    <Grid item align=\"center\">\n                      <img src={logoprof} alt=\"logo\" width={100}></img>\n                    </Grid>\n                    <Grid item align=\"center\">\n                      <Typography variant=\"h2\" gutterBottom className={this.styles.profTypography}>\n                        TEACHER LOGIN\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <AppBar position=\"fixed\" color=\"primary\" className={this.styles.appBar}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n          >\n            <Typography color=\"inherit\">\n              {\"Created by mecakir, zsyang, afeng, lheimes, and czye.\"}\n            </Typography>\n          </Grid>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Home);\n","import React, { Component } from \"react\";\nimport { baseURL } from \"../../constants/api\";\n\nclass Login extends Component {\n  componentDidMount() {\n    var url_add_on_1 = \"student/login?service=\";\n    var url_add_on_2 = \"/student\";\n    var end_sub = 14;\n    if (\n      window.location.href.split(\"login-\")[1].valueOf() === \"prof\".valueOf()\n    ) {\n      url_add_on_1 = \"professor/login?service=\";\n      url_add_on_2 = \"/professor\";\n      end_sub = 11;\n    }\n\n    window.location.replace(\n      baseURL +\n        url_add_on_1 +\n        window.location.href.substring(\n          0,\n          window.location.href.length - end_sub\n        ) +\n        url_add_on_2\n    );\n  }\n\n  render() {\n    return <div>Logging In</div>;\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProfessorRoutes from './Professor'\nimport StudentRoutes from './Student'\nimport NoMatch from '../components/NoMatch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from './Home';\nimport Login from './Login'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#E9C46A',\n            dark: '#F4A261',\n            light: '#2A9D8F',\n        },\n        secondary: {\n            main: '#264653'\n        },\n        accent: {\n            main: '#E76F51',\n        },\n        type: 'light'\n    },\n        typography: {\n        useNextVariants: true,\n    },\n});\n\nclass App extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router>\n                    <div>\n                        <Switch>\n                            <Route exact path='/' component={Home} />\n                            <Route exact path='/login-(prof|student)' component={Login} />\n                            <Route path=\"/professor\" component={ProfessorRoutes} />\n                            <Route path=\"/student\" component={StudentRoutes} />\n                            <Route component={NoMatch} />\n                        </Switch>\n                    </div>\n                </Router>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './config/serviceWorker';\nimport App from './routes/app';\nimport { configure } from 'mobx';\n\n// enable MobX strict mode\nconfigure({ enforceActions: \"observed\" });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}