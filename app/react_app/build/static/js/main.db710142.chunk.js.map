{"version":3,"sources":["assets/holder_hall.jpg","assets/nassau_hall.jpg","assets/boathouse.jpeg","config/serviceWorker.js","components/SideMenuBar/index.jsx","constants/api.js","utils/api-facade.js","services/APIProfService.js","components/TopMenuBar/index.jsx","models/LectureObj.js","stores/ProfessorStore.js","components/AddStudentsModal/index.jsx","components/DuplicateCourseModal/index.jsx","components/CourseListItemNavEdit/index.jsx","components/ListOfAllCourses/index.jsx","components/DeleteCoursesList/index.jsx","components/AllCoursesFrame/index.jsx","components/ListOfArchivedCourses/index.jsx","components/ArchivedCoursesFrame/index.jsx","routes/Professor/ProfessorHome/index.jsx","models/CourseObj.js","routes/Professor/NewCourse/index.jsx","components/EditLectureDialog/index.jsx","components/LectListItemNavEdit/index.jsx","components/ListOfAllLectures/index.jsx","components/CourseInfo/index.jsx","components/DeleteLecturesList/index.jsx","components/AllLecturesFrame/index.jsx","routes/Professor/ViewLectures/index.jsx","components/AddQuestionModal/index.jsx","components/OpenClosedButton/index.jsx","components/BaseStatsComponent/index.jsx","components/MCQuestionStats/index.jsx","components/FreeTextStats/index.jsx","components/SliderStats/index.jsx","components/ViewStatsModal/index.jsx","models/QuestionObj.js","components/EditFRQDialog/index.jsx","components/EditMCQDialog/index.jsx","components/EditSLQDialog/index.jsx","components/QuestionListItem/index.jsx","components/DeleteQuestionsList/index.jsx","components/AllQuestionsFrame/index.jsx","routes/Professor/ViewQuestions/index.jsx","routes/Professor/AddMCQuestion/index.jsx","routes/Professor/AddFreeTextQuestion/index.jsx","routes/Professor/AddSliderQuestion/index.jsx","routes/Professor/AddLecture/index.jsx","components/NoMatch/index.jsx","routes/Professor/index.jsx","stores/StudentStore.js","services/APIStudentService.js","components/Student/StudentClassCards/index.js","components/Student/Buttons/LogoutButton/index.js","components/Student/LoggedinHeader/index.js","components/Student/AddCourseDialog/index.jsx","services/SocketIOStudentService.js","routes/Student/StudentHome/index.js","components/Student/Questions/FRQ/index.js","components/Student/Questions/MCQ/index.js","components/Student/Questions/SLQ/index.jsx","components/Student/Questions/PrevMCQ/index.js","components/Student/Questions/PrevFRQ/index.js","components/Student/Questions/PrevSLQ/index.jsx","routes/Student/StudentQuestionPage/index.js","routes/Student/CheckQuestions/index.js","routes/Student/index.jsx","routes/Login/LoginProf/index.jsx","routes/Login/CreateProf/index.jsx","routes/Login/LoginStudent/index.jsx","routes/Login/CreateStudent/index.jsx","services/APILoginService.js","routes/Login/index.jsx","routes/Home/index.jsx","routes/app.jsx","index.js","assets/clikrlogo2.png","assets/clikrlogo.png"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","SideMenuBar","inject","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","selectedCourse","selectedLecture","styles","classes","profStore","undefined","pathname","length","url_parts_arr","split","setState","getLectureWithId","course_id","id","history","push","_this2","courses","filter","courseObj","is_current","react_default","a","createElement","Grid_default","container","direction","justify","alignItems","Drawer_default","className","drawer","variant","paper","drawerPaper","anchor","item","src","logo","alt","height","Divider_default","align","Typography_default","titletext","List_default","map","index","lectures","getCourseLectures","key","ListItem_default","hover","button","onClick","handleCourseClick","selected","ListItemText_default","disableTypography","primary","type","listtext","title","secondary","listsubtext","term","year","ListItemSecondaryAction_default","IconButton_default","color","disabled","handleExpand","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","lectureObj","innerIndex","handleLectureClick","nestedListtext","React","Component","withRouter","withStyles","theme","width","flexShrink","palette","main","dark","paddingTop","spacing","unit","paddingLeft","backgroundColor","&:hover","toolbar","mixins","socketioURL","baseURL","loginProfessorAPI","username","password","axios","post","netId","createProfessorAPI","firstName","lastName","loginStudentAPI","createStudentAPI","getStudentCoursesAPI","get","postEnrollStudentAPI","code","enroll_code","postAnswerQuestionAPI","answer","question_id","defaults","withCredentials","APIProfService","professorStore","then","res","data","name","catch","error","console","log","_checkAuth","archiveCourseAPI","updateCourseData","course","message","_this3","duplicateCourseAPI","lecture_id","_this4","exportGradesLectureAPI","_this5","exportGradesCourseAPI","_this6","dataLoaded","Promise","updateData","_this7","updateAllCourseData","_this8","getProfAnswers","_this9","getQuestionsForLectureAPI","_this10","action","postOpenQuestionAPI","openQuestion","_this11","postCloseQuestionAPI","closeQuestion","_this12","postCloseAllQuestionsAPI","closeAllQuestionsForLecture","lecture","_this13","date","description","open_date","openDate","close_date","closeDate","scheduled","postNewLectureAPI","newLec","find","questions","addLecture","_this14","dept","coursenum","num","postNewCourseAPI","newCourse","addCourse","_this15","delete","removeCourse","loadData","courseId","courseTitle","course_title","_this16","patch","updateCourse","_this17","patchUpdateCourseDataAPI","_this18","updateLecture","questionObj","question","_this19","question_type","question_title","question_image","correct_answer","option1","option2","option3","option4","option5","number_of_options","word_limit","lower_label","upper_label","updateQuestion","_this20","removeLecture","parentLectureId","_this21","removeQuestion","_this22","creator_id","postNewQuestionAPI","newQ","q","addQuestion","_this23","response","status","replace","TopMenuBar","anchorEl","goHome","logout","userName","handleMenu","event","currentTarget","handleClose","handleLogout","handleHome","store","apiProfService","getName","getLogoutProf","Redirect","to","AppBar_default","position","appBar","Toolbar_default","homeButton","SvgIcon_default","fill","d","style","float","marginRight","aria-haspopup","viewBox","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","defineProperty","breakpoints","up","marginLeft","concat","LectureObj","ProfessorStore","x","QuestionObj","lec","slice","sort","b","created_at","oldCourse","oldLecture","getLectureById","remove","parent_lecture_id","_i","_keys","keys","is_open","opened_at","Date","now","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","_courses","observable","AddStudentsModal","handleOpen","handleSubmit","joinCode","nextProps","Tooltip_default","placement","PersonAdd_default","Modal_default","aria-labelledby","aria-describedby","top","left","transform","gutterBottom","Button_default","AddStudentsModalWrapped","background","boxShadow","shadows","padding","display","flexWrap","textField","dense","marginTop","menu","DuplicateCourseModal","newYear","newTerm","handleChange","_event$target","target","duplicateCourse","FileCopy_default","onSubmit","noValidate","autoComplete","TextField_default","label","onChange","margin","DuplicateCourseModalWrapped","flexDirection","CourseListItemNavEdit","editMode","newTitle","nav","courseYear","courseTerm","courseCode","toHome","handleEdit","handleEditOpen","handleEditClose","changeCourseTitle","handleToCourse","handleArchive","archiveCourse","handleExportGrades","exportGradesCourse","element","document","file","Blob","fileData","href","URL","createObjectURL","download","fileName","body","appendChild","click","divider","FormControl_default","InputBase_default","input","bootstrapInput","Done_default","iconDone","ImportExport_default","components_AddStudentsModal","Edit_default","components_DuplicateCourseModal","archive","Unarchive_default","Archive_default","light","iconEdit","borderRadius","common","white","border","fontSize","transition","transitions","create","fontFamily","join","&:focus","borderColor","ListOfAllCourses","referrerCourseId","courseList","components_CourseListItemNavEdit","card","minWidth","DeleteCoursesList","referrerLectureId","delCourses","checked","getDeletions","shouldDelete","forEach","fullWidth","FormGroup_default","c","FormControlLabel_default","control","Checkbox_default","checkBox","AllCoursesFrame","toNewCourse","deleteMode","deletions","delTitles","delIds","handleNewCourseClick","handleDelete","courseArr","i","handleFinalDeletion","deleteCourses","list","components_ListOfAllCourses","deleteAction","components_DeleteCoursesList","Card_default","CardContent_default","bind","Delete_default","Icon_default","icon","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","ListOfArchivedCourses","ArchivedCoursesFrame","showArchive","prevState","objectSpread","components_ListOfArchivedCourses","titleString","delButton","containerDiv","handleToggleArchive","ProfessorHome","components_AllCoursesFrame","components_ArchivedCoursesFrame","CourseObj","ProfessorNewCourse","assertThisInitialized","preventDefault","multiline","subcontainer","EditLectureDialog","modifyDate","setUTCDate","getDate","setUTCHours","setUTCMinutes","handleDateChange","selectedDate","handleOpenDateChange","handleValidation","handleCloseDateChange","handleCheck","_event$target2","apiService","editLecture","titleValid","formValid","dateValid","getTime","validateForm","scroll","gridItem","requiredtitle","material_ui_pickers_esm","utils","DateFnsUtils","dateField","gridItemButton","LectListItemNavEdit","_e$target","changeLectureTitle","handleToLecture","exportGradesLecture","components_EditLectureDialog","ListOfAllLectures","components_LectListItemNavEdit","CourseInfo","parentCourse","changeCourseData","getCourseWithId","Paper_default","editRoot","elevation","xs","textFieldShort","textFieldLong","root","termYear","gutters","paddingBottom","fontStyle","DeleteLecturesList","delLectures","lect","AllLecturesFrame","toNewLecture","referrerLectureIndex","numLects","handleNewLectureClick","lectArr","deleteLectures","components_ListOfAllLectures","course_info","components_CourseInfo","components_DeleteLecturesList","ProfessorViewLectures","components_AllLecturesFrame","params","AddQuestionModal","toNewMCQuestion","toNewFreeTextQuestion","toNewSliderQuestion","lectureId","handleMC","handleFreeText","handleSlider","aria-label","vert","index_es","AddQuestionModalWrapped","justifyContent","socket","socketIOClient","OpenClosedButton","isOpen","questionId","parentLecture","recentlyOpenedId","handleToUpdate","recentlyClosedId","handleListClose","emit","handleClick","handleBtnClick","startLectureBtn","prettyMs","require","BaseStatsComponent","time","isOn","questionTitle","hidden","startTimer","stopTimer","resetTimer","timer","setInterval","clearInterval","Timer_default","secDecimalDigits","children","responsesNumber","marginBottom","MCQuestionStats","update","override","global","legend","tooltips","enabled","selectedQuestionId","getQuestionWithId","labels","currLabel","loadAnswers","msg","values","answers","datasets","count","on","j","removeAllListeners","options","scales","yAxes","ticks","beginAtZero","userCallback","Math","floor","components_BaseStatsComponent","es","responses","next_question","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","scope","SliderStats","updateChartLabels","updateChartData","ViewStatsModal","stats","components_MCQuestionStats","FreeTextStats","components_SliderStats","InsertChartOutlined_default","ViewStatsModalWrapped","closed_at","modified_at","MultipleChoiceQuestionObj","_QuestionObj","inherits","SliderQuestionObj","_QuestionObj2","FreeTextQuestionObj","_QuestionObj3","EditFRQDialog","getEdits","removeImage","encodeImageFileAsURL","files","reader","FileReader","onloadend","result","readAsDataURL","required","helperText","buttonItem","paddingRight","answersValid","new_options","EditMCQDialog_createForOfIteratorHelper","option","_Object$values","val","EditMCQDialog","answer_choices","should_delete","titleError","hasAnswers","optionsValid","delete_mode","deleteDisabled","deleteConfirmDisabled","handleOption","validateFields","handleSetNumberOfOptions","option_string","toString","handleDeleteQueue","numRemainingOptions","_i3","_Object$keys","substring","correct","Number","_i4","_Object$keys2","k","_i5","_Object$keys3","errors","has_answers","InputLabel_default","htmlFor","Select_default","select","inputProps","setDeleteMode","answerBoundOptions","answerBoundOptionsRange","EditSLQDialog","lower","upper","answer_bounds","range","rangeVal","equality_operators","slider_value","has_correct_answer","custom_labels","fieldsValid","lower_bound","upper_bound","setCorrectAnswer","validateBoundsAndOperators","setCustomLabels","validateAnswers","setCorrectBounds","prop","answerBounds","isInteger","round","handleEqualityOperator","handleTitleChange","validateTitle","handleLabelsChange","handleLabelsValidation","handleSliderChange","handleSetRange","equalityOperators","lower_operator","getOperatorCondition","_this$props$questionO","correct_arr","bound","side","operator","allValid","isInRange","valid","condition","align-items","entry","Switch_default","sm","RadioGroup_default","Radio_default","InputProps","startAdornment","InputAdornment_default","endAdornment","percentText","wordBreak","titleWrap","maxWidth","titleContainer","slidercontainer","gridContainer","andor","QuestionListItem","mode","prevProps","number","components_OpenClosedButton","components_EditFRQDialog","components_EditMCQDialog","components_EditSLQDialog","components_ViewStatsModal","DeleteQuestionsList","delQuestions","closed_questions","checkBoxContainer","AllQuestionsFrame","toNewQuestion","lectureTitle","handleNewQuestionClick","handleDeleteQuestions","disableTopButton","handleEditQuestions","handleRestoreMode","restoreTopButton","editQuestion","mcqEditDetect","qArr","handleDeletion","nextLecture","components_AddQuestionModal","components_DeleteQuestionsList","components_QuestionListItem","ProfessorViewQuestions","mcqStatsUpdated","updateMCQStats","editDeleteMode","_loop","handleListClickClose","deleteQuestions","btnStatus","convertQuestionIndexToId","currentQuestionIndex","openQuestionId","currentQuestionId","handleListClick","convertQuestionIdToIndex","closeAllQuestions","text","textQ","grid","md","components_AllQuestionsFrame","getSortedQuestionsCopy","sortedQuestionsCopy","showCodeBtn","AddMCQuestion_createForOfIteratorHelper","ProfessorAddMCQuestion","toQuestions","question_image_string","uploading","num_options","buttonContainer","ProfessorAddFreeTextQuestion","correct_answer_valid","ProfessorAddSliderQuestion","Slider_default","min","max","step","ProfessorAddLecture","toLecture","lectString","NoMatch","ProfessorRoutes","index_module","CssBaseline_default","Route","path","Hidden_default","xsDown","implementation","content","Switch","exact","_content","StudentStore","socketIOStatus","lastQuestion","prevQuestions","lastAnswer","original_question","updatedQuestion","oldQuestion","indexOf","addOneQuestion","APIStudentService","studentStore","updateAllCourses","getStudentQuestionsByCourseAPI","updateAllQuestions","getStudentPrevQuestionsByCourseAPI","updateAllPrevQuestions","deleteDropCourseAPI","dropCourse","ClassCard","link","colorStyle","apiStudentService","colors","orangeCard","greenCard","yellowCard","navyCard","colorIndex","Link","typography","disableFocusListener","size","textDecoration","LogoutButton","getLogoutStudent","Header","Buttons_LogoutButton","AddCourseDialog","errorMsg","_this$setState","toUpperCase","enroll","loadAllCourses","enrollCourse","Fab_default","SocketIOStudentService","setSocketIOStatus","setTimeout","checkConnection","resetQuestions","updateLastQuestion","removeQuestionById","clearTimeout","connected","StudentHome","course_ids","socketIOStudentService","currentCourses","archivedCourses","showString","LoggedinHeader","typeography","Student_AddCourseDialog","StudentClassCards","Transition","Slide_default","assign","FRQ","sent","dialogue","postAnswer","handleCloseSubmit","updateLastAnswer","TransitionComponent","keepMounted","MCQ","answerchoices","qstring","answerOption","SLQ","percentContainer","whiteTypography","PrevMCQ","isLast","getPrevQuestionWithId","background_style","neutralAnswer","correctAnswer","parseInt","wrongAnswer","PrevFRQ","backgroundStyle","PrevSLQ","expression","operatorToComparison","exp1","exp2","string","operatorToWord","checkAnswer","getAnswerText","QuestionPage","show_previous_questions","show_last_question","dots","loadAllPrevQuestions","reset","subscribe","detectOpenQuestion","detectCloseQuestion","getAllQuestions","listen","startCheckingConnection","stopCheckingConnection","getNumberOfQuestions","Questions_FRQ","Questions_SLQ","Questions_MCQ","Questions_PrevMCQ","Questions_PrevFRQ","Questions_PrevSLQ","CheckQuestions","loadAllQuestions","text-decoration","StudentRoutes","flexGrow","LoginProf","login","createAccount","apiLoginService","handleLoginProfessor","handleCreateNewProfessor","loginProfessor","valid_login","clickGrid","loginCard","logoprof","CardActionArea_default","profTypography","_loginCard","textAlign","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","bottom","down","CreateProf","checkPassword","createProf","user_created","LoginStudent","handleLoginStudent","handleCreateNewStudent","loginStudent","logostudent","studentTypography","CreateStudent","createStudent","APILoginService","json","LoginRoutes","Home","toStudent","toProf","handleLoginProf","studentcard","profcard","_studentcard","_profcard","createMuiTheme","accent","useNextVariants","App","core_styles","BrowserRouter","configure","enforceActions","ReactDOM","render","app","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db710142.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/holder_hall.b3b26c46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nassau_hall.8125ca7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/boathouse.d8b36ae3.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withRouter } from \"react-router\";\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer, inject } from 'mobx-react';\nimport logo from '../../assets/clikrlogo2.png';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    listtext: {\n        color: theme.palette.primary.main\n    },\n    listsubtext: {\n        color: theme.palette.primary.dark\n    },\n    titletext: {\n        color: theme.palette.primary.main,\n        paddingTop: theme.spacing.unit*2\n    },\n    nestedListtext: {\n        color: theme.palette.primary.main,\n        paddingLeft: theme.spacing.unit*2,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hover: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.secondary.dark\n          }\n    },\n    toolbar: theme.mixins.toolbar,\n});\n\n@inject('profStore')\n@observer\nclass SideMenuBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n    }\n\n    state = {\n        open: null,\n        selectedCourse: 0,\n        selectedLecture: 0,\n    }\n    componentDidMount() {\n        if (this.props.location.pathname !== undefined) {\n            if (this.props.location.pathname.length !== \"\") {\n                const url_parts_arr = this.props.location.pathname.split(\"/\");\n                if (url_parts_arr[3] === \"questions\") {\n                    this.setState({ selectedLecture: url_parts_arr[2], open: this.profStore.getLectureWithId(url_parts_arr[2]).course_id, selectedCourse: this.profStore.getLectureWithId(url_parts_arr[2]).course_id})\n                }\n                if (url_parts_arr[3] === \"lectures\") {\n                    this.setState({ selectedLecture:0, selectedCourse: url_parts_arr[2]})\n                }\n            }\n        }\n    }\n    componentDidUpdate() {\n        if (this.props.location.pathname !== undefined) {\n            if (this.props.location.pathname.length !== \"\") {\n                const url_parts_arr = this.props.location.pathname.split(\"/\");\n                if (url_parts_arr[3] === \"questions\" && this.state.selectedLecture !== url_parts_arr[2]) {\n                    this.setState({ selectedLecture: url_parts_arr[2], open: this.profStore.getLectureWithId(url_parts_arr[2]).course_id, selectedCourse: this.profStore.getLectureWithId(url_parts_arr[2]).course_id })\n                }\n                if (url_parts_arr[3] === \"lectures\" && this.state.selectedCourse !== url_parts_arr[2]) {\n                    this.setState({ selectedLecture:0, selectedCourse: url_parts_arr[2]})\n                }\n                if (url_parts_arr.length === 2) {\n                    if (this.state.selectedLecture !== 0 ||this.state.selectedCourse !== 0) {\n                        this.setState({ selectedLecture: 0, selectedCourse: 0 })\n                    }\n                }\n            }\n        }\n    }\n\n    handleCourseClick(id) {\n        this.props.history.push('/professor/' + id + '/lectures');\n    }\n\n    handleLectureClick(id) {\n        this.props.history.push('/professor/' + id + '/questions');\n    }\n\n    handleExpand(id) {\n        var open = this.state.open;\n        if (open === id) {\n            open = null;\n        } else {\n            open = id;\n        }\n\n        this.setState({\n            open: open,\n        })\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current\n        })\n\n        return (\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <Drawer\n                    className={this.styles.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: this.styles.drawerPaper,\n                    }}\n                    anchor=\"left\"\n                >\n                \n                <Grid item><Grid container direction=\"row\" justify=\"center\" ><img src={logo} alt=\"logo\" height={80}/></Grid></Grid>\n                <Grid item><Divider /></Grid>\n                <Grid item align=\"center\"><Typography variant=\"h5\" className={this.styles.titletext}>Courses</Typography></Grid>\n                <Grid item>\n                    <List>\n                        {courses.map((courseObj, index) => {\n                            var lectures = this.profStore.getCourseLectures(courseObj.id);\n                            return (\n                                <div key={\"div\" + index}>\n                                    <ListItem className={this.styles.hover} button key={index} onClick={() => this.handleCourseClick(courseObj.id)} selected={this.state.selectedCourse === courseObj.id}>\n                                        <ListItemText disableTypography \n                                            primary={<Typography type=\"body2\" className={this.styles.listtext}>{courseObj.title}</Typography>} \n                                            secondary={<Typography type=\"body2\" className={this.styles.listsubtext}>{courseObj.term} {courseObj.year}</Typography>}\n                                        />\n\n                                        <ListItemSecondaryAction>\n                                            <IconButton color=\"primary\" disabled={lectures.length === 0} onClick={() => this.handleExpand(courseObj.id)}>\n                                                {lectures.length > 0 && this.state.open === courseObj.id ? <ExpandLess /> : <ExpandMore />}\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Collapse in={this.state.open === courseObj.id} timeout=\"auto\" unmountOnExit>\n                                        <List component=\"div\" disablePadding>\n                                            {lectures.map((lectureObj, innerIndex) => {\n                                                return (\n                                                    <ListItem button key={courseObj.id + \"_lecture_\" + innerIndex} onClick={() => this.handleLectureClick(lectureObj.id)} selected={this.state.selectedLecture === lectureObj.id}>\n                                                        <ListItemText disableTypography primary={<Typography type=\"body2\" className={this.styles.nestedListtext}> {lectureObj.title} </Typography>} />\n                                                    </ListItem>\n                                                )\n                                            })}\n                                        </List>\n                                    </Collapse>\n                                </div>\n                            )\n                        })}\n                    </List>\n                </Grid>\n                </Drawer>\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(SideMenuBar));","export const socketioURL = \"http://localhost:5000/\";\nexport const baseURL = socketioURL + \"api/v1/\"; ","import axios from 'axios';\nimport { baseURL } from '../constants/api'\n\naxios.defaults.withCredentials = true;\n\nexport function getProfDataAPI() {\n    return axios.get(baseURL + 'professor/data');\n}\n\nexport function loginProfessorAPI(username, password) {\n    return axios.post(baseURL + 'admin/professorlogin', {\n        netId: username,\n        password: password\n    });\n}\n\nexport function createProfessorAPI(username, password, firstName, lastName) {\n    return axios.post(baseURL + 'admin/professor', {\n        netId: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName\n    });\n}\n\nexport function archiveCourseAPI(course_id) {\n    return axios.post(baseURL + 'professor/courses/' + course_id + '/archive');\n}\n\nexport function duplicateCourseAPI(course_id, year, term) {\n    return axios.post(baseURL + 'professor/courses/' + course_id + '/duplicate', {\n        year: year,\n        term: term\n    });\n}\n\nexport function loginStudentAPI(username, password) {\n    return axios.post(baseURL + 'admin/studentlogin', {\n        netId: username,\n        password: password\n    });\n}\n\nexport function createStudentAPI(username, password, firstName, lastName) {\n    return axios.post(baseURL + 'admin/student', {\n        netId: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName\n    });\n}\n\nexport function getProfAnswers(question_id) {\n    return axios.get(baseURL + 'professor/questions/' + question_id + '/statistics');\n}\n\nexport function getProfNameAPI() {\n    return axios.get(baseURL + 'professor/name');\n}\n\nexport function getStudentNameAPI() {\n    return axios.get(baseURL + 'student/name');\n}\n\nexport function getStudentCoursesAPI() {\n    return axios.get(baseURL + 'student/courses');\n}\n\nexport function hasStudentQuestions(course_id) {\n    return Promise.all(axios.get(baseURL + 'student/courses/' + course_id + '/questions'));\n}\n\nexport function getProfCoursesAPI() {\n    return axios.get(baseURL + 'professor/courses');\n}\n\nexport function getStudentQuestionsByCourseAPI(course_id) {\n    return axios.get(baseURL + 'student/courses/' + course_id + '/questions');\n}\n\nexport function getStudentPrevQuestionsByCourseAPI(course_id) {\n    return axios.get(baseURL + 'student/courses/' + course_id + '/prevquestions');\n}\n\nexport function postOpenQuestionAPI(question_id) {\n    return axios.post(baseURL + 'professor/questions/' + question_id, {\n        action: \"open\"\n    });\n}\n\nexport function postCloseQuestionAPI(question_id) {\n    return axios.post(baseURL + 'professor/questions/' + question_id, {\n        action: \"close\"\n    });\n}\n\nexport function postCloseAllQuestionsAPI(lecture_id) {\n    return axios.post(baseURL + 'professor/lectures/' + lecture_id, {\n        action: \"close\"\n    });\n}\n\n// course: CourseObj\nexport function postNewCourseAPI(course) {\n    return axios.post(baseURL + 'professor/courses', {\n        title: course.title,\n        dept: course.dept,\n        coursenum: course.num,\n        description: course.description,\n        year: course.year,\n        term: course.term\n    });\n}\n\n// lecture: LectureObj\nexport function postNewLectureAPI(lecture) {\n    return axios.post(baseURL + 'professor/courses/' + lecture.course_id + '/lectures', {\n        title: lecture.title,\n        date: lecture.date,\n        description: lecture.description,\n        open_date: lecture.openDate,\n        close_date: lecture.closeDate,\n        scheduled: lecture.scheduled\n    });\n}\n\nexport function postEnrollStudentAPI(code) {\n    return axios.post(baseURL + 'student/courses', {\n        enroll_code: code\n    });\n}\n\nexport function postAnswerQuestionAPI(answer, question_id) {\n    return axios.post(baseURL + 'student/questions/' + question_id, {\n        answer: answer\n    });\n}\nexport function getLogoutStudentAPI() {\n    return axios.get(baseURL + 'student/logout');\n}\nexport function getLogoutProfAPI() {\n    return axios.get(baseURL + 'professor/logout');\n}\n\n// course: CourseObj\nexport function patchUpdateCourseAPI(course_id, course_title) {\n    return axios.patch(baseURL + 'professor/courses/' + course_id, {\n        title: course_title\n    });\n}\n\nexport function patchUpdateCourseDataAPI(course_id, course) {\n    return axios.patch(baseURL + 'professor/courses/' + course_id, {\n        title: course.title,\n        dept: course.dept,\n        coursenum: course.coursenum,\n        year: course.year,\n        term: course.term,\n        description: course.description\n    });\n}\n\nexport function exportGradesLectureAPI(lecture_id) {\n    return axios.get(baseURL + 'professor/lectures/' + lecture_id + '/exportgrades')\n}\n\nexport function exportGradesCourseAPI(course_id) {\n    return axios.get(baseURL + 'professor/courses/' + course_id + '/exportgrades')\n}\n\nexport function patchUpdateLectureAPI(lecture) {\n    return axios.patch(baseURL + 'professor/lectures/' + lecture.id, {\n        title: lecture.title,\n        date: lecture.date,\n        description: lecture.description,\n        open_date: lecture.openDate,\n        close_date: lecture.closeDate,\n        scheduled: lecture.scheduled\n    });\n}\n\n// delete the course \nexport function deleteCourseAPI(course_id) {\n    return axios.delete(baseURL + 'professor/courses/' + course_id);\n}\n\n// delete a question by id\nexport function deleteQuestionsAPI(question_id) {\n    return axios.delete(baseURL + 'professor/questions/' + question_id);\n}\n\n// get questions for course by id\nexport function getQuestionsForLectureAPI(lecture_id) {\n    return axios.get(baseURL + 'professor/lectures/' + lecture_id + '/questions');\n}\n\n// delete a lecture by id\nexport function deleteLecturesAPI(lecture_id) {\n    return axios.delete(baseURL + 'professor/lectures/' + lecture_id);\n}\n// drop = delete for studnet\nexport function deleteDropCourseAPI(course_id) {\n    return axios.delete(baseURL + 'student/courses/' + course_id);\n}\n\n// update a question:\nexport function patchUpdateQuestionAPI(question) {\n    return axios.patch(baseURL + 'professor/questions/' + question.id, {\n        id: question.id,\n        lecture_id: question.lecture_id,\n        question_type: question.question_type,\n        question_title: question.question_title,\n        question_image: question.question_image,\n        correct_answer: question.correct_answer,\n        option1: question.option1,\n        option2: question.option2,\n        option3: question.option3,\n        option4: question.option4,\n        option5: question.option5,\n        number_of_options: question.number_of_options,\n        word_limit: question.word_limit,\n        lower_label: question.lower_label,\n        upper_label: question.upper_label,\n    });\n}\n\nexport function postNewQuestionAPI(question) {\n    return axios.post(baseURL + 'professor/lectures/' + question.lecture_id + '/questions', {\n        lecture_id: question.lecture_id,\n        question_type: question.question_type,\n        question_title: question.question_title,\n        question_image: question.question_image,\n        correct_answer: question.correct_answer,\n        creator_id: question.creator_id,\n        option1: question.option1,\n        option2: question.option2,\n        option3: question.option3,\n        option4: question.option4,\n        option5: question.option5,\n        number_of_options: question.number_of_options,\n        word_limit: question.word_limit,\n        lower_label: question.lower_label,\n        upper_label: question.upper_label,\n    });\n}\n","import { getProfDataAPI, patchUpdateLectureAPI, duplicateCourseAPI, archiveCourseAPI, exportGradesCourseAPI, exportGradesLectureAPI, patchUpdateCourseDataAPI, getProfNameAPI, getProfAnswers, postNewCourseAPI, postNewQuestionAPI, postNewLectureAPI, postOpenQuestionAPI, postCloseQuestionAPI, getLogoutProfAPI, patchUpdateCourseAPI, deleteCourseAPI, getProfCoursesAPI, deleteLecturesAPI, getQuestionsForLectureAPI, postCloseAllQuestionsAPI, deleteQuestionsAPI, patchUpdateQuestionAPI } from '../utils/api-facade';\n\n\nexport default class APIProfService {\n    constructor(professorStore) {\n        this.professorStore = professorStore;\n    }\n    \n    async getName() {\n        return getProfNameAPI()\n            .then(res => {\n                return res.data.name\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    archiveCourse(course_id) {\n        return archiveCourseAPI(course_id)\n            .then(res => {\n                this.professorStore.updateCourseData(res.data.id, res.data.course)\n                return res.data.message\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    duplicateCourse(course_id, year, term) {\n        return duplicateCourseAPI(course_id, year, term)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    exportGradesLecture(lecture_id) {\n        return exportGradesLectureAPI(lecture_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    exportGradesCourse(course_id) {\n        return exportGradesCourseAPI(course_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    loadData() {\n        if (!this.professorStore.dataLoaded) {\n            return getProfDataAPI()\n                .then(res => {\n                    this.professorStore.updateData(res.data)\n                })\n                .catch(error => {\n                    console.log(error);\n                    this._checkAuth(error);\n                })\n        }\n\n        return new Promise(function () {\n            return true\n        })\n    }\n\n    loadAllCourses() {\n        return getProfCoursesAPI()\n            .then(res => {\n                this.professorStore.updateAllCourseData(res.data)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    loadAnswers(question_id) {\n        return getProfAnswers(question_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n                return [];\n            })\n    }\n\n    loadQuestions(lecture_id) {\n        return getQuestionsForLectureAPI(lecture_id)\n        .then(res => {\n            return res.data\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n            return [];\n        })\n    }\n\n    openQuestion(question_id, lecture_id) {\n        postOpenQuestionAPI(question_id)\n            .then(res => {\n                this.professorStore.openQuestion(question_id, lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    closeQuestion(question_id, lecture_id) {\n        postCloseQuestionAPI(question_id)\n            .then(res => {\n                this.professorStore.closeQuestion(question_id, lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    closeAllQuestions(lecture_id) {\n        postCloseAllQuestionsAPI(lecture_id)\n            .then(res => {\n                this.professorStore.closeAllQuestionsForLecture(lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    addLecture(lecture) {\n        postNewLectureAPI(lecture)\n            .then(res => {\n                const newLec = res.data.lectures.find(lecture => lecture.id === res.data.id)\n                newLec.questions = []\n                this.professorStore.addLecture(newLec)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    addCourse(course) {\n        postNewCourseAPI(course)\n            .then(res => {\n                course.id = res.data.id\n                const newCourse = res.data.courses.find(course => course.id === res.data.id)\n                newCourse.lectures = []\n                this.professorStore.addCourse(res.data.courses, newCourse)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    // remove courses\n    deleteCourses(courses) {\n        courses.map(id => {\n            return (\n                deleteCourseAPI(id)\n                    .then(() => {\n                        this.professorStore.removeCourse(id)\n                        this.professorStore.dataLoaded = false\n                        this.loadData()\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    changeCourseTitle(courseId, courseTitle) {\n        patchUpdateCourseAPI(courseId, courseTitle)\n            .then(res => {\n                this.professorStore.updateCourse(courseId, courseTitle)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    changeCourseData(courseId, course) {\n        patchUpdateCourseDataAPI(courseId, course)\n            .then(res => {\n                this.professorStore.updateCourseData(courseId, course)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    editLecture(lectureObj) {\n        return patchUpdateLectureAPI(lectureObj)\n        .then(res => {\n            this.professorStore.updateLecture(res.data.lecture);\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n        })\n    }\n\n    editQuestion(questionObj) {\n        patchUpdateQuestionAPI(questionObj)\n        .then(res => {\n            this.professorStore.updateQuestion(questionObj);\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n        })\n    }\n\n    // remove lectures- input is array of lecture ids\n    deleteLectures(lectures, courseId) {\n        lectures.map(id => {\n            return (\n                deleteLecturesAPI(id)\n                    .then(() => {\n                        this.professorStore.removeLecture(id, courseId)\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    // remove lectures- input is array of lecture ids\n    deleteQuestions(questions, parentLectureId) {\n        questions.map(id => {\n            return (\n                deleteQuestionsAPI(id)\n                    .then(() => {\n                        this.professorStore.removeQuestion(id, parentLectureId)\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    addQuestion(question) {\n        // post new question\n        postNewQuestionAPI(question)\n            .then(res => {\n                const newQ = res.data.questions.find(q => q.id === res.data.id)\n                newQ.id = res.data.id\n                this.professorStore.addQuestion(newQ)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n    async getLogoutProf() {\n        getLogoutProfAPI()\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    _checkAuth(error) {\n        if (error.response !== undefined) {\n            if (error.response.status === 401)\n                window.location.replace('/login/prof')\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ToolbarGroup from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\n\nimport Menu from '@material-ui/core/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport APIProfService from '../../services/APIProfService'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n\n    homeButton: {\n        marginLeft: \"0%\"\n    },\n\n});\n\nclass TopMenuBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store  = props.store\n        this.apiProfService = new APIProfService(this.store)\n    }\n\n    state = {\n      anchorEl: null,\n      goHome: false,\n      logout: false,\n      userName: \"\"\n    };\n\n    componentDidMount() {\n        this.apiProfService.getName()\n            .then(name => {\n                this.setState({ userName: name });\n            })\n    }\n\n    handleMenu = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n      this.setState({\n          anchorEl: null,\n          logout: false\n        });\n    };\n\n    handleLogout = () => {\n        this.setState({\n            anchorEl: null,\n            logout: true\n          });\n    }\n\n    handleHome = () => {\n        this.props.history.push('/professor');\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        if (this.state.logout) {\n            this.apiProfService.getLogoutProf()\n            return <Redirect to='/' push/>\n        }\n\n\n        return (\n            <AppBar position=\"sticky\" color=\"inherit\" className={this.styles.appBar}>\n                <Toolbar>\n                    <IconButton className={classes.homeButton} onClick={this.handleHome} color=\"primary\">\n                        <SvgIcon>\n                            <path fill=\"secondary\"\n                                d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\n                        </SvgIcon>\n                    </IconButton>\n                    \n                    <ToolbarGroup style={{\n                        float: 'none',\n                        marginRight: 'auto'\n                    }}>\n                    </ToolbarGroup>\n\n                    <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> {this.state.userName} </Typography>\n\n                    <IconButton\n                        aria-haspopup=\"true\"\n                        onClick={this.handleMenu}\n                        color=\"primary\"\n                        float=\"right\"\n                    >\n                        <SvgIcon style={{ \"width\": \"24px\", \"height\": \"24px\" }} viewBox=\"0 0 24 24\">\n                            <path color=\"secondary\"\n                                d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" />\n\n                        </SvgIcon>\n                    </IconButton>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={this.handleClose}\n                    >\n                        <MenuItem onClick={this.handleLogout}>\n\n                            LOGOUT\n\n                        </MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n\n\n\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(TopMenuBar));\n","\nexport default class LectureObj {\n    constructor(title, date, id, course_id, description, scheduled, openDate, closeDate) {\n        this.course_id = course_id;\n        this.date = date;\n        this.id = id;\n        this.title = title;\n        // this.description = description;\n        this.scheduled = scheduled;\n        this.openDate = openDate;\n        this.closeDate = closeDate;\n    }\n}","import { observable, action } from \"mobx\";\nimport LectureObj from '../models/LectureObj';\nimport QuestionObj from '../models/LectureObj';\n\nexport default class ProfessorStore {\n    @observable\n    courses = [];\n    dataLoaded = false;\n\n    set courses(value) {\n        value.sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n        this._courses = value;\n    }\n\n    getCourseWithId(course_id) {\n        return this.courses.find(x => x.id === course_id)\n    }\n\n    getLectureById(lecture_id) {\n        \n        if (lecture_id === 0)\n        return { questions: [] };\n        const course = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id))\n        \n        if (course === undefined)\n            return new LectureObj();\n\n        const lectures = course.lectures\n        return lectures.find(lecture => lecture.id === lecture_id)\n    }\n\n    getLectureWithId(lecture_id) {\n        \n        if (lecture_id === 0)\n            return { questions: [] };\n        const course = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id))\n        if (course === undefined)\n            return { questions: [] }\n\n        const lectures = course.lectures\n        return lectures.find(lecture => lecture.id === lecture_id)\n    }\n\n    @action\n    getCourseLectures(course_id) {\n        return this.courses.find(x => x.id === course_id).lectures;\n    }\n\n    // getQuestionWithId(lecture, question_id) {\n    //     console.log(\"get question with id\")\n    //     console.log(lecture)\n    //     console.log(question_id)\n    //     if (lecture.questions === [])\n    //         return { questions: [] };\n\n    //     if (lecture.questions.find(x => x.id === question_id) === undefined)\n    //         return { questions: [] };\n\n    //     return this.courses.find(course => course.lectures.find(lec => lec.id === lecture.id)).lectures\n    //         .find(lec => lec.id === lecture.id).questions.find(x => x.id === question_id)\n    // }\n    getQuestionWithId(lecture, question_id) {\n        if (lecture.questions === [] || lecture.questions === undefined)\n            return new QuestionObj();\n\n        if (lecture.questions.find(x => x.id === question_id) === undefined)\n            return new QuestionObj();\n\n        return this.courses.find(course => course.lectures.find(lec => lec.id === lecture.id)).lectures\n            .find(lec => lec.id === lecture.id).questions.find(x => x.id === question_id)\n    }\n\n    @action\n    getLectureQuestions(lecture_id) {\n        return this.courses.find(course => course.lectures.find(lec => lec.id === lecture_id)).lectures;\n    }\n\n    @action\n    updateData(data) {\n        this.dataLoaded = true;\n        this.courses = data;\n    }\n\n    @action\n    addCourse(courses, course) {\n        course.enroll_code = courses.find(x => x.id === course.id).enroll_code\n        this.courses.push(course);\n        this.courses.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n\n    @action\n    updateCourse(courseId, title) {\n        const oldCourse = this.courses.find(x => x.id === courseId);\n        oldCourse.title = title\n    }\n\n    @action\n    updateCourseData(courseId, course) {\n        const oldCourse = this.courses.find(x => x.id === courseId);\n        oldCourse.title = course.title\n        oldCourse.dept = course.dept\n        oldCourse.coursenum = course.coursenum\n        oldCourse.year = course.year\n        oldCourse.term = course.term\n        oldCourse.description = course.description\n        oldCourse.is_current = course.is_current\n    }\n\n    @action\n    updateLecture(lecture) {\n        const oldLecture = this.getLectureById(lecture.id)\n\n        oldLecture.title = lecture.title\n        oldLecture.closeDate = lecture.closeDate\n        oldLecture.openDate = lecture.openDate\n        oldLecture.scheduled = lecture.scheduled\n        oldLecture.date = lecture.date\n\n        console.log(oldLecture)\n    }\n\n    @action\n    deleteCourse(course_id) {\n        this.courses.remove(this.courses.find(x => x.id === course_id));\n    }\n\n    @action\n    addLecture(lecture) {\n        this.courses.find(x => x.id === lecture.course_id).lectures.push(lecture)\n        this.courses.find(x => x.id === lecture.course_id).lectures.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n    @action\n    removeCourse(course_id) {\n        this.courses.remove(this.courses.find(x => x.id === course_id));\n    }\n\n    @action\n    removeLecture(lecture_id, course_id) {\n        const lectures = this.courses.find(x => x.id === course_id).lectures;\n        lectures.remove(lectures.find(x => x.id === lecture_id));\n    }\n\n    @action\n    removeQuestion(question_id, parent_lecture_id) {\n        const questions = this.courses.find(course => course.lectures.find(lec => lec.id === parent_lecture_id)).lectures\n            .find(lec => lec.id === parent_lecture_id).questions;\n        questions.remove(questions.find(x => x.id === question_id));\n    }\n\n    @action\n    addQuestion(question) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === question.lecture_id)).lectures\n            .find(lecture => lecture.id === question.lecture_id).questions.push(question);\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === question.lecture_id)).lectures\n            .find(lecture => lecture.id === question.lecture_id).questions.slice().sort(function (a, b) {\n                if (a.created_at < b.created_at) {\n                    return -1;\n                }\n                if (a.created_at > b.created_at) {\n                    return 1;\n                }\n                // a must be equal to b\n                return 0;\n            });\n    }\n    @action \n    updateQuestion(questionObj) {\n        const lecture = this.courses.find(course => course.lectures.find(lecture => lecture.id === questionObj.lecture_id)).lectures\n        .find(lecture => lecture.id === questionObj.lecture_id);\n        const question = lecture.questions.find(q => q.id === questionObj.id);\n       \n        const keys = Object.keys(questionObj);\n        for (const key of keys) question[key] = questionObj[key];\n    }\n\n    @action\n    openQuestion(question_id, lecture_id) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).is_open = true;\n            this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\t\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).opened_at = Date.now();\n    }\n\n    @action\n    closeQuestion(question_id, lecture_id) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).is_open = false;\n    }\n\n    @action\n    closeAllQuestionsForLecture(lecture_id) {\n        var questions = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions;\n        \n        for (var question of questions) {\n            question.is_open = false;\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    }\n});\n\n\n@observer\nclass AddStudentsModal extends React.Component {\n    state = {\n        open: false,\n        code: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.joinCode = props.joinCode\n        this.profStore = props.profStore\n    }\n    componentDidMount() {\n        this.setState({ code: this.joinCode })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.joinCode !== undefined) {\n            this.setState({ code: nextProps.joinCode })\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit = () => {\n        // Close modal \n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid item>\n                <Tooltip title=\"Add Students\" placement=\"top\">\n                    <IconButton color=\"primary\" onClick={this.handleOpen}>\n                        <PersonAddIcon />\n                    </IconButton>\n                </Tooltip>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <Typography variant=\"subtitle1\">\n                            Share this code with your students:\n                        </Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {this.state.code}\n                        </Typography>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Done</Button>\n                    </div>\n                </Modal>\n            </Grid>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst AddStudentsModalWrapped = withStyles(styles)(AddStudentsModal);\n\nexport default AddStudentsModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 20,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 2,\n        direction: 'column'\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'column'\n    },\n    textField: {\n        width: theme.spacing.unit * 15,\n    },\n    button: {\n        width: theme.spacing.unit * 15,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    }\n});\n\n\n@observer\nclass DuplicateCourseModal extends React.Component {\n    state = {\n        open: false,\n        newYear: \"\",\n        newTerm: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n        this.styles = props.classes\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.courseId = nextProps.courseId\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({ [name]: value });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit = () => {\n        this.apiProfService.duplicateCourse(this.courseId, this.state.newYear, this.state.newTerm)\n            .then(data => {\n                this.setState({ open: false });\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid item>\n                <Tooltip title=\"Duplicate Course\" placement=\"top\">\n                    <IconButton color=\"secondary\" onClick={this.handleOpen}>\n                        <FileCopyIcon />\n                    </IconButton>\n                </Tooltip>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper} >\n                        <Typography variant=\"subtitle1\">\n                            Duplicate Course\n                        </Typography>\n                        <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                           <TextField\n                                 label=\"Year\"\n                                 name=\"newYear\"\n                                 className={this.styles.textField}\n                                 value={this.state.newYear}\n                                 onChange={this.handleChange}\n                                 margin=\"normal\"\n                           />\n\n                           <TextField\n                                 label=\"Term\"\n                                 name=\"newTerm\"\n                                 className={this.styles.textField}\n                                 value={this.state.newTerm}\n                                 onChange={this.handleChange}\n                                 margin=\"normal\"\n                           />\n\n                           <Button className={this.styles.button}\n                                 type=\"submit\"\n                                 disabled={!(this.state.newTerm && this.state.newYear)}\n                                 variant=\"outlined\"\n                                 color=\"primary\"\n                                 > submit\n                           </Button>\n                        </form>\n                    </div>\n                </Modal>\n            </Grid>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst DuplicateCourseModalWrapped = withStyles(styles)(DuplicateCourseModal);\n\nexport default DuplicateCourseModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport InputBase from '@material-ui/core/InputBase';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FormControl from '@material-ui/core/FormControl';\nimport AddStudentsModal from '../AddStudentsModal';\nimport DuplicateCourseModal from '../DuplicateCourseModal';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport Grid from '@material-ui/core/Grid';\nimport { baseURL } from '../../constants/api';\n\nconst styles = theme => ({\n    iconDone: {\n        color: theme.palette.primary.light\n    },\n    iconEdit: {\n        color: theme.palette.secondary\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 14,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\n@observer\nclass CourseListItemNavEdit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n        this.courseTitle = props.courseTitle\n        this.courseYear = props.courseYear\n        this.courseTerm = props.courseTerm\n        this.courseCode = props.courseCode\n    }\n\n    state = {\n        editMode: false,\n        courseTitle: this.courseTitle,\n        newTitle: \"\",\n        nav: false,\n        courseId: this.courseId,\n        courseYear: this.courseYear,\n        courseTerm: this.courseTerm,\n        courseCode: this.courseCode,\n        toHome: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            courseTitle: this.courseTitle,\n            newTitle: this.courseTitle,\n            courseId: this.courseId,\n            courseYear: this.courseYear,\n            courseTerm: this.courseTerm,\n            courseCode: this.courseCode\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.state.editMode) {\n            if (nextProps.courseId !== this.courseId) {\n                this.setState({\n                    courseTitle: nextProps.courseTitle,\n                    newTitle: nextProps.courseTitle,\n                    courseId: nextProps.courseId,\n                    courseYear: nextProps.courseYear,\n                    courseTerm: nextProps.courseTerm,\n                    courseCode: nextProps.courseCode\n                })\n            }\n        } \n    }\n\n    handleEdit = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n    \n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n\n        // only close if the title is not empty space\n        if (this.state.newTitle.replace(/\\s/g, '').length > 0) {\n            this.apiProfService.changeCourseTitle(this.state.courseId, this.state.newTitle);\n            this.setState({\n                courseTitle: this.state.newTitle,\n                editMode: false,\n            })\n        }\n        else { // defaults to not changing title if invalid title is input\n            this.setState({\n                editMode: false\n            })\n        }\n    }\n\n    handleToCourse = () => {\n        this.setState({\n            nav: true\n        })\n    }\n\n    handleArchive = () => {\n        this.apiProfService.archiveCourse(this.state.courseId)\n            .then(message => {\n                this.setState({ toHome: true })\n            })\n    }\n\n    handleExportGrades = () => {\n        this.apiProfService.exportGradesCourse(this.courseId)\n            .then(data => {\n                const element = document.createElement(\"a\");\n                const file = new Blob([data.fileData], {type: 'text/csv;charset=utf-8;'});\n                element.href = URL.createObjectURL(file);\n                element.download = data.fileName;\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n            })\n    }\n\n    render () {\n        if (this.state.nav) {\n            return  <Redirect to={'/professor/' + this.state.courseId + '/lectures'} push />\n        }\n\n        if (this.state.toHome) {\n            return  <Redirect to={'/professor'} push />\n        }\n\n        if (this.state.editMode) {\n            return (\n                <ListItem divider>\n                    <FormControl>\n                        <InputBase\n                        id=\"bootstrap-input\"\n                        name=\"newTitle\"\n                        value={this.state.newTitle}\n                        onChange={e => this.handleEdit(e)}\n                        classes={{\n                            input: this.styles.bootstrapInput\n                        }}\n                        />\n                    </FormControl>\n                    <ListItemSecondaryAction>\n                        <Grid container direction=\"row\" justify=\"flex-end\" >\n                            <Grid item>\n                                <Tooltip title=\"Done Editing\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleEditClose}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" href={baseURL + \"professor/courses/\" + this.courseId + \"/exportgrades\"} target=\"_blank\">\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <AddStudentsModal profStore={this.profStore} joinCode={this.state.courseCode} />\n                            </Grid>  \n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )\n        }\n        else {\n            return (\n                 <ListItem button divider onClick={this.handleToCourse}>\n                    <Grid container direction=\"row\" justify=\"flex-start\">\n                        <Grid item>\n                            <ListItemText primary={this.state.courseTitle} secondary={this.state.courseTerm + ' ' + this.state.courseYear} />\n                        </Grid>\n                    </Grid>\n                    <ListItemSecondaryAction>\n                        <Grid container direction=\"row\" justify=\"flex-end\">\n                            <Grid item>\n                                <Tooltip title=\"Change Title\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleEditOpen}>\n                                        <EditIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <DuplicateCourseModal profStore={this.profStore} apiProfService = {this.apiProfService} courseId={this.state.courseId} />\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title={this.props.archive ? \"Unarchive Course\" : \"Archive Course\"} placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleArchive}>\n                                        {this.props.archive ? <UnarchiveIcon /> : <ArchiveIcon />}\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleExportGrades}>\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <AddStudentsModal profStore={this.profStore} joinCode={this.state.courseCode} />\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )\n        }\n    }\n}\n\nexport default withStyles(styles)(CourseListItemNavEdit);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport CourseListItemNavEdit from '../CourseListItemNavEdit';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass ListOfAllCourses extends React.Component {\n    state = {\n        referrerCourseId: null,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n   \n    handleCourseClick = id => () => {\n        this.setState(() => ({\n            referrerCourseId: id\n        }))\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current\n        })\n\n        // Handle routes\n        if (this.state.referrerCourseId !== null) {\n            return <Redirect to={'/professor/' + this.state.referrerCourseId + '/lectures'} push />\n        }\n\n        var courseList = courses.map((courseObj, index) => {\n            return (\n                <CourseListItemNavEdit \n                    key={index}\n                    archive={false}\n                    profStore={this.profStore} \n                    apiProfService={this.apiProfService} \n                    courseId={courseObj.id}\n                    courseTitle={courseObj.title}\n                    courseYear={courseObj.year}\n                    courseTerm={courseObj.term}\n                    courseCode={courseObj.enroll_code}\n                />\n            )\n        })\n\n        return (\n            <List component=\"nav\">\n                {courseList}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfAllCourses);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    }\n});\n\n@observer\nclass DeleteCoursesList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delCourses: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n    }\n\n    componentDidMount() {\n        let shouldDelete = []\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current !== this.props.archive\n        })\n        \n        courses.forEach(courseObj => {\n            shouldDelete.push({\n                id: courseObj.id,\n                checked: false,\n                title: courseObj.title,\n                term: courseObj.term,\n                year: courseObj.year\n            })\n        })\n\n        this.setState({\n            delCourses: shouldDelete\n        })\n    }\n\n    handleChange = id =>  event => {\n        // if id in courses, then we are unchecking; otherwise we need to uncheck\n        this.state.delCourses.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delCourses: this.state.delCourses\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delCourses);\n    }\n\n\n    render() {\n        return (\n            <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delCourses\"\n                    value={this.state.delCourses}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delCourses.map((c, index) => {\n                                return (\n                                    <ListItem divider key={index}>\n                                        <ListItemText primary={c.title} secondary={c.term + ' ' + c.year} />\n                                        <ListItemSecondaryAction>\n                                            <FormControlLabel key={index} control={\n                                                    <Checkbox className={this.styles.checkBox} key={c.id} checked={c.checked} onChange={this.handleChange(c.id)} value={c.id} />\n                                                }/>\n                                        </ListItemSecondaryAction> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteCoursesList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport ListOfAllCourses from '../ListOfAllCourses';\nimport DeleteCoursesList from '../DeleteCoursesList';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    }\n});\n\n@observer\nclass AllCoursesFrame extends React.Component {\n    state = {\n        toNewCourse: false,\n        deleteMode: false,\n        deletions: [],\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n\n    // gets courses to be deleted from child component\n    getDeletions = (delCourses) => {\n        this.setState({\n            deletions: delCourses\n        })\n    }\n    handleNewCourseClick = () => {\n        this.setState(() => ({\n            toNewCourse: true\n        }))\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const courseArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    courseArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (courseArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: courseArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n        \n    }\n    handleClose = () => {\n        this.setState({ \n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteCourses(this.state.delIds);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewCourse === true) {\n            return <Redirect to='/professor/new' push />\n        }\n        \n        let list = <ListOfAllCourses profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction=\"Delete\"\n        \n        if (this.state.deleteMode) {\n            list = <DeleteCoursesList profStore={this.profStore} getDeletions={this.getDeletions} archive={false} />\n            deleteAction=\"Done\"\n        }\n\n        return (\n            <div>\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\"> Courses </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                                {deleteAction === 'Delete' ? <DeleteIcon /> : <DoneIcon />}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button onClick={this.handleNewCourseClick} color=\"primary\">\n                                            <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                                            Add Course\n                                        </Button>\n                                    </Grid>    \n                                </Grid>  \n                            </Grid>\n                        </Grid> \n                        {list}\n                    </CardContent>\n                </Card>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following course(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) => \n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n                                        \n                        )}\n    \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            no\n                        </Button>\n                        <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                            yes\n                        </Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AllCoursesFrame);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport CourseListItemNavEdit from '../CourseListItemNavEdit';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass ListOfArchivedCourses extends React.Component {\n    state = {\n        referrerCourseId: null,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n   \n    handleCourseClick = id => () => {\n        this.setState(() => ({\n            referrerCourseId: id\n        }))\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return !courseObj.is_current\n        })\n\n        // Handle routes\n        if (this.state.referrerCourseId !== null) {\n            return <Redirect to={'/professor/' + this.state.referrerCourseId + '/lectures'} push />\n        }\n        return (\n            <List component=\"nav\">\n                {courses.map((courseObj, index) => {\n                    return (\n                        <CourseListItemNavEdit \n                            key={index} \n                            archive={true}\n                            profStore={this.profStore} \n                            apiProfService={this.apiProfService} \n                            courseId={courseObj.id}\n                            courseTitle={courseObj.title} \n                            courseYear={courseObj.year}\n                            courseTerm={courseObj.term}\n                            joinCode={courseObj.enroll_code} \n                        />\n                    )\n                })}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfArchivedCourses);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport ListOfArchivedCourses from '../ListOfArchivedCourses';\nimport DeleteCoursesList from '../DeleteCoursesList';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    },\n    containerDiv: {\n        paddingTop: theme.spacing.unit * 8\n    }\n});\n\n@observer\nclass ArchivedCoursesFrame extends React.Component {\n    state = {\n        toNewCourse: false,\n        deleteMode: false,\n        deletions: [],\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false,\n        showArchive: false,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n\n    handleToggleArchive() {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                showArchive: !prevState.showArchive\n            }\n        })\n    }\n\n    // gets courses to be deleted from child component\n    getDeletions = (delCourses) => {\n        this.setState({\n            deletions: delCourses\n        })\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const courseArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    courseArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (courseArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: courseArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.setState({ \n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteCourses(this.state.delIds);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewCourse === true) {\n            return <Redirect to='/professor/new' push />\n        }\n        let list = <ListOfArchivedCourses profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction=\"Delete\"\n        \n        if (this.state.deleteMode) {\n            list = <DeleteCoursesList profStore={this.profStore} getDeletions={this.getDeletions} archive={true} />\n            deleteAction=\"Done\"\n        }\n\n        var titleString = this.state.showArchive ? \"Archived Courses\" : \"Show Archived Courses\"\n        var delButton = \"\"\n        if (this.state.showArchive) {\n            delButton = deleteAction === 'Delete' ? <DeleteIcon /> : <DoneIcon />\n        } \n\n        return (\n            <div className={this.props.classes.containerDiv} >\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Grid container direction='row' >\n                                    <Grid item>\n                                        <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\"> {titleString} </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <IconButton color=\"primary\" onClick={this.handleToggleArchive.bind(this)}>\n                                            {this.state.showArchive ? <ExpandLess /> : <ExpandMore />}\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} >\n                                                {delButton}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                </Grid>  \n                            </Grid>\n                        </Grid>\n\n                        <Collapse in={this.state.showArchive} timeout=\"auto\" unmountOnExit>\n                            {list}\n                        </Collapse>\n\n                        <Dialog\n                            open={this.state.open}\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following course(s): \"}</DialogTitle>\n                            <DialogContent>\n                                {this.state.delTitles.map((title, index) => \n                                    <DialogContentText key={index} id=\"alert-dialog-description\">\n                                        {title}\n                                    </DialogContentText>\n                                                \n                                )}\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ArchivedCoursesFrame);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\nimport AllCoursesFrame from '../../../components/AllCoursesFrame';\nimport ArchivedCoursesFrame from '../../../components/ArchivedCoursesFrame';\n\nconst styles = theme => ({\n\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorHome extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    render() {\n        return (\n            <div>\n                <AllCoursesFrame profStore={this.profStore} apiProfService={this.apiProfService} />\n                <ArchivedCoursesFrame profStore={this.profStore} apiProfService={this.apiProfService} />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorHome);\n","export default class CourseObj {\n    constructor(course) {\n        if (course !== undefined) {\n            this.title = course.title;\n            this.id = course.id;\n            this.num = course.num;\n            this.dept = course.dept;\n            this.description = course.description;\n            this.term = course.term;\n            this.joinCode = course.joinCode;\n            this.year = course.year;\n            this.is_current = course.is_current;\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\nimport CourseObj from '../../../models/CourseObj';\n\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    subcontainer: {\n        display: 'flex',\n        direction: 'row',\n        alignItems: 'flex-start'\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorNewCourse extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n\n        this.state = {\n            toHome: false,\n            title: '',\n            dept: '',\n            num: '',\n            year: '',\n            term: '',\n            description: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit(event) {\n        // Send course to API\n        event.preventDefault()\n        this.apiProfService.addCourse(\n            new CourseObj(this.state)\n        )\n        // Close modal\n        this.setState({ toHome: true });\n    }\n\n\n    // TODO: Make the year and term and Dept a drop down\n    render() {\n        if (this.state.toHome === true) {\n            return <Redirect to='/professor' push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Course:\n                </Typography>\n                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                    <TextField\n                        label=\"Course Name\"\n                        name=\"title\"\n                        className={this.styles.textField}\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Department\"\n                        name=\"dept\"\n                        className={this.styles.textField}\n                        value={this.state.dept}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Course Number\"\n                        name=\"num\"\n                        className={this.styles.textField}\n                        value={this.state.num}\n                        onChange={this.handleChange}\n                        margin=\"none\"\n                    />\n\n                    <TextField\n                        label=\"Year\"\n                        name=\"year\"\n                        className={this.styles.textField}\n                        value={this.state.year}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Term\"\n                        name=\"term\"\n                        className={this.styles.textField}\n                        value={this.state.term}\n                        onChange={this.handleChange}\n                        margin=\"none\"\n                    />\n\n                    <TextField\n                        label=\"Description\"\n                        name=\"description\"\n                        className={this.styles.textField}\n                        value={this.state.description}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        multiline={true}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        disabled={!this.state.title}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        > submit\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorNewCourse);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { inject } from 'mobx-react';\nimport Collapse from '@material-ui/core/Collapse';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LectureObj from '../../models/LectureObj';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 80,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    gridItem: {\n        margin: theme.spacing.unit\n    },\n    dateField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 30,\n    },\n    gridItemButton: {\n        margin: theme.spacing.unit*2\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 60,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass EditLectureDialog extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiService\n\n        const date = new Date()\n\n        this.state = {\n            open: false,\n            title: \"\",\n            courseId: \"\",\n            id: \"\",\n            scheduled: false,\n            titleValid: true,\n            formValid: false,\n            selectedDate: date,\n            dateValid: true,\n            openDate: date,\n            closeDate: date\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.lectureObj !== undefined) {\n            this.setState({\n                title: nextProps.lectureObj.title,\n                scheduled: nextProps.lectureObj.scheduled,\n                selectedDate: new Date(nextProps.lectureObj.date),\n                courseId: nextProps.lectureObj.courseId,\n                id: nextProps.lectureObj.id\n            }, () => { this.handleValidation() })\n\n            if (nextProps.lectureObj.scheduled) {\n                this.setState({\n                    openDate: new Date(nextProps.lectureObj.open_date),\n                    closeDate: new Date(nextProps.lectureObj.close_date)\n                }, () => { this.handleValidation() })\n            }\n        }\n    }\n\n    handleValidation() {\n        let dateValid = this.state.dateValid;\n        let titleValid = this.state.title !== ''\n\n        if (this.state.scheduled) {\n            dateValid = this.state.closeDate.getTime() >= this.state.openDate.getTime()\n        } else {\n            dateValid = true\n        }\n\n        this.setState({ titleValid: titleValid, dateValid: dateValid }, this.validateForm);\n    }\n    \n    validateForm() {\n        this.setState({formValid: this.state.titleValid && this.state.dateValid });\n    }\n\n    modifyDate = date => {\n        date.setUTCDate(date.getDate());\n        date.setUTCHours(12);\n        date.setUTCMinutes(0);\n        date.setUTCMinutes(0);\n\n        return date;\n    }\n\n    handleDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            selectedDate: date\n        })\n    }\n\n    handleOpenDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({ \n            openDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleCloseDateChange = date => {\n        date = this.modifyDate(date);\n        \n        this.setState({\n            closeDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        }, () => { this.handleValidation() });\n    };\n\n    handleCheck = (event) => {\n        const {name, checked} = event.target\n        this.setState({\n            [name]: checked\n        }, () => {this.handleValidation() });\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    handleSubmit = () => {\n        // Send course to API\n        this.props.apiService.editLecture(\n            new LectureObj(this.state.title, this.state.selectedDate, this.state.id, this.state.courseId, null, \n                this.state.scheduled, this.state.openDate, this.state.closeDate)\n        )\n        .then(() => {\n            this.handleClose();\n        })\n    }\n    \n    render() {\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen}>\n                    <Typography variant=\"h7\" color=\"textPrimary\">\n                        Edit\n                    </Typography>\n                </Button>\n                <Dialog\n                    fullWidth\n                    scroll=\"paper\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Edit Lecture Information\"}</DialogTitle>\n                    <DialogContent>\n                    <Grid container direction=\"column\">\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                requiredtitle=\"true\"\n                                error={!this.state.titleValid}\n                                name=\"title\"\n                                label=\"Lecture Title\"\n                                className={this.styles.textField}\n                                value={this.state.title}\n                                onChange={this.handleChange}\n                                margin=\"normal\"\n                                multiline={true}\n                            />\n                        </Grid>\n\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid item className={this.styles.gridItem}>\n                                <DatePicker\n                                    margin=\"normal\"\n                                    label=\"Lecture Date\"\n                                    name=\"selectedDate\"\n                                    value={this.state.selectedDate}\n                                    onChange={this.handleDateChange}\n                                    className={this.styles.dateField}\n                                />\n                            </Grid>\n                        </MuiPickersUtilsProvider>\n\n                        <Grid item className={this.styles.gridItem}>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                    <Checkbox\n                                        checked={this.state.scheduled}\n                                        onChange={this.handleCheck}\n                                        name=\"scheduled\"\n                                    />\n                                </Grid>\n\n                                <Grid item>\n                                    <Typography variant=\"body2\" color=\"textPrimary\">\n                                        Schedule the Lecture to Open and Close at Specific Dates\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Collapse in={this.state.scheduled} timeout=\"auto\" unmountOnExit>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.gridItem}>\n                                        <DatePicker\n                                            margin=\"normal\"\n                                            label=\"Start Date\"\n                                            name=\"openDate\"\n                                            value={this.state.openDate}\n                                            onChange={this.handleOpenDateChange}\n                                            className={this.styles.dateField}\n                                            error={!this.state.dateValid}\n                                        />\n                                    </Grid>\n\n                                    <Grid item className={this.styles.gridItem}>\n                                        <DatePicker\n                                            margin=\"normal\"\n                                            label=\"End Date\"\n                                            name=\"closeDate\"\n                                            value={this.state.closeDate}\n                                            onChange={this.handleCloseDateChange}\n                                            className={this.styles.dateField}\n                                            error={!this.state.dateValid}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                \n                            </MuiPickersUtilsProvider>\n                        </Collapse>\n\n                    </Grid>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.handleClose} type=\"button\" autoFocus color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} type=\"submit\" color=\"secondary\" disabled={!this.state.formValid}>\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditLectureDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditLectureDialog from '../../components/EditLectureDialog'\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport InputBase from '@material-ui/core/InputBase';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport LectureObj from '../../models/LectureObj';\nimport { baseURL } from '../../constants/api';\n\nconst styles = theme => ({\n    iconDone: {\n        color: theme.palette.primary.light\n    },\n    iconEdit: {\n        color: theme.palette.secondary\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 14,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\n@observer\nclass LectListItemNavEdit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.lecture = props.lecture\n    }\n    \n    state = {\n        editMode: false,\n        lecture: new LectureObj(null, new Date()),\n        newTitle: \"\",\n        nav: false\n    }\n\n    componentDidMount() {\n        if (this.lecture !== undefined) {\n            this.setState({\n                lecture: this.lecture,\n                newTitle: this.lecture.title\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.state.editMode) {\n            if (nextProps.lecture !== undefined && nextProps.lecture.id !== this.state.lecture.id) {\n                this.setState({\n                    lecture: nextProps.lecture,\n                    newTitle: nextProps.lecture.title\n                })\n            }\n        } \n    }\n\n    handleEdit = (e) => {\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    \n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n\n        // only close if the title is not empty space\n        if (this.state.newTitle.replace(/\\s/g, '').length > 0) {\n            this.apiProfService.changeLectureTitle(this.state.lecture.id, this.state.newTitle);\n            this.setState({\n                editMode: false\n            })\n        }\n        else { // defaults to not changing title if invalid title is input\n            this.setState({\n                editMode: false\n            })\n        }\n    }\n\n    handleToLecture = () => {\n        this.setState({\n            nav: true\n        })\n    }\n\n    handleExportGrades = () => {\n        this.apiProfService.exportGradesLecture(this.state.lecture.id)\n            .then(data => {\n                const element = document.createElement(\"a\");\n                const file = new Blob([data.fileData], {type: 'text/csv;charset=utf-8;'});\n                element.href = URL.createObjectURL(file);\n                element.download = data.fileName;\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n            })\n    }\n\n    render () {\n        if (this.state.nav) {\n            return  <Redirect to={'/professor/' + this.state.lecture.id + '/questions'} push />\n        }\n\n        return (\n            <div>\n                <ListItem button divider onClick={this.handleToLecture}>\n                    <ListItemText primary={this.state.lecture.title} secondary={''+ this.state.lecture.date} />\n                    <ListItemSecondaryAction>  \n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">  \n                            <Grid item>\n                                <Tooltip title=\"Edit Lecture\" placement=\"top\">\n                                    <EditLectureDialog lectureObj={this.state.lecture} />\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleExportGrades}>\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(LectListItemNavEdit);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport LectListItemNavEdit from '../LectListItemNavEdit';\n\n\n\nconst styles = theme => ({\n    icon: {\n        color: theme.palette.primary.light\n    }\n});\n\n@observer\nclass ListOfAllLectures extends React.Component {\n    state = {\n        lectures: []\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId  = props.courseId\n        this.apiProfService = props.apiProfService\n    }\n    componentDidMount() {\n        if (this.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(this.courseId)\n            })\n        }\n        \n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(nextProps.courseId)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <List component=\"nav\">\n                {this.state.lectures.map((lectureObj, index) => {\n                    return (\n                        <LectListItemNavEdit key={index} profStore={this.profStore} apiProfService={this.apiProfService} lecture={lectureObj} />\n                    )\n                })}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfAllLectures);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport CourseObj from '../../models/LectureObj';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.secondary.main\n    },\n    editRoot: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.primary.main\n    },\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n        color: '#FFFFFF'\n    },\n    termYear: {\n        margin: theme.spacing.unit,\n        color: '#FFFFFF',\n        fontStyle: 'italic'\n    },\n    textFieldShort: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 350\n    },\n    textFieldLong: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 1000\n    },\n    divider: {\n        backgroundColor: '#FFFFFF'\n    }\n});\n\n\n@observer\nclass CourseInfo extends React.Component {\n    state = {\n        parentCourse: new CourseObj(),\n        editMode: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n    }\n\n    componentDidMount() {\n        if (this.courseId !== undefined) {\n            if (!this.profStore.dataLoaded) {\n                this.apiProfService.loadData().then(() => {\n                    this.profStore.dataLoaded = true;\n                    this.setState({\n                        parentCourse: this.profStore.getCourseWithId(this.courseId)\n                    })\n                })\n            } else {\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.courseId)\n                })\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.setState({\n                parentCourse: this.profStore.getCourseWithId(nextProps.courseId)\n            })\n        }\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState(prevState => {\n            let newCourse = {...prevState.parentCourse}\n            newCourse[name] = value\n            return { parentCourse: newCourse, editMode: prevState.editMode }\n        })\n    }\n\n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n        this.apiProfService.changeCourseData(this.state.parentCourse.id, this.state.parentCourse);\n        this.setState({\n            editMode: false,\n        })\n    }\n\n    render() {\n        if (this.state.editMode) {\n            return (\n                <Paper className={this.styles.editRoot} elevation={1}>\n                    <Grid container direction='column' justify='space-between' alignItems='stretch' >\n                        <Grid item xs={12}>\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item xs={11}>\n                                    <TextField\n                                        label=\"Course Name\"\n                                        name=\"title\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.title}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Department\"\n                                        name=\"dept\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.dept}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Course Number\"\n                                        name=\"coursenum\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.coursenum}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n                                </Grid>\n\n                                <Grid item>\n                                    <Tooltip title=\"Done Editing\" placement=\"top\">\n                                        <IconButton color=\"secondary\" disabled={!this.state.parentCourse.title} onClick={this.handleEditClose}>\n                                            <DoneIcon className={this.styles.iconDone}/>\n                                        </IconButton>\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        label=\"Term\"\n                                        name=\"term\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.term}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Year\"\n                                        name=\"year\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.year}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <TextField\n                                label=\"Description\"\n                                name=\"description\"\n                                className={this.styles.textFieldLong}\n                                value={this.state.parentCourse.description}\n                                onChange={this.handleChange}\n                                multiline={true}\n                                margin=\"normal\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )\n        } else {\n            return (\n                <Paper className={this.styles.root} elevation={1}>\n                    <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                        <Grid item xs={12}>\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item>\n                                    <Typography className={this.styles.title} \n                                                variant=\"h4\" \n                                                color=\"inherit\">\n                                                    {this.state.parentCourse.dept} {this.state.parentCourse.coursenum} - {this.state.parentCourse.title} \n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Tooltip title=\"Edit Course Info\" placement=\"top\">\n                                        <IconButton color=\"primary\" onClick={this.handleEditOpen}>\n                                            <EditIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                                \n                            <Typography className={this.styles.termYear} variant=\"h8\" >{this.state.parentCourse.term} {this.state.parentCourse.year}</Typography>\n                            <Divider className={this.styles.divider} />\n                            <Typography className={this.styles.title} variant=\"body2\" color=\"inherit\">{this.state.parentCourse.description}</Typography>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )\n        }\n        \n    }\n}\n\nexport default withStyles(styles)(CourseInfo);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    }\n});\n\n@observer\nclass DeleteLecturesList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delLectures: [],\n        lectures: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId  = props.courseId\n    }\n    componentDidMount() {\n        let shouldDelete = []\n        this.profStore.getCourseLectures(this.courseId).map(lectureObj => \n           shouldDelete.push({\n            id: lectureObj.id,\n            checked: false,\n            title: lectureObj.title\n        }))\n        if (this.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(this.courseId),\n                delLectures: shouldDelete\n            })\n        }\n        \n    }\n\n    handleChange = id =>  event => {\n        // if id in lectures, then we are unchecking; otherwise we need to uncheck\n        this.state.delLectures.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delLectures: this.state.delLectures\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delLectures);\n    }\n\n\n    render() {\n        return (\n            <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delLectures\"\n                    value={this.state.delLectures}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delLectures.map((lect, index) => {\n                                return (\n                                    <ListItem divider key={index}>\n                                        <ListItemText primary={lect.title}/>\n                                        <ListItemSecondaryAction>\n                                            <FormControlLabel key={index} control={\n                                                    <Checkbox className={this.styles.checkBox} key={lect.id} checked={lect.checked} onChange={this.handleChange(lect.id)} value={lect.id} />\n                                                }/>\n                                        </ListItemSecondaryAction> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteLecturesList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport CourseObj from '../../models/CourseObj';\nimport ListOfAllLectures from '../ListOfAllLectures';\nimport CourseInfo from '../CourseInfo';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteLecturesList from '../DeleteLecturesList';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    }\n\n});\n\n\n@observer\nclass AllLecturesFrame extends React.Component {\n    state = {\n        toNewLecture: false,\n        referrerLectureIndex: -1,\n        parentCourse: new CourseObj(),\n        numLects: undefined,\n        deletions: [],\n        deleteMode: false,\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n    }\n\n    componentDidMount() {\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                this.profStore.dataLoaded = true\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.courseId)\n                })\n            })\n        } else {\n            this.setState({\n                parentCourse: this.profStore.getCourseWithId(this.courseId)\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.parentCourse.id !== this.props.courseId) {\n            if (!this.props.profStore.dataLoaded) {\n                this.apiProfService.loadData().then(() => {\n                    this.props.profStore.dataLoaded = true\n                    this.setState({\n                        parentCourse: this.profStore.getCourseWithId(this.props.courseId)\n                    })\n                })\n            } else {\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.props.courseId)\n                })\n            }\n        }\n    }\n\n    // gets lectures to be deleted from child component\n    getDeletions = (delLectures) => {\n        this.setState({\n            deletions: delLectures\n        })\n    }\n    handleNewLectureClick = () => {\n        this.setState(() => ({\n            toNewLecture: true,\n            numLects: this.profStore.getCourseLectures(this.state.parentCourse.id).length + 1\n        }))\n    }\n\n    handleLectureClick = index => {\n        this.setState(() => ({\n            referrerLectureIndex: index\n        }))\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const lectArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    lectArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (lectArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: lectArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n\n    }\n    handleClose = () => {\n        this.setState({\n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteLectures(this.state.delIds, this.state.parentCourse.id);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewLecture === true) {\n            return <Redirect to={{\n                pathname: '/professor/' + this.state.parentCourse.id + '/new',\n                state: { numLects: this.state.numLects }\n            }} />\n        } else if (this.state.referrerLectureIndex !== -1) {\n            return <Redirect to={'/professor/' + this.state.referrerLectureIndex + '/questions'} push />\n        }\n\n        let list = <ListOfAllLectures courseId={this.state.parentCourse.id} profStore={this.profStore} apiProfService={this.apiProfService} />\n        let course_info = <CourseInfo courseId={this.state.parentCourse.id} profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction = \"delete\"\n\n        if (this.state.deleteMode) {\n            list = <DeleteLecturesList courseId={this.state.parentCourse.id} profStore={this.profStore} getDeletions={this.getDeletions} />\n            deleteAction = \"done\"\n        }\n\n        return (\n            <div>\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        {course_info} \n\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\">List of Lectures</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top-start\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                                {deleteAction === 'delete' ? <DeleteIcon /> : <DoneIcon />}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button onClick={this.handleNewLectureClick} color=\"primary\">\n                                            <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                                            Add Lecture\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        {list}\n\n                    </CardContent>\n                </Card>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following lecture(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) =>\n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n\n                        )}\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            no\n                        </Button>\n                        <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                            yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nAllLecturesFrame.propTypes = {\n    courseId: PropTypes.string\n};\n\nexport default withStyles(styles)(AllLecturesFrame);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AllLecturesFrame from '../../../components/AllLecturesFrame';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\n\nconst styles = theme => ({\n\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorViewLectures extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    render() {\n        return (\n            <AllLecturesFrame profStore={this.profStore} apiProfService={this.apiProfService} courseId={this.props.match.params.courseId} />\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorViewLectures);\n","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { List, ChatBubbleOutline } from '@material-ui/icons';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n    vert: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass AddQuestionModal extends React.Component {\n    state = {\n        open: false,\n        toNewMCQuestion: false,\n        toNewFreeTextQuestion: false,\n        toNewSliderQuestion: false,\n        lectureId: null\n    };\n\n    constructor(props) {\n        super(props);\n        this.styles = props.classes;\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleMC = () => {\n        // Close modal \n        this.setState({ open: false, toNewMCQuestion: true });\n    }\n\n    handleFreeText = () => {\n        // Close modal\n        this.setState({ open: false, toNewFreeTextQuestion: true});\n    }\n\n    handleSlider = () => {\n        this.setState({ open: false, toNewSliderQuestion: true })\n    }\n\n    render() {\n        const { classes } = this.props;\n        if (this.state.toNewMCQuestion === true) {\n            // Lecture Id\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-mc'} push />\n        } else if (this.state.toNewFreeTextQuestion === true) {\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-free-text'} push />\n        }\n        else  if (this.state.toNewSliderQuestion === true) {\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-slider'} push />\n        }\n\n        return (\n            <div>\n                <Button onClick={this.handleOpen} color=\"primary\">\n                    <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                    Add Question\n                </Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"multiple choice\" onClick={this.handleMC}>\n                                    <div className={classes.vert}>\n                                        <List color=\"primary\" fontSize=\"large\" />\n                                        <Typography>\n                                            Multiple Choice\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"free text\" onClick={this.handleFreeText}>\n                                    <div className={classes.vert}>\n                                        <ChatBubbleOutline color=\"primary\" fontSize=\"large\" />\n                                        <Typography>\n                                            Free Text\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"slider\" onClick={this.handleSlider}>\n                                    <div className={classes.vert}>\n                                        <Icon color=\"primary\" fontSize=\"large\">linear_scale</Icon>\n                                        <Typography>\n                                            Slider\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nAddQuestionModal.propTypes = {\n    lectureId: PropTypes.string\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst AddQuestionModalWrapped = withStyles(styles)(AddQuestionModal);\n\nexport default AddQuestionModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { observer, inject } from 'mobx-react';\nconst socket = socketIOClient(socketioURL)\n\nconst styles = theme => ({\n    startLectureBtn: {\n        float: \"right\"\n    }\n});\n\n@inject(\"apiService\")\n@inject(\"profStore\")\n@observer\nclass OpenClosedButton extends React.Component {\n\n    state = {\n        isOpen: false, \n        questionId: \"\",\n    }\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    componentDidMount() {\n\n        this.setState({ isOpen: this.props.open, questionId: this.props.questionId })\n        \n    }\n\n    // this is to detect if the scrolling question button has opened or closed a question\n    componentWillReceiveProps(nextProps) {\n        \n        if (nextProps.parentLecture.id !== this.props.parentLecture.id) {\n            this.setState({ isOpen: nextProps.open, questionId: nextProps.questionId })\n        }\n        else {\n            if (nextProps.recentlyOpenedId !== undefined) {\n                if (nextProps.recentlyOpenedId === this.state.questionId && !this.state.isOpen) {\n                    this.props.handleToUpdate(true);\n                    this.setState({ isOpen: true })\n                }\n            }\n            if (nextProps.recentlyClosedId !== undefined) {\n                if (nextProps.recentlyClosedId === this.state.questionId && this.state.isOpen) {\n                    this.props.handleToUpdate(false);\n                    this.setState({ isOpen: false })\n                }\n            }\n        }\n    }\n\n    handleBtnClick() {\n        \n        if (!this.state.isOpen) {\n            // Handle the \"Open Question\"\n            console.log(\"openeint the quesiton in button\")\n            this.props.apiService.openQuestion(this.props.questionId, this.props.parentLecture.id)\n            socket.emit('subscribe professor', this.props.questionId)\n            this.props.handleClick(this.props.questionId)\n            this.props.handleToUpdate(true)\n            this.setState({ isOpen: true })\n        }\n        else {\n            // Handle the \"Close Question\"\n            console.log(\"closing question in button\")\n            this.props.apiService.closeQuestion(this.props.questionId, this.props.parentLecture.id)\n            this.props.handleToUpdate(false)\n            this.props.handleListClose(this.props.questionId)\n            this.setState({ isOpen: false })\n        }\n    }\n\n    render() {\n        return (\n            <Collapse in={!this.props.parentLecture.scheduled}>\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleBtnClick()}\n                    className={this.styles.startLectureBtn}>\n                    {!this.state.isOpen ? \"Open\" : \"Close\"}\n                </Button>\n            </Collapse>\n        );\n    }\n}\n\nexport default withStyles(styles)(OpenClosedButton);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Timer from '@material-ui/icons/Timer';\nimport { observer } from 'mobx-react';\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    card: {\n        marginBottom: 10\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n@observer\nclass BaseStatsComponent extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            time: 0,\n            isOn: false,\n            questionTitle: \"\",\n            hidden: props.hidden\n        }\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({ hidden: this.props.hidden })\n    }\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.props.question.opened_at)\n        }), 1);\n    }\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidUpdate() {\n        if (this.props.timer) {\n            if (!this.props.hidden && !this.state.isOn) {\n                this.startTimer()\n            }\n            else if (this.props.hidden && this.state.time !== 0 && this.state.isOn) {\n                this.stopTimer()\n                this.resetTimer()\n            }\n        }\n        if (this.props.questionTitle !== this.state.questionTitle) {\n            this.setState({ questionTitle: this.props.questionTitle })\n        }\n\n        if (this.props.hidden !== this.state.hidden ){\n            this.setState({ hidden: this.props.hidden })\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopTimer()\n        this.resetTimer()\n        this.setState({ hidden: true })\n    }\n\n\n    render() {\n        return (\n            <Card className={this.styles.card} hidden={this.state.hidden}>\n                <CardContent>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Statistics for {this.props.questionTitle}\n                    </Typography>\n                    {this.props.timer ? (\n                        <Typography variant=\"subtitle2\" color=\"inherit\" hidden={!this.props.timer} >\n                            <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                        </Typography>\n                    ) : null\n                    }\n                    {this.props.children}\n                    <Typography variant=\"body1\" color=\"inherit\">\n                        Total Responses: {this.props.responsesNumber}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(BaseStatsComponent);","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { Bar, defaults } from 'react-chartjs-2';\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass MCQuestionStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            data: {},\n            responsesNumber: 0,\n            update: false,\n            override: true\n        }\n        defaults.global.legend.display = false;\n        defaults.global.tooltips.enabled = false;\n    }\n\n    componentDidMount() {\n\n        this.setState({ override: this.props.override })\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId !== 0) {\n            const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n            socket.emit('subscribe professor', question.id)\n            const labels = []\n            for (var i = 0; i < question.number_of_options; i++) {\n                let currLabel = question[\"option\" + (i + 1)]\n                if (currLabel.length > 10)\n                    currLabel = \"Option \" + (i + 1)\n                labels.push(currLabel)\n            }\n\n            this.setState({\n                question: question,\n                data: {\n                    labels: labels\n                }\n            })\n        }\n\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId === 0) {\n            this.setState({\n                question: { id: 0, data: { labels: [] } }\n            })\n        }\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    const values = []\n\n                    const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }]\n                        },\n                        responsesNumber: msg.count,\n                        question: question,\n                    })\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    const values = []\n\n                    const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }]\n                        },\n                        responsesNumber: msg.count,\n                        question: question\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId)\n        this.setState({ question: question, override: nextProps.override })\n        if (this.state.question.id !== nextProps.selectedQuestionId && nextProps.selectedQuestionId !== 0) {\n            \n            socket.emit('subscribe professor', question.id)\n            const labels = []\n            for (var i = 0; i < question.number_of_options; i++) {\n                let currLabel = question[\"option\" + (i + 1)]\n                if (currLabel.length > 10)\n                    currLabel = \"Option \" + (i + 1)\n                labels.push(currLabel)\n            }\n\n            this.setState({\n                data: {\n                    labels: labels\n                }\n            })\n        }\n\n        if (this.state.question.id !== nextProps.selectedQuestionId && nextProps.selectedQuestionId === 0) {\n            this.setState({\n                question: { id: 0, data: { labels: [] } }\n            })\n        }\n        if (!nextProps.override) {\n            socket.on('new results', (msg) => {\n\n                if (msg.question_id === nextProps.selectedQuestionId) {\n                    const values = []\n\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n                    const labels = []\n                    for (var j = 0; j < question.number_of_options; j++) {\n                        let currLabel = question[\"option\" + (j + 1)]\n                        if (currLabel.length > 10)\n                            currLabel = \"Option \" + (j + 1)\n                        labels.push(currLabel)\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }],\n                            labels: labels\n                        },\n                        responsesNumber: msg.count,\n                    })\n                }\n            })\n        } else {\n            nextProps.apiService.loadAnswers(nextProps.selectedQuestionId).then((msg) => {\n                if (msg.question_id === nextProps.selectedQuestionId) {\n                    const values = []\n\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n                    const labels = []\n                    for (var j = 0; j < question.number_of_options; j++) {\n                        let currLabel = question[\"option\" + (j + 1)]\n                        if (currLabel.length > 10)\n                            currLabel = \"Option \" + (j + 1)\n                        labels.push(currLabel)\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }],\n                            labels: labels\n                        },\n                        responsesNumber: msg.count,\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        const options = {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        userCallback: function (label, index, labels) {\n                            // when the floored value is the same as the value we have a whole number\n                            if (Math.floor(label) === label) {\n                                return label;\n                            }\n\n                        },\n                    }\n                }],\n            }\n        }\n\n        return (\n            <BaseStatsComponent question={this.state.question}\n                responsesNumber={this.state.responsesNumber}\n                timer={!this.state.override} questionTitle={this.state.question.question_title}\n                hidden={this.state.override ? false : !this.state.question.is_open} >\n                <Bar key={this.props.selectedQuestionId} data={this.state.data} options={options} />\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default MCQuestionStats;","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass MCQuestionStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            responsesNumber: 0,\n            responses: {},\n            override: false,\n        }\n    }\n\n    componentDidMount() {\n        const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n        this.setState({ override: this.props.override, question: question })\n\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId !== 0) {\n            socket.emit('subscribe professor', question.id)\n        }\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.setState({\n                        responsesNumber: msg.count,\n                        responses: msg.answers,\n                    })\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                \n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.setState({\n                        responsesNumber: msg.count,\n                        responses: msg.answers\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const next_question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId);\n\n        this.setState({ override: nextProps.override, question: next_question})\n        \n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        return (\n            <BaseStatsComponent question={this.state.question} responsesNumber={this.state.responsesNumber} timer={!this.state.override} questionTitle={this.state.question.question_title} hidden={this.state.override ? false : !this.state.question.is_open}  >\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Response</TableCell>\n                            <TableCell align=\"right\">Frequency</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.keys(this.state.responses).map((response, index) => {\n                            return (\n                                <TableRow key={index}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {response}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{this.state.responses[response]}</TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </Table>\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default MCQuestionStats;","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { Bar, defaults } from 'react-chartjs-2';\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass SliderStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            data: {},\n            responsesNumber: 0,\n            override: false,\n        }\n        defaults.global.legend.display = false;\n        defaults.global.tooltips.enabled = false;\n    }\n\n    componentDidMount() {\n        if (this.props.selectedQuestionId !== 0) {\n            const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n            this.setState({ question: question })\n        }\n        if (this.state.question.id !== this.props.selectedQuestionId) {\n            if (this.props.selectedQuestionId !== 0) {\n                const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                socket.emit('subscribe professor', question.id)\n                this.updateChartLabels(question)\n            } else {\n                this.setState({\n                    question: { id: 0, data: { labels: [] } }\n                })\n            }\n        }\n\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.updateChartData(msg.answers, msg.count)\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.updateChartData(msg.answers, msg.count)\n                }\n            })\n        }\n        this.setState({ override: this.props.override })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const next_question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId);\n        this.setState({ override: nextProps.override, question: next_question })\n        if (next_question.id === this.state.question.id) {\n\n            if (this.state.question.id !== nextProps.selectedQuestionId) {\n                if (nextProps.selectedQuestionId !== 0) {\n                    socket.emit('subscribe professor', next_question.id)\n                    this.updateChartLabels(next_question)\n                } else {\n                    this.setState({\n                        question: { id: 0, data: { labels: [] } }\n                    })\n                }\n            }\n    \n            if (!nextProps.override) {\n                socket.on('new results', (msg) => {\n                    if (msg.question_id === nextProps.selectedQuestionId) {\n                        this.updateChartData(msg.answers, msg.count)\n                    }\n                })\n            } else {\n                nextProps.apiService.loadAnswers(nextProps.selectedQuestionId).then((msg) => {\n                    if (msg.question_id === nextProps.selectedQuestionId) {\n                        this.updateChartData(msg.answers, msg.count)\n                    }\n                })\n            }\n        }\n    }\n\n    updateChartLabels(question) {\n        const labels = []\n        for (var i = 0; i <= 100; i++) {\n            if (i % 10 === 0)\n                labels.push(i)\n            else \n                labels.push('')\n        }\n\n        this.setState({\n            question: question,\n            data: {\n                labels: labels\n            }\n        })\n    }\n\n    updateChartData(values, count) {\n        this.setState({\n            data: {\n                datasets: [{\n                    label: \"Question Statistics\",\n                    backgroundColor: '#E9C46A',\n                    borderColor: '#E9C46A',\n                    data: values,\n                }]\n            },\n            responsesNumber: count\n        })\n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        const options = {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        userCallback: function (label, index, labels) {\n                            // when the floored value is the same as the value we have a whole number\n                            if (Math.floor(label) === label) {\n                                return label;\n                            }\n\n                        },\n                    }\n                }],\n            }\n        }\n\n        return (\n            <BaseStatsComponent question={this.state.question} responsesNumber={this.state.responsesNumber} timer={!this.state.override} questionTitle={this.state.question.question_title} hidden={this.state.override ? false : !this.state.question.is_open}  >\n                <Bar key={this.props.selectedQuestionId} data={this.state.data} options={options} />\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default SliderStats;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InsertChartOutlined from '@material-ui/icons/InsertChartOutlined';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\nimport MCQuestionStats from '../../components/MCQuestionStats';\nimport FreeTextStats from '../../components/FreeTextStats';\nimport SliderStats from '../../components/SliderStats';\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n    }\n});\n\nclass ViewStatsModal extends React.Component {\n    state = {\n        open: false,\n        question: {id: 0}\n    };\n\n    constructor(props) {\n        super(props);\n        this.styles = props.classes;\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        let stats;\n\n        if (this.props.question.question_type === \"multiple_choice\") {\n            stats = (<MCQuestionStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n        else if (this.props.question.question_type === \"free_text\") {\n            stats = (<FreeTextStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n        else if (this.props.question.question_type === \"slider\") {\n            stats = (<SliderStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n\n        return (\n            <div>\n                <IconButton color=\"secondary\" onClick={this.handleOpen}>\n                    <InsertChartOutlined />\n                </IconButton>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        {stats}\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst ViewStatsModalWrapped = withStyles(styles)(ViewStatsModal);\n\nexport default ViewStatsModalWrapped;","export class QuestionObj {\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer) {\n\n        this.id = id;\n        this.lecture_id = lecture_id;\n        this.question_type = question_type;\n        this.question_title = question_title;\n        this.question_image = question_image;\n        this.correct_answer = correct_answer;\n        this.creator_id = creator_id;\n        this.is_open = is_open;\n        this.opened_at = opened_at;\n        this.closed_at = closed_at;\n        this.created_at = created_at;\n        this.modified_at = modified_at;\n        this.answer = answer;\n    }\n\n}\n\nexport class MultipleChoiceQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer, option1, option2, option3, option4, option5, number_of_options) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.option1 = option1;\n        this.option2 = option2;\n        this.option3 = option3;\n        this.option4 = option4;\n        this.option5 = option5;\n        this.number_of_options = number_of_options;\n    }\n}\n\nexport class SliderQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer, lower_label, upper_label) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.lower_label = lower_label;\n        this.upper_label = upper_label;\n    }\n}\n\nexport class FreeTextQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer, word_limit) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.word_limit = word_limit;\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FreeTextQuestionObj } from '../../models/QuestionObj';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main\n    },\n    item: {\n        paddingBottom: theme.spacing.unit\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit\n    },\n    icon: {\n        margin: theme.spacing.unit\n    }\n});\n\n@observer\nclass EditFRQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: \"\",\n        correct_answer: \"\",\n        error: \"\",\n        titleValid: true,\n        question_image: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n        //this.handleClick = props.handleClick\n    }\n\n    componentDidMount() {\n        if (this.props.questionObj.correct_answer !== null) {\n            this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image, correct_answer: this.props.questionObj.correct_answer })\n        }\n        else {\n            this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image })\n        }\n        \n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleValidation() {\n        if (this.state.title === '') {\n            this.setState({\n                error: \"This field is required\",\n                titleValid: false,\n            })\n        } else {\n            this.setState({\n                error: \"\",\n                titleValid: true,\n            });\n        }\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.handleValidation(name, value) });\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if(this.state.titleValid) {\n            this.props.getEdits( \n                new FreeTextQuestionObj(this.props.questionObj.id, \n                    this.props.questionObj.lecture_id, \"free_text\", \n                    this.state.title, this.state.question_image, this.state.correct_answer, \n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, \n                    this.props.questionObj.opened_at, this.props.questionObj.closed_at, \n                    this.props.questionObj.created_at, null, null, this.props.questionObj.word_limit))\n        }\n        this.handleClose();\n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                <DialogTitle id=\"alert-dialog-title\">{\"Edit Free Text Question\"}</DialogTitle>\n                <DialogContent>\n                    <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={!this.state.titleValid && !(this.state.error === \"\")}\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.error}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    fullWidth\n                                    label=\"Correct Answer\"\n                                    value={this.state.correct_answer}\n                                    onChange={this.handleChange('correct_answer')}\n                                    margin=\"normal\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </form>\n\n                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                <Grid item className={this.styles.item}>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        Image Preview\n                                    </Typography>\n                                </Grid>\n                                <Grid item className={this.styles.item}>\n                                    <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                                </Grid>\n                            </Collapse>\n\n                            <Grid item className={this.styles.item}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                        >\n                                        {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                        <input\n                                            type=\"file\"\n                                            style={{ display: \"none\" }}\n                                            onChange={this.encodeImageFileAsURL}\n                                        />\n                                        </Button>\n                                    </Grid>\n\n                                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                        <Grid item className={this.styles.buttonItem}>\n                                            <Button\n                                                variant=\"contained\"\n                                                component=\"label\"\n                                                onClick={this.removeImage}\n                                            >\n                                            Remove Image\n                                            </Button>\n                                        </Grid>\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                        cancel\n                    </Button>\n                    <Button onClick={this.handleSubmit} color=\"secondary\" disabled={!this.state.titleValid}>\n                        submit\n                    </Button>\n            </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditFRQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { MultipleChoiceQuestionObj } from '../../models/QuestionObj';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main\n    },\n    select: {\n        width: 200\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit,\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit * 2,\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 12,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\nfunction answersValid(new_options) {\n    if (new_options.length < 2) return false;\n    for (const option of new_options) {\n        for (const val of Object.values(option)) {\n            if (val === undefined) {\n                return false; \n            }\n            else {\n                if (val.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n            }\n        }     \n    }\n    return true;\n}\n\n@observer\nclass EditMCQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: '',\n        correct_answer: '',\n        number_of_options: \"\",\n        question_image: \"\",\n        options: [], // necessary because of controlled form\n        answer_choices: {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"}, // must be set for input base to be controlled\n        checked: {option1: false, option2: false, option3: false, option4: false, option5: false},\n        should_delete: {option1:false, option2:false, option3:false, option4:false, option5:false},\n        titleError: \"\",\n        formValid: true,\n        titleValid: true,\n        hasAnswers: true,\n        optionsValid: true,\n        delete_mode: false,\n        deleteDisabled: false,\n        deleteConfirmDisabled: false,\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        let answer_choices = {};\n        let checked = this.state.checked;\n        let correct = this.props.questionObj.correct_answer \n        const number_of_options = Number(this.props.questionObj.number_of_options);\n        let options = [];\n\n        for (let i = 1; i <= number_of_options; i++) {\n            let option_string= \"option\" + i.toString();\n            answer_choices[option_string] = this.props.questionObj[option_string];\n            options.push({ [option_string]: answer_choices[option_string] })\n        }\n        if (correct !== null) {\n            correct = \"option\" + correct;\n            checked[correct] = true;\n        }\n       \n        this.setState({ title: this.props.questionObj.question_title,\n                        question_image: this.props.questionObj.question_image,\n                        correct_answer: correct,\n                        number_of_options: number_of_options,\n                        answer_choices: answer_choices,\n                        checked: checked,\n                        options: options\n        })\n       \n        \n    }\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n\n    handleDelete() {\n\n        let answer_choices = this.state.answer_choices;\n        let number_of_options = this.state.number_of_options;\n        let options = [];\n        let correct_answer = \"\";\n        let checked = {option1: false, option2: false, option3: false, option4: false, option5: false};\n\n        for (const k of Object.keys(this.state.should_delete)) {\n            if (this.state.should_delete[k]) {\n                number_of_options--;\n            }\n        }\n\n        // abort if less than two options remain, but button disabling should prevent this anyway\n        if (number_of_options < 2) {\n            this.setState({\n                should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n                delete_mode: false,\n            })\n            return;\n        }\n\n        let index = 1;\n        for (const k of Object.keys(answer_choices)) {\n            if (!this.state.should_delete[k]) {\n                let option_string = \"option\" + index.toString();\n                options.push({ [option_string]: answer_choices[k] });\n                if (k === this.state.correct_answer) correct_answer = option_string;\n                index++;\n                if (index > number_of_options) {\n                    break;\n                }\n            }\n        }\n\n        answer_choices = {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"};\n        // this is not the nicest way to do this, but it's functional, and I couldn't find my bug in my nicer code\n        options.map(option => answer_choices[Object.keys(option)[0]] = Object.values(option)[0]);\n\n        if (correct_answer !== \"\" && correct_answer !== null) checked[correct_answer] = true;\n\n        this.setState({\n            should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n            answer_choices: answer_choices,\n            correct_answer: correct_answer,\n            checked: checked,\n            number_of_options: number_of_options,\n            delete_mode: false,\n            options: options,\n            deleteDisabled: number_of_options <= 2,\n        }, () => { this.validateFields('answer_choices', options) });\n       \n    }\n\n    validateFields(name, value) {\n        let titleValid = this.state.titleValid;\n        let errors = this.state.errors;\n        let has_answers = this.state.hasAnswers\n        let optionsValid = this.state.optionsValid;\n        let titleError = this.state.titleError;\n\n        switch(name) {\n            case \"title\":\n                if (value === \"\") {\n                    titleError = \"This field is required\";\n                    titleValid = false;\n                }\n                else {\n                    titleError = '';\n                    titleValid = true;\n                }\n                break;\n            case \"number_of_options\":\n                has_answers = true;\n                optionsValid = answersValid(value);\n                break;\n            case \"answer_choices\":\n                optionsValid = answersValid(value);\n                break;\n            default:\n        }\n       \n        this.setState({ errors: errors, \n                        titleValid: titleValid, \n                        titleError: titleError,\n                        hasAnswers: has_answers,\n                        optionsValid: optionsValid,\n         }, this.validateForm);\n\n    }\n    \n    validateForm() {\n        const titleValid = this.state.title.replace(/^\\s+|\\s+$/g, '') !== \"\";\n        if (!titleValid) {\n            this.setState({ titleValid: false })\n        }\n        this.setState({ formValid: titleValid && this.state.hasAnswers && this.state.optionsValid });\n    }\n\n\n    handleOption = option => event => {\n        const key = Object.keys(option)[0];\n        let answer_choices = this.state.answer_choices;\n        let options = this.state.options;\n        answer_choices[key] = event.target.value;\n        options.find(x => Object.keys(x)[0] === key)[key] = event.target.value\n        this.setState({\n            answer_choices: answer_choices,\n            options: options,\n        }, () => { this.validateFields('answer_choices', options) });\n    }\n    \n    handleSetNumberOfOptions = name => event => {\n        let options = [];\n        let answer_choices = this.state.answer_choices;\n        let deleteDisabled = event.target.value <= 2;\n\n        for (let i = 1; i <= event.target.value; i++) {\n            let option_string = \"option\" + i.toString();\n            options.push({ [option_string]: this.state.answer_choices[option_string] })\n        }\n        if (event.target.value < this.state.number_of_options) {\n            for (let i = event.target.value + 1; i <=5; i++) {\n                let option_string = \"option\" + i.toString();\n                answer_choices[option_string] = \"\";\n            }\n        }\n\n        this.setState({\n            answer_choices: answer_choices,\n            number_of_options: event.target.value,\n            options: options,\n            deleteDisabled: deleteDisabled,\n        }, () => { this.validateFields(name, options)});\n\n    }\n\n    handleDeleteQueue = name => event => {\n        let should_delete = this.state.should_delete;\n        if (event.target.checked) {\n            should_delete[name] = true;\n        }\n        else {\n            should_delete[name] = false;\n        }\n\n        // compute if confirm button should be disabled\n        let numRemainingOptions = 0;\n        for (const k of Object.keys(should_delete)) {\n            if (!should_delete[k]) {\n                numRemainingOptions++;\n            }\n        }\n        \n        // adjust for the \"invisible\" options which have been counted as well\n        numRemainingOptions -= (5 - this.state.number_of_options);\n\n        this.setState({\n            should_delete: should_delete,\n            deleteConfirmDisabled: numRemainingOptions < 2,\n        })\n    }\n\n    handleCheck = option => event => {\n        const key = Object.keys(option)[0];\n        let checked = this.state.checked;\n        let correct_answer = key;\n        checked[key] = event.target.checked;\n\n        if (this.state.correct_answer === key) {\n            checked[key] = false;\n            correct_answer = \"\";\n        }\n    \n        this.setState({\n            correct_answer: correct_answer,\n            checked: checked\n        })\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.validateFields(name, value) });\n    };\n\n    setDeleteMode() {\n        const delete_mode = !this.state.delete_mode;\n        this.setState({ delete_mode: delete_mode });\n    }\n\n    handleOpen =  () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.formValid) {\n            let correct_answer = \"\";\n            if (this.state.correct_answer !== \"\" && this.state.correct_answer !== null) {\n                correct_answer = this.state.correct_answer.substring(6, 7);\n            }\n        \n            if(this.state.formValid) {\n                this.props.getEdits( \n                    new MultipleChoiceQuestionObj(this.props.questionObj.id,\n                    this.props.questionObj.lecture_id, \"multiple_choice\",\n                    this.state.title, this.state.question_image, correct_answer,\n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, this.props.questionObj.opened_at, this.props.questionObj.closed_at,\n                    this.props.questionObj.created_at, this.props.questionObj.modified_at, this.props.questionObj.answer,\n                    this.state.answer_choices.option1, this.state.answer_choices.option2, this.state.answer_choices.option3, this.state.answer_choices.option4, this.state.answer_choices.option5,\n                    this.state.number_of_options))\n            }\n            this.handleClose();\n        }  \n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    scroll=\"paper\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Edit Multiple Choice Question\"}</DialogTitle>\n                    <DialogContent>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item className={this.styles.item}>\n                                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        error={!this.state.titleValid}\n                                        id=\"standard-name\"\n                                        label=\"Question Title\"\n                                        value={this.state.title}\n                                        onChange={this.handleChange('title')}\n                                        margin=\"normal\"\n                                        helperText={this.state.titleError}\n                                    />\n                                </form>\n                            </Grid>\n                            <Grid item className={this.styles.item}>\n                                <form autoComplete=\"off\">\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"number-options\">number of answer choices</InputLabel>\n                                        <Select\n                                            value={this.state.number_of_options}\n                                            onChange={this.handleSetNumberOfOptions('number_of_options')}\n                                            className={this.styles.select}\n                                            disabled={this.state.delete_mode}\n                                            inputProps={{\n                                            name: 'number_of_options',\n                                            id: 'number-options',\n                                            }}\n                                        >\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </form>\n                            </Grid>\n                            {this.state.hasAnswers && \n                            <Grid item>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            {this.state.delete_mode ? \n                                                <TableCell> Delete?</TableCell>\n                                                :\n                                                <TableCell>Correct Answer?</TableCell>\n                                            }\n                                            <TableCell>Answer Choices</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                    {this.state.delete_mode ? \n                                    this.state.options.map((option, index) => \n                                            <TableRow key={index}> \n                                                <TableCell>\n                                                    <Checkbox\n                                                        checked={this.state.should_delete[Object.keys(option)[0]]}\n                                                        onChange={this.handleDeleteQueue(Object.keys(option)[0])}\n                                                        value={Object.keys(option)[0]}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Typography variant=\"body1\" align=\"justify\"> {this.state.answer_choices[Object.keys(option)[0]]}</Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                        :\n                                        this.state.options.map((option, index) => \n                                            <TableRow key={index}>\n                                                <TableCell>\n                                                    <Checkbox\n                                                        checked={this.state.correct_answer === Object.keys(option)[0]}\n                                                        onChange={this.handleCheck(option)}\n                                                        value={Object.keys(option)[0]}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <FormControl>\n                                                        <InputBase\n                                                        multiline\n                                                        id=\"bootstrap-input\"\n                                                        name={Object.keys(option)[0]}\n                                                        value={this.state.answer_choices[Object.keys(option)[0]]}\n                                                        onChange={this.handleOption(option)}\n                                                        classes={{\n                                                            input: this.styles.bootstrapInput\n                                                        }}\n                                                        />\n                                                    </FormControl>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    }\n                                    </TableBody>\n                                </Table>    \n                    \n                                    \n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    {!this.state.delete_mode ? \n\n                                    <IconButton onClick={this.setDeleteMode.bind(this)} color=\"secondary\" disabled={this.state.deleteDisabled}>\n                                        <DeleteIcon />\n                                    </IconButton>\n\n                                    :\n                                    \n                                    <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} disabled={this.state.deleteConfirmDisabled}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                    </IconButton>\n                            \n                                    }     \n                                </Grid>\n                            </Grid>\n                            }\n\n                            <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                <Grid item className={this.styles.item}>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        Image Preview\n                                    </Typography>\n                                </Grid>\n                                <Grid item className={this.styles.item}>\n                                    <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                                </Grid>\n                            </Collapse>\n\n                            <Grid item className={this.styles.item}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                        >\n                                        {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                        <input\n                                            type=\"file\"\n                                            style={{ display: \"none\" }}\n                                            onChange={this.encodeImageFileAsURL}\n                                        />\n                                        </Button>\n                                    </Grid>\n\n                                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                        <Grid item className={this.styles.buttonItem}>\n                                            <Button\n                                                variant=\"contained\"\n                                                component=\"label\"\n                                                onClick={this.removeImage}\n                                            >\n                                            Remove Image\n                                            </Button>\n                                        </Grid>\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <form onSubmit={this.handleSubmit}>\n                            <Button onClick={this.handleClose} type=\"button\" autoFocus color=\"secondary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleSubmit} type=\"submit\" color=\"secondary\" disabled={!this.state.formValid}>\n                                Submit\n                            </Button>\n                        </form>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditMCQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { SliderQuestionObj } from '../../models/QuestionObj';\nimport Switch from '@material-ui/core/Switch';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    button:{\n        color: theme.palette.secondary.main\n    },\n    icon: {\n        margin: theme.spacing.unit\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        marginRight: theme.spacing.unit*2.5,\n        width: 45\n    },\n    percentText: {\n        color: \"white\",\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"0.75em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n    },\n    entry: {\n        maxWidth: 500,\n        paddingBottom: theme.spacing.unit\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit * 2,\n    },\n    titleContainer: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit*2\n    },\n    slidercontainer: {\n        paddingRight: theme.spacing.unit*2\n    },\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        flexWrap: 'wrap',\n    },\n\n    andor: {\n        padding: theme.spacing.unit,\n        width: \"15%\"\n    },\n});\n\nconst answerBoundOptions = [\n    {\n      value: '=',\n      label: '=',\n    },\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n  const answerBoundOptionsRange = [\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n\n@observer\nclass EditSLQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: '',\n        titleError: \"\",\n        question_image: \"\",\n        labels: {lower:\"0%\", upper:\"100%\"}, // labels on slider\n        answer_bounds: {upper:\"\", lower:\"\"}, \n        range: false, // whether or not correct answer has a range\n        rangeVal: \"not_range\", // added for radio group purposes\n        equality_operators: {upper:\"\", lower:\"\"},\n        slider_value: 50,\n        has_correct_answer: false,\n        custom_labels: false,\n        fieldsValid: {title: true, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true},\n        disabled: false\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        const {lower_label, upper_label, correct_answer} = this.props.questionObj\n\n        this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image })\n\n        if (lower_label !== null) {\n            if (lower_label !== \"0%\" || upper_label !== \"100%\") {\n                this.setState({\n                    labels: {lower: lower_label, \n                             upper: upper_label\n                            }\n                })\n            }\n        }\n        \n        if (correct_answer) {\n            const correct_arr = correct_answer.split(\" \");\n            if (correct_arr.length === 2) {\n                this.setState({\n                    answer_bounds: {\n                        lower: correct_arr[1],\n                        upper: \"\",\n                    },\n                    equality_operators: {\n                        lower: correct_arr[0],\n                        upper: \"\"\n                    },\n                })\n            }\n            else {\n                this.setState({\n                    answer_bounds: {\n                        lower: correct_arr[1],\n                        upper: correct_arr[4],\n                    },\n                    equality_operators: {\n                        lower: correct_arr[0],\n                        upper: correct_arr[3]\n                    },\n                    range: true,\n                    rangeVal: \"range\",\n                })\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    validateAnswers() {\n        let disabled = false;\n\n        if (this.state.custom_labels && this.state.has_correct_answer) {\n            const keys = Object.keys(this.state.fieldsValid);\n            for (const key of keys) {\n                if (!this.state.fieldsValid[key]) disabled = true;\n            }\n        }\n        else {\n            if (this.state.custom_labels) {\n                if (!this.state.fieldsValid.lower_label || !this.state.fieldsValid.upper_label || !this.state.fieldsValid.title) disabled = true;\n            }\n            else {\n                if (this.state.has_correct_answer) {\n                    if (!this.state.fieldsValid.lower_bound || !this.state.fieldsValid.upper_bound || !this.state.fieldsValid.equality_operators) {\n                        disabled = true;\n                    }\n                }\n                else {\n                    if (!this.state.fieldsValid.title) disabled = true;\n                }\n            }\n        }\n       \n        if (!this.state.fieldsValid.title) disabled = true;\n\n        this.setState({ disabled: disabled })\n    }\n    \n    // handles the switch to control setting a correct answer for the question\n    setCorrectAnswer = name => event => {\n\n        if (!event.target.checked) {\n            this.setState({\n                answer_bounds:{upper:\"\", lower:\"\"},\n                equality_operators: {upper:\"\", lower:\"\"}, \n                range: false,\n                rangeVal: \"not_range\", \n            })\n        }\n       \n\n        this.setState({ [name]: event.target.checked },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n    // controls switch to set custom labels for bounds\n    setCustomLabels = name => event => {\n        if (!event.target.checked) {\n            let fieldsValid = this.state.fieldsValid;\n            fieldsValid.lower_label = true;\n            fieldsValid.upper_label = true;\n            this.setState({\n                fieldsValid: fieldsValid,\n                labels: {upper:\"100%\", lower:\"0%\"},\n                custom_labels: false,\n            })\n        }\n        this.setState({ [name]: event.target.checked });\n        this.validateAnswers();\n    };\n\n    // gets opposite of upper_bound/lower_bound vice\n    getOppBound(bound) {\n       if (bound === \"upper_bound\") return \"lower_bound\";\n       return \"upper_bound\";\n    }\n\n    // gets opposite of upper/lower vice\n    getOppSide(side) {\n        if (side === \"upper\") return \"lower\";\n        return \"upper\";\n     }\n\n    isInRange(operator, value) {\n        if (operator.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n\n        if (operator === \"<\") {\n            if (value === \"0\") {\n                return false;\n            }\n        }\n        if (operator === \">\") {\n            if (value === \"100\") return false;\n        }\n        return true;\n    }\n\n    // sets if bounds and operators are valid \n    validateBoundsAndOperators() {\n\n        let allValid = true;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (!this.isInRange(this.state.equality_operators.lower, this.state.answer_bounds.lower)) {\n            fieldsValid.equality_operators = false;\n            fieldsValid.lower_bound = false;\n            allValid = false;\n        }\n\n        if (this.state.range) {\n            if (!this.isInRange(this.state.equality_operators.upper, this.state.answer_bounds.upper)) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.upper_bound = false;\n                allValid = false;\n            }\n\n            if (this.state.answer_bounds.lower === this.state.answer_bounds.upper) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.lower_bound = false;\n                allValid = false;\n            }\n\n            let valid = true;\n            switch(this.state.equality_operators.lower) {\n                case \">\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \">=\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \"<\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                case \"<=\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                default:\n                    valid = true;\n            }\n\n            fieldsValid.equality_operators = valid && fieldsValid.equality_operators;\n\n            if (!valid) allValid = false;\n\n        }\n\n        if (allValid) {\n            fieldsValid = {title: this.state.fieldsValid.title, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true};\n        }\n        else {\n        }\n\n        this.setState({ fieldsValid: fieldsValid },\n            () => { this.validateAnswers() });\n    }\n    \n   \n    // function to handle setting correct answer bounds. prop contains \"lower\" or \"upper\"\n    setCorrectBounds = prop => event => {\n        let answerBounds = this.state.answer_bounds;\n        let val = event.target.value;\n\n        answerBounds[prop] = val;\n\n        if (val < 0) {\n            val = 0;\n        }\n        if (val > 100) {\n            val = 100;\n        }\n\n        if (!Number.isInteger(val)) {\n            val = Math.round(val);\n        }\n        \n    \n        this.setState({ answer_bounds: answerBounds },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    // function to set equality operators\n    handleEqualityOperator = prop => event => {\n\n        let equality_operators = this.state.equality_operators;\n        equality_operators[prop] = event.target.value;\n        this.setState({ equality_operators: equality_operators },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    validateTitle(value) {\n        let error = this.state.titleError;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n           error = \"Required\" ;\n           fieldsValid.title = false;\n        }\n        else {\n            error = \"\";\n            fieldsValid.title = true;\n        }\n            \n        this.setState({ titleError: error, fieldsValid: fieldsValid });\n\n        this.validateAnswers();\n    }\n\n    handleTitleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            title: value,\n        }, () => { this.validateTitle(value) });\n    };\n\n    handleLabelsValidation() {\n        let valid = false;\n        if (this.state.labels.upper.replace(/^\\s+|\\s+$/g, '') !== \"\" && this.state.labels.lower.replace(/^\\s+|\\s+$/g, '') !== \"\") valid  = true;\n\n        let fieldsValid = this.state.fieldsValid;\n        fieldsValid.lower_label = valid;\n        fieldsValid.upper_label = valid;\n        this.setState({ fieldsValid: fieldsValid })\n\n        this.validateAnswers();\n    }\n\n    handleLabelsChange = name => event => {\n        let value = event.target.value;\n        let labels = this.state.labels;\n        labels[name] = event.target.value;\n        this.setState({\n            labels: labels,\n        }, () => { this.handleLabelsValidation(name, value) });\n    };\n\n    handleSliderChange = (event, value) => {\n        this.setState({ slider_value: value });\n      };\n\n    // whether or not to display to inqualities\n    handleSetRange = (e) => {\n        let range = true;\n        if (e.target.value === \"not_range\") {\n            range = false;\n        }\n        this.setState({\n            rangeVal: e.target.value,\n            range: range\n        });\n    };\n\n    // true will be && and false will be ||\n    getOperatorCondition(lower_operator) {\n        \n        let condition = true;\n\n        switch (lower_operator) {\n            case \"<\":\n                condition = \"||\";\n                break;\n            case \"<=\":\n                condition = \"||\";\n                break;\n            case \">\":\n                condition = \"&&\";\n                break;\n            case \">=\":\n                condition = \"&&\";\n                break;\n            default:\n                condition = true;\n        }\n        return condition;\n    }\n\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        // need this check for submitting with enter key\n        if (this.state.disabled) {\n            return;\n        }\n\n        \n        let correct_answer = \"\";\n        if (this.state.answer_bounds.lower !== \"\") {\n            \n            if (this.state.range) {\n                let answerBounds = this.state.answer_bounds;\n                let equalityOperators = this.state.equality_operators;\n                if (Number(answerBounds.lower) > Number(answerBounds.upper)) {\n                    const lower = answerBounds.lower;\n                    answerBounds.lower = answerBounds.upper;\n                    answerBounds.upper = lower;\n                    let equalityOperators = this.state.equality_operators;\n                    const lower_operator = this.state.equality_operators.lower;\n                    equalityOperators.lower = equalityOperators.upper;\n                    equalityOperators.upper = lower_operator;\n                }\n                correct_answer = equalityOperators.lower + \" \" + answerBounds.lower.toString() + \" \" +  this.getOperatorCondition(equalityOperators.lower) + \" \" + equalityOperators.upper + \" \" + answerBounds.upper.toString();\n            }\n            else {\n                correct_answer = this.state.equality_operators.lower + \" \" + this.state.answer_bounds.lower.toString();\n            }\n        }\n\n        if(!this.state.disabled) {\n            this.props.getEdits( \n                new SliderQuestionObj(this.props.questionObj.id, \n                    this.props.questionObj.lecture_id, \"slider\", \n                    this.state.title, this.state.question_image, correct_answer, \n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, \n                    this.props.questionObj.opened_at, this.props.questionObj.closed_at, \n                    this.props.questionObj.created_at, null, null, this.state.labels.lower, this.state.labels.upper))\n        }\n        this.handleClose();\n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                <DialogTitle id=\"alert-dialog-title\">{\"Edit Slider Question\"}</DialogTitle>\n                <DialogContent>\n                <Grid container justify=\"center\" className={this.styles.container}  >\n                    <Grid container direction=\"column\" align-items=\"flex-start\">\n                        <Grid item className={this.styles.entry}>\n                            <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={this.state.titleError !== \"\"}\n                                    id=\"standard-name\"\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleTitleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.titleError}\n                                />\n                            </form>\n                        </Grid>\n\n                        <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                            <Grid item className={this.styles.entry}>\n                                <Typography variant=\"h6\" color=\"textPrimary\">\n                                    Image Preview\n                                </Typography>\n                            </Grid>\n                            <Grid item className={this.styles.entry}>\n                                <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n\n                        <Grid item className={this.styles.entry}>\n                            <Grid container direction=\"row\">\n                                <Grid item className={this.styles.buttonItem}>\n                                    <Button\n                                        variant=\"contained\"\n                                        component=\"label\"\n                                    >\n                                    {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                    <input\n                                        type=\"file\"\n                                        style={{ display: \"none\" }}\n                                        onChange={this.encodeImageFileAsURL}\n                                    />\n                                    </Button>\n                                </Grid>\n\n                                <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                            onClick={this.removeImage}\n                                        >\n                                        Remove Image\n                                        </Button>\n                                    </Grid>\n                                </Collapse>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"column\" justify=\"flex-start\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.custom_labels}\n                                    onChange={this.setCustomLabels('custom_labels')}\n                                    value={this.state.custom_labels}\n                                    />\n                                }\n                                label=\"change/set labels\"\n                            />\n                        </Grid>\n                        \n                        {this.state.custom_labels && \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={24} className={this.styles.entry}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"lower label\"\n                                            value={this.state.labels.lower}\n                                            onChange={this.handleLabelsChange('lower')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"upper label\"\n                                            value={this.state.labels.upper}\n                                            onChange={this.handleLabelsChange('upper')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        }\n                    </Grid>                       \n                    <Grid container direction=\"column\" justify=\"space-evenly\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.has_correct_answer}\n                                    onChange={this.setCorrectAnswer('has_correct_answer')}\n                                    value={this.state.has_correct_answer}\n                                    />\n                                }\n                                label=\"change/set correct answer\"\n                            />\n                        </Grid>\n                        {this.state.has_correct_answer && \n                            <Grid item>\n                                <Grid container direction=\"row\">\n                                    <FormControl component=\"fieldset\">\n                                        <RadioGroup\n                                            name=\"rangeVal\"\n                                            value={this.state.rangeVal}\n                                            onChange={this.handleSetRange}\n                                        >\n                                            <FormControlLabel value={\"not_range\"} name=\"not_range\" control={<Radio />} label={\"inequality/equality\"} />\n                                            <FormControlLabel value={\"range\"} name=\"range\" control={<Radio />} label={\"set range\"} />  \n                                        </RadioGroup>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        }\n                        \n                        {this.state.has_correct_answer && this.state.range ? ( <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry} spacing={16}> \n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.lower}\n                                        onChange={this.handleEqualityOperator('lower')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer lower bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.lower}\n                                        onChange={this.setCorrectBounds('lower')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.upper}\n                                        onChange={this.handleEqualityOperator('upper')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">and/or</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer upper bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.upper}\n                                        onChange={this.setCorrectBounds('upper')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    /> \n                                </Grid>\n                            </Grid>\n                        </Grid>)\n                        : (this.state.has_correct_answer && <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry}>\n                                <Grid item> \n                                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={24}>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                select\n                                                fullWidth\n                                                value={this.state.equality_operators.lower}\n                                                onChange={this.handleEqualityOperator('lower')}\n                                                InputProps={{\n                                                    startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                                }}\n                                                >\n                                                {answerBoundOptions.map(option => (\n                                                    <MenuItem key={option.value} value={option.value}>\n                                                    {option.label}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                fullWidth\n                                                id=\"correct answer lower bound\"\n                                                type=\"number\"\n                                                value={this.state.answer_bounds.lower}\n                                                onChange={this.setCorrectBounds('lower')}\n                                                InputProps={{\n                                                    endAdornment: (\n                                                    <InputAdornment variant=\"filled\" position=\"end\">\n                                                        %\n                                                    </InputAdornment>\n                                                    ),\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                    </Grid>\n                \n            </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                        cancel\n                    </Button>\n                    <Button onClick={this.handleSubmit} color=\"secondary\" disabled={this.state.disabled}>\n                        submit\n                    </Button>\n            </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditSLQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport OpenClosedButton from '../OpenClosedButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { observer } from 'mobx-react';\nimport ViewStatsModalWrapped from '../ViewStatsModal';\nimport EditFRQDialog from '../EditFRQDialog';\nimport EditMCQDialog from '../EditMCQDialog';\nimport EditSLQDialog from '../EditSLQDialog';\n\n\nconst styles = theme => ({\n    open: {\n        marginTop: 5\n    }\n});\n\n@observer\nclass QuestionListItem extends React.Component {\n    state = {\n        selected: false,\n        open: false,\n        editMode: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    componentDidMount() {\n        if (!this.props.profStore.dataLoaded) {\n            this.props.apiProfService.loadData().then(() => {\n                this.props.profStore.dataLoaded = true\n            })\n        }\n        if (this.props.parentLecture !== undefined && this.props.questionObj.id !== undefined) {\n            this.setState({ selected: this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.questionObj.id).is_open })\n        }\n        this.setState({ editMode: this.props.mode === \"editMode\" })\n    }\n    componentDidUpdate(prevProps) {\n        if(prevProps.parentLecture.id !== this.props.parentLecture.id) {\n            this.setState({ selected: this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.questionObj.id).is_open })\n        }\n    }\n\n    handleToUpdate = (selected) => {\n        this.setState({\n            selected\n        })\n    }\n\n\n    render() {\n        return (\n            <ListItem selected={this.state.selected} divider > \n                <ListItemText primary={(this.props.number + 1) + \". \" + this.props.questionObj.question_title} />\n                <ListItemSecondaryAction>\n                    <Grid container direction=\"row\" justify=\"flex-end\">\n                        <Grid item className={this.styles.open}>\n                            {this.props.mode === \"viewingMode\" ? (<OpenClosedButton className={this.styles.open} parentLecture={this.props.parentLecture}\n                                questionId={this.props.questionObj.id} handleListClose={this.props.handleListClose}\n                                handleClick={this.props.handleClick} handleToUpdate={this.handleToUpdate} open={this.props.questionObj.is_open} \n                                recentlyClosedId={this.props.recentlyClosedId} recentlyOpenedId={this.props.recentlyOpenedId} />) \n                                : ( this.props.questionObj.question_type === 'free_text' ? \n                                    (<EditFRQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/>) \n                                    : (this.props.questionObj.question_type === 'multiple_choice' ? \n                                        (<EditMCQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/>) \n                                        : (<EditSLQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/> )) \n                                )\n                            }\n                        </Grid>\n\n                        <Grid item >\n                            <Tooltip title=\"View Stats\" placement=\"top\">\n                                <ViewStatsModalWrapped index={(this.props.number + 1)} question={this.props.questionObj} parentLecture={this.props.parentLecture} />\n                            </Tooltip>\n                        </Grid>\n                    </Grid>\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withStyles(styles)(QuestionListItem)","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    },\n    checkBoxContainer: {\n        height: theme.spacing.unit*4.5,\n        width: theme.spacing.unit*12.5,\n        justify: \"center\"\n    }\n});\n\n@observer\nclass DeleteQuestionsList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delQuestions: [],\n        questions: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.questions  = props.questions\n    }\n    componentDidMount() {\n        let shouldDelete = [];\n        let closed_questions = [];\n        for (let i = 0; i < this.questions.length; i++) {\n            if (!this.questions[i].is_open) closed_questions.push(this.questions[i]); // open questions cannot be deleted\n        }\n        closed_questions.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        }).map((questionObj, index) => \n           shouldDelete.push({\n            id: questionObj.id,\n            checked: false,\n            title: questionObj.question_title\n        }))\n        if (closed_questions !== undefined && closed_questions !== null) {\n            this.setState({\n                questions: closed_questions,\n                delQuestions: shouldDelete\n            })\n        }\n        \n    }\n    // looked up to here\n    handleChange = id =>  event => {\n        // if id in lectures, then we are unchecking; otherwise we need to uncheck\n        this.state.delQuestions.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delQuestions: this.state.delQuestions\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delQuestions);\n    }\n\n\n    render() {\n        return (\n            this.state.questions.length > 0 ? (\n                <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delQuestions\"\n                    value={this.state.delQuestions}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delQuestions.map((q, index) => {\n                                return (\n                                    <ListItem divider key={index} >\n                                        <ListItemText primary={(index + 1).toString() + \". \" +q.title}/>\n                                        <div className={this.styles.checkBoxContainer}>\n                                            <ListItemSecondaryAction>\n                                                <FormControlLabel key={index} control={\n                                                        <Checkbox className={this.styles.checkBox} key={q.id} checked={q.checked} onChange={this.handleChange(q.id)} value={q.id} />\n                                                    }/>\n                                            </ListItemSecondaryAction>\n                                        </div> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n            ) : (\n                <Typography variant=\"body1\" > It looks like all your questions are open... Please close questions you would like to delete. </Typography>\n            )\n            \n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteQuestionsList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport AddQuestionModalWrapped from '../AddQuestionModal';\nimport QuestionListItem from '../QuestionListItem';\nimport PropTypes from 'prop-types';\n// import EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteQuestionsList from '../DeleteQuestionsList';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LectureObj from '../../models/LectureObj';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    startLectureBtn: {\n        float: \"right\"\n    },\n    title: {\n        margin: theme.spacing.unit,\n    },\n});\n\n@observer\nclass AllQuestionsFrame extends React.Component {\n    state = {\n        toNewQuestion: false,\n        deleteMode: false,\n        editMode: false,\n        mode: \"viewingMode\",\n        deletions: [],\n        delTitles: [],\n        open: false,\n        parentLecture: new LectureObj(),\n        lectureTitle: \"\",\n        questions: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.parentLectureId = props.parentLectureId\n    }\n\n    componentDidMount() {\n        console.log(\"mounting\")\n         if (!this.profStore.dataLoaded) {\n             this.apiProfService.loadData().then(() => {\n                 console.log(\"loading data\")\n                 this.profStore.dataLoaded = true\n                 const lecture = this.profStore.getLectureWithId(this.parentLectureId);\n                 if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: lecture,\n                        questions: lecture.questions,\n                        lectureTitle: lecture.title\n                    })\n                 }\n                })\n            } else {\n            const lecture = this.profStore.getLectureWithId(this.parentLectureId);\n            if (lecture !== undefined) {\n                this.setState({\n                    parentLecture: lecture,\n                    questions: lecture.questions,\n                    lectureTitle: lecture.title\n                })\n             }\n         }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextLecture = nextProps.profStore.getLectureWithId(nextProps.parentLectureId);\n        if (nextLecture.questions.length === this.state.questions.length || nextLecture.id !== this.state.parentLecture.id) {\n            this.setState({\n                parentLecture: nextLecture,\n                questions: nextLecture.questions,\n                lectureTitle: nextLecture.title\n            })\n        }\n    }\n\n    \n    \n\n    handleNewQuestionClick = () => {\n        this.setState(() => ({\n            toNewQuestion: true\n        }))\n    }\n\n    handleDeleteQuestions = () => {  \n        this.props.disableTopButton()\n        this.setState({ mode: \"deleteMode\", deleteMode: true, editMode: false }); \n    }\n\n    handleEditQuestions = () => {\n        this.props.disableTopButton()\n        this.setState({ mode: \"editMode\", deleteMode: false, editMode: true });\n    }\n\n    handleRestoreMode = () => {\n        this.props.restoreTopButton()\n        this.setState({ mode: \"viewingMode\", deleteMode: false, editMode: false });\n    }\n\n    // gets course edits from child\n    getEdits = (question) => {\n        this.props.apiProfService.editQuestion(question);\n        this.props.mcqEditDetect();\n    }\n\n     // gets questions to be deleted from child component\n     getDeletions = (delQuestions) => {\n        this.setState({\n            deletions: delQuestions\n        })\n    }\n\n    handleDelete = () => {\n        if (this.state.deletions.length === 0) {\n            this.handleRestoreMode();\n        }\n        else {\n            const qArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    qArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (qArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: qArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n\n    }\n\n    handleClose = () => {\n        this.setState({\n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleDeletion = () => {\n\n        this.props.handleFinalDeletion(this.state.delIds);\n        this.handleClose();\n        this.handleRestoreMode();\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewQuestion === true) {\n            return <Redirect to='/professor/TODO' push />\n        }\n\n        return (\n            <Card className={this.styles.card}>\n                <CardContent>\n                    {console.log(this.state.parentLecture)}\n                    <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                        <Grid item>\n                            <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\">\n                                Questions for {this.state.lectureTitle}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-end\">\n                                <Grid item>\n                                    {this.state.editMode ? (\n                                    <Tooltip title={\"Done Editing\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleRestoreMode}>\n                                            <DoneIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    ) : (\n                                    <Tooltip title={\"Edit Questions\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleEditQuestions} component=\"div\" disabled={this.state.mode === \"deleteMode\" || this.state.questions.length === 0}>  \n                                            <EditIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    )}    \n                                </Grid>\n                                <Grid item>\n                                {this.state.deleteMode ? (\n                                    <Tooltip title={\"Done Deleting\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                            <DoneIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    ) : (\n                                    <Tooltip title={\"Delete Questions\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleDeleteQuestions} component=\"div\" disabled={this.state.mode === \"editMode\" || this.state.questions.length === 0}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    )}\n                                </Grid>\n                                <Grid item>\n                                    <AddQuestionModalWrapped lectureId={this.state.parentLecture.id} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    {this.state.deleteMode ? \n                    (<DeleteQuestionsList questions={this.state.questions} getDeletions={this.getDeletions}/>)\n                    : \n                    (<List component=\"nav\">\n                        {this.state.questions.slice().sort(function (a, b) {\n                            if (a.created_at < b.created_at) {\n                                return -1;\n                            }\n                            if (a.created_at > b.created_at) {\n                                return 1;\n                            }\n                            // a must be equal to b\n                            return 0;\n                        }).map((questionObj, index) => {\n                            return (<QuestionListItem number={index} mode={this.state.mode} getEdits={this.getEdits} handleListClose={this.props.handleListClose} recentlyOpenedId={this.props.recentlyOpenedId} profStore={this.profStore} handleClick={this.props.handleClick} parentLectureId={this.state.parentLecture.id} parentLecture={this.state.parentLecture} questionObj={questionObj} key={index} recentlyClosedId={this.props.recentlyClosedId} />\n                            )\n                        })}\n                    </List>)\n                    }\n                </CardContent>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following question(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) =>\n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            No\n                        </Button>\n                        <Button onClick={this.handleDeletion} color=\"secondary\">\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Card>\n        );\n    }\n}\n\nAllQuestionsFrame.propTypes = {\n    parentLecture: PropTypes.object\n};\n\nexport default withStyles(styles)(AllQuestionsFrame);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport Paper from '@material-ui/core/Paper';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport Typography from '@material-ui/core/Typography';\nimport AllQuestionsFrame from '../../../components/AllQuestionsFrame';\nimport MCQuestionStats from '../../../components/MCQuestionStats';\nimport FreeTextStats from '../../../components/FreeTextStats';\nimport SliderStats from '../../../components/SliderStats';\n\n\nconst socket = socketIOClient(socketioURL)\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    grid: {\n        paddingTop: theme.spacing.unit * 2,\n    },\n    text: {\n        color: '#ffffff'\n    },\n    textQ: {\n        color: '#ffffff',\n        paddingTop: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 10,\n        paddingLeft: theme.spacing.unit * 10,\n        paddingBottom: theme.spacing.unit * 2\n    },\n    startLectureBtn: {\n        float: \"right\"\n    },\n    showCodeBtn: {\n        float: \"left\"\n    }\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorViewQuestions extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.lectureId = null\n        this.state = {\n            currentQuestionIndex: 0,\n            currentQuestionId: 0,\n            openQuestionId: 0,\n            recentlyClosedId: 0,\n            recentlyOpenedId: 0,\n            btnStatus: 0,\n            parentLecture: { questions: [], title: \"\" },\n            editDeleteMode: false,\n            updateMCQStats: false,\n        }\n        this.profStore = props.profStore\n        this.apiProfService = props.apiService\n    }\n\n    componentDidMount() {\n        // Get the lecture\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                const lecture = this.profStore.getLectureWithId(lectureId)\n                if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: this.profStore.getLectureWithId(lectureId)\n                    })\n                    this.setState({\n                        currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                    })\n                }\n            })\n        } else {\n            const { lectureId } = this.props.match.params\n            this.lectureId = lectureId\n            const lecture = this.profStore.getLectureWithId(lectureId)\n            if (lecture !== undefined) {\n                this.setState({\n                    parentLecture: this.profStore.getLectureWithId(lectureId)\n                })\n                this.setState({\n                    currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                })\n            }\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.match.params.lectureId !== this.state.parentLecture.id) {\n\n            if (this.state.parentLecture.questions.length > 0) {\n                this.apiProfService.closeAllQuestions(this.state.parentLecture.id);\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                this.setState({\n                    parentLecture: this.profStore.getLectureWithId(lectureId),\n                    currentQuestionIndex: 0,\n                    currentQuestionId: this.convertQuestionIndexToId(0),\n                    openQuestionId: 0,\n                    recentlyClosedId: 0,\n                    recentlyOpenedId: 0,\n                    btnStatus: 0,\n                    editDeleteMode: false,\n                    updateMCQStats: false,\n                })\n            }\n            else {\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                const lecture = this.profStore.getLectureWithId(lectureId)\n                if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: this.profStore.getLectureWithId(lectureId)\n                    })\n                    this.setState({\n                        currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                    })\n                }\n            }\n                \n            \n        }\n        if (this.state.currentQuestionId !== this.convertQuestionIndexToId(this.state.currentQuestionIndex)) {\n            this.setState({\n                currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n            })\n        }     \n    }\n\n    componentWillUnmount() {\n        // close all questions in this lecture\n        this.apiProfService.closeAllQuestions(this.lectureId)\n    }\n\n    mcqStatsUpdated = () => {\n        this.setState({ updateMCQStats: false })\n    }\n    mcqEditDetect = () => {\n        this.setState({ updateMCQStats: true })\n    }\n\n    disableTopButton = () => {\n        this.setState({ editDeleteMode: true })\n    }\n\n    restoreTopButton = () => {\n        this.setState({ editDeleteMode: false });\n    }\n    handleFinalDeletion = (delIds) => {\n\n        for (let i = 0; i < delIds.length; i++) {\n            var question = this.state.parentLecture.questions.find(q => q.id === delIds[i]);\n            if (question && question.is_open) {\n                this.apiProfService.closeQuestion(delIds[i], this.state.parentLecture.id);\n                this.handleListClickClose(delIds[i]);\n            }\n        }\n        this.apiProfService.deleteQuestions(delIds, this.state.parentLecture.id);\n        this.setState({\n            parentLecture: this.profStore.getLectureWithId(this.props.match.params)\n        })\n    };\n\n\n    handleBtnClick = () => {\n        switch (this.state.btnStatus) {\n            case 0:\n                if (!this.profStore.getQuestionWithId(this.state.parentLecture, this.convertQuestionIndexToId(this.state.currentQuestionIndex)).is_open) {\n                    // Handle the \"Open Question\"\n                    this.setState({ recentlyOpenedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), recentlyClosedId: 0 })\n                    this.apiProfService.openQuestion(this.convertQuestionIndexToId(this.state.currentQuestionIndex), this.state.parentLecture.id)\n                    socket.emit('subscribe professor', this.convertQuestionIndexToId(this.state.currentQuestionIndex))\n                    this.setState({ btnStatus: 1,  openQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex) })\n                }\n                break;\n\n            case 1:\n                // Handle the \"Close Question\"\n                this.apiProfService.closeQuestion(this.state.currentQuestionId, this.state.parentLecture.id)\n                this.setState({ recentlyClosedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), recentlyOpenedId: 0})\n                // Check if this is last question\n                if (this.state.currentQuestionIndex + 1 >= this.state.parentLecture.questions.length) {\n                    \n                    this.setState({ btnStatus: 3, openQuestionId: 0 })\n                }   \n                else{\n                   \n                    this.setState({ btnStatus: 2, openQuestionId: 0 })\n                }\n                break;\n\n            case 2:\n                // Handle the \"Open Next Question\"\n                this.apiProfService.openQuestion(this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1), this.state.parentLecture.id)\n                socket.emit('subscribe professor', this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1))\n                this.setState({ recentlyOpenedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1), recentlyClosedId: 0 })\n                \n                // Update the index to the next question\n                \n                this.setState({\n                    btnStatus: 1,\n                    currentQuestionIndex: this.state.currentQuestionIndex + 1,\n                    currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1),\n                    openQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1)\n                })\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handleListClick = (question_id) => {\n        // Update the index to the next question\n        \n        this.setState({\n            btnStatus: 1,\n            currentQuestionIndex: this.convertQuestionIdToIndex(question_id),\n            currentQuestionId: question_id,\n            openQuestionId: question_id\n        })\n    }\n    \n    handleListClickClose = (question_id) => {\n        // Update the index to the next question\n        if (this.state.currentQuestionIndex + 1 >= this.state.parentLecture.questions.length) {\n            \n            this.setState({ btnStatus: 3, openQuestionId: 0, recentlyOpenedId: 0 })\n        }\n        else{\n            \n            this.setState({\n                btnStatus: 2,\n                openQuestionId: 0,\n                recentlyOpenedId: 0\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.root} elevation={1}>\n                    <Typography variant=\"h6\" component=\"h6\" className={this.styles.text}>\n                        {this.state.parentLecture.title} on {this.state.parentLecture.date}\n                    </Typography>\n                    <Collapse in={this.state.parentLecture.scheduled}>\n                        <Typography variant=\"h6\" component=\"h6\" className={this.styles.text} align=\"right\">\n                            Questions available from {this.state.parentLecture.open_date} to {this.state.parentLecture.close_date}\n                        </Typography>\n                    </Collapse>\n                    <Typography variant=\"h4\" component=\"h4\" className={this.styles.textQ} align=\"center\">\n                        Q{this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1}: {this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_title}\n                    </Typography>\n                    <Collapse in={this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_image}>\n                        <Grid item align=\"center\">\n                            <img src={this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_image} alt=\"Preview Unavailable\" height={300}></img>\n                        </Grid>\n                    </Collapse>\n                    <Collapse in={!this.state.parentLecture.scheduled}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleBtnClick()} className={this.styles.startLectureBtn} disabled={this.state.btnStatus === 3 || this.state.parentLecture.questions.length === 0 || this.state.editDeleteMode }>\n                            {this.state.btnStatus === 0 ? \"Open Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1) :\n                                this.state.btnStatus === 1 ? \"Close Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1) :\n                                    this.state.btnStatus === 2 ? \"Open Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 2) :\n                                        \"No More Questions\"}\n                        </Button>\n                    </Collapse>\n                </Paper>\n                \n                <Grid container spacing={24} className={this.styles.grid}>\n                    <Grid item xs={12} md={8}>\n                        <AllQuestionsFrame handleListClose={this.handleListClickClose} handleClick={this.handleListClick} profStore={this.profStore}  \n                        apiProfService={this.apiProfService} parentLecture={this.state.parentLecture} parentLectureId={this.props.match.params.lectureId} \n                        handleFinalDeletion={this.handleFinalDeletion} recentlyClosedId={this.state.recentlyClosedId} recentlyOpenedId={this.state.recentlyOpenedId} \n                        selectedQuestionId={this.state.openQuestionId} disableTopButton={this.disableTopButton} restoreTopButton={this.restoreTopButton} mcqEditDetect={this.mcqEditDetect}/>\n                    </Grid>\n                    <Grid item xs={12} sm={9} md={4}>\n                        <List>\n                            {this.state.parentLecture.questions.map((questionObj, index) => {\n                                if (questionObj.question_type === \"multiple_choice\")\n                                return (<MCQuestionStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} updateMCQStats={this.state.updateMCQStats} mcqStatsUpdated={this.mcqStatsUpdated} />)\n                                else if (questionObj.question_type === \"free_text\")\n                                return (<FreeTextStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} />)\n                                else if (questionObj.question_type === \"slider\")\n                                return (<SliderStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} />)\n                                \n                                // Something went wrong\n                                return (null)\n                            })}\n                        </List>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n    \n    getSortedQuestionsCopy() {\n        return this.profStore.getLectureWithId(this.props.match.params.lectureId).questions.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n\n    convertQuestionIndexToId(index) {\n        if (index < this.profStore.getLectureWithId(this.props.match.params.lectureId).questions.length) {\n            var sortedQuestionsCopy = this.getSortedQuestionsCopy();\n            return sortedQuestionsCopy[index].id;\n        }\n\n        else {\n            return 0;\n        }\n\n    }\n\n    convertQuestionIdToIndex(question_id) {\n        var sortedQuestionsCopy = this.getSortedQuestionsCopy();\n        for (var i = 0; i < sortedQuestionsCopy.length; i++) {\n            if (sortedQuestionsCopy[i].id === question_id)\n                return i;\n        }\n        return 0;\n    }\n\n}\n\nexport default withStyles(styles)(ProfessorViewQuestions);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { MultipleChoiceQuestionObj } from '../../../models/QuestionObj';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit*60,\n    },\n    select: {\n        width: theme.spacing.unit*60\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit*4\n    },\n    buttonContainer: {\n        paddingTop: theme.spacing.unit*2,\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 12,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\nfunction answersValid(new_options) {\n    if (new_options.length === 0) return false;\n    for (const option of new_options) {\n        for (const val of Object.values(option)) {\n            if (val.replace(/^\\s+|\\s+$/g, '') === \"\") return false; \n        }     \n    }\n    return true;\n}\n\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddMCQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        correct_answer: '',\n        number_of_options: \"\",\n        question_image_string: \"\",\n        options: [], // necessary because of controlled form\n        answer_choices: {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"}, // must be set for input base to be controlled\n        checked: {option1: false, option2: false, option3: false, option4: false, option5: false},\n        should_delete: {option1:false, option2:false, option3:false, option4:false, option5:false},\n        titleError: \"\",\n        formValid: false,\n        titleValid: true,\n        hasAnswers: false,\n        optionsValid: false,\n        delete_mode: false,\n        deleteDisabled: false,\n        deleteConfirmDisabled: false,\n        uploading: false,\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    setAnswerObject(num_options) {\n        let answer_choices = {};\n        for (let i = 1; i <= num_options; i++) {\n            let option_string = \"option\" + i.toString();\n            answer_choices[option_string] = \"\";\n        }\n        return answer_choices;\n    }\n    setCheckedObject(num_options) {\n        let checked = {};\n        for (let i = 1; i <= num_options; i++) {\n            let option_string = \"option\" + i.toString();\n            checked[option_string] = false;\n        }\n        return checked;\n    }\n    handleDelete() {\n\n        let answer_choices = this.state.answer_choices;\n        let number_of_options = this.state.number_of_options;\n        let options = [];\n        let correct_answer = \"\";\n        let checked = {option1: false, option2: false, option3: false, option4: false, option5: false};\n\n        for (const k of Object.keys(this.state.should_delete)) {\n            if (this.state.should_delete[k]) {\n                number_of_options--;\n            }\n        }\n\n        // abort if less than two options remain, but button disabling should prevent this anyway\n        if (number_of_options < 2) {\n            this.setState({\n                should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n                delete_mode: false,\n            })\n            return;\n        }\n\n        let index = 1;\n        for (const k of Object.keys(answer_choices)) {\n            if (!this.state.should_delete[k]) {\n                let option_string = \"option\" + index.toString();\n                options.push({ [option_string]: answer_choices[k] });\n                if (k === this.state.correct_answer) correct_answer = option_string;\n                index++;\n                if (index > number_of_options) {\n                    break;\n                }\n            }\n        }\n\n        answer_choices = {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"};\n        // this is not the nicest way to do this, but it's functional, and I couldn't find my bug in my nicer code\n        options.map(option => answer_choices[Object.keys(option)[0]] = Object.values(option)[0]);\n\n        if (correct_answer !== \"\") checked[correct_answer] = true;\n\n        this.setState({\n            should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n            answer_choices: answer_choices,\n            correct_answer: correct_answer,\n            checked: checked,\n            number_of_options: number_of_options,\n            delete_mode: false,\n            options: options,\n            deleteDisabled: number_of_options <= 2,\n        }, () => { this.validateFields('answer_choices', options) });\n       \n    }\n\n    validateFields(name, value) {\n        let titleValid = this.state.titleValid;\n        let errors = this.state.errors;\n        let has_answers = this.state.hasAnswers\n        let optionsValid = this.state.optionsValid;\n        let titleError = this.state.titleError;\n\n        switch(name) {\n            case \"title\":\n                if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n                    titleError = \"This field is required\";\n                    titleValid = false;\n                }\n                else {\n                    titleError = '';\n                    titleValid = true;\n                }\n                break;\n            case \"number_of_options\":\n                has_answers = true;\n                optionsValid = answersValid(value);\n                break;\n            case \"answer_choices\":\n                optionsValid = answersValid(value);\n                break;\n            default:\n        }\n       \n        this.setState({ errors: errors, \n                        titleValid: titleValid, \n                        titleError: titleError,\n                        hasAnswers: has_answers,\n                        optionsValid: optionsValid,\n         }, this.validateForm);\n\n    }\n    \n    validateForm() {\n        const titleValid = this.state.title !== \"\";\n        if (!titleValid) {\n            this.setState({ titleValid: false })\n        }\n        this.setState({ formValid: titleValid && this.state.hasAnswers && this.state.optionsValid });\n    }\n\n\n    handleOption = option => event => {\n        const key = Object.keys(option)[0];\n        let answer_choices = this.state.answer_choices;\n        let options = this.state.options;\n        answer_choices[key] = event.target.value;\n        options.find(x => Object.keys(x)[0] === key)[key] = event.target.value\n        this.setState({\n            answer_choices: answer_choices,\n            options: options,\n        }, () => { this.validateFields('answer_choices', options) });\n    }\n    \n    handleSetNumberOfOptions = name => event => {\n        let options = [];\n        let answer_choices = this.state.answer_choices;\n        let deleteDisabled = event.target.value <= 2;\n\n        for (let i = 1; i <= event.target.value; i++) {\n            let option_string = \"option\" + i.toString();\n            options.push({ [option_string]: this.state.answer_choices[option_string] })\n        }\n        if (event.target.value < this.state.number_of_options) {\n            for (let i = event.target.value + 1; i <=5; i++) {\n                let option_string = \"option\" + i.toString();\n                answer_choices[option_string] = \"\";\n            }\n        }\n\n        this.setState({\n            answer_choices: answer_choices,\n            number_of_options: event.target.value,\n            options: options,\n            deleteDisabled: deleteDisabled,\n        }, () => { this.validateFields(name, options)});\n\n    }\n\n    handleDeleteQueue = name => event => {\n        let should_delete = this.state.should_delete;\n        if (event.target.checked) {\n            should_delete[name] = true;\n        }\n        else {\n            should_delete[name] = false;\n        }\n\n        // compute if confirm button should be disabled\n        let numRemainingOptions = 0;\n        for (const k of Object.keys(should_delete)) {\n            if (!should_delete[k]) {\n                numRemainingOptions++;\n            }\n        }\n        \n        // adjust for the \"invisible\" options which have been counted as well\n        numRemainingOptions -= (5 - this.state.number_of_options);\n\n        this.setState({\n            should_delete: should_delete,\n            deleteConfirmDisabled: numRemainingOptions < 2,\n        })\n    }\n\n    handleCheck = option => event => {\n        const key = Object.keys(option)[0];\n        let checked = this.state.checked;\n        let correct_answer = key;\n        checked[key] = event.target.checked;\n\n        if (this.state.correct_answer === key) {\n            checked[key] = false;\n            correct_answer = \"\";\n        }\n    \n        this.setState({\n            correct_answer: correct_answer,\n            checked: checked\n        })\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.validateFields(name, value) });\n    };\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.formValid) {\n            const { lectureId } = this.props.match.params\n\n            // EMRE: What is this?? lol\n            let correct_answer = \"\";\n            if (this.state.correct_answer !== \"\" && this.state.correct_answer !== null) {\n                correct_answer = this.state.correct_answer.substring(6, 7);\n            }\n            \n            // Send course to API\n            this.props.apiService.addQuestion(\n                new MultipleChoiceQuestionObj(null,\n                    lectureId, \"multiple_choice\",\n                    this.state.title, this.state.question_image_string, this.state.correct_answer,\n                    null, null, null, null, null, null, null,\n                    this.state.answer_choices.option1, this.state.answer_choices.option2, this.state.answer_choices.option3, this.state.answer_choices.option4, this.state.answer_choices.option5,\n                    this.state.number_of_options)\n            )\n    \n            this.setState({ toQuestions: true });\n        }\n\n    }\n    setDeleteMode() {\n        const delete_mode = !this.state.delete_mode;\n        this.setState({ delete_mode: delete_mode });\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n        \n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <Grid container direction=\"column\" justify=\"center\" className={this.styles.paper}>\n                <Grid item className={this.styles.item} >\n                    <Typography variant=\"h3\" color=\"textPrimary\">\n                        Add New Question:\n                    </Typography>\n                </Grid>\n                <Grid item className={this.styles.item}>\n                    <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                        <TextField\n                            fullWidth\n                            required\n                            error={!this.state.titleValid}\n                            id=\"standard-name\"\n                            label=\"Question Title\"\n                            value={this.state.title}\n                            onChange={this.handleChange('title')}\n                            margin=\"normal\"\n                            helperText={this.state.titleError}\n                        />\n                    </form>\n                </Grid>\n                <Grid item className={this.styles.item}>\n                    <form autoComplete=\"off\">\n                        <FormControl>\n                            <InputLabel htmlFor=\"number-options\">number of answer choices</InputLabel>\n                            <Select\n                                value={this.state.number_of_options}\n                                onChange={this.handleSetNumberOfOptions('number_of_options')}\n                                className={this.styles.select}\n                                disabled={this.state.delete_mode}\n                                inputProps={{\n                                name: 'number_of_options',\n                                id: 'number-options',\n                                }}\n                            >\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </form>\n                </Grid>\n\n                {this.state.hasAnswers && \n                    <Grid item>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    {this.state.delete_mode ? \n                                        <TableCell> Delete?</TableCell>\n                                        :\n                                        <TableCell>Correct Answer?</TableCell>\n                                    }\n                                    <TableCell>Answer Choices</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {this.state.delete_mode ? \n                               this.state.options.map((option, index) => \n                                    <TableRow key={index}> \n                                        <TableCell>\n                                            <Checkbox\n                                                checked={this.state.should_delete[Object.keys(option)[0]]}\n                                                onChange={this.handleDeleteQueue(Object.keys(option)[0])}\n                                                value={Object.keys(option)[0]}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Typography variant=\"body1\" align=\"justify\"> {this.state.answer_choices[Object.keys(option)[0]]}</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                                :\n                                this.state.options.map((option, index) => \n                                    <TableRow key={index}>\n                                        <TableCell>\n                                            <Checkbox\n                                                checked={this.state.correct_answer === Object.keys(option)[0]}\n                                                onChange={this.handleCheck(option)}\n                                                value={Object.keys(option)[0]}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <FormControl>\n                                                <InputBase\n                                                multiline\n                                                id=\"bootstrap-input\"\n                                                name={Object.keys(option)[0]}\n                                                value={this.state.answer_choices[Object.keys(option)[0]]}\n                                                onChange={this.handleOption(option)}\n                                                classes={{\n                                                    input: this.styles.bootstrapInput\n                                                }}\n                                                />\n                                            </FormControl>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            }\n\n                            </TableBody>\n                        </Table>    \n                    \n                                    \n                        <Grid container direction=\"row\" justify=\"flex-end\">\n                                {!this.state.delete_mode ? \n\n                                <IconButton onClick={this.setDeleteMode.bind(this)} color=\"secondary\" disabled={this.state.deleteDisabled}>\n                                    <DeleteIcon />\n                                </IconButton>\n\n                                :\n                                \n                                <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} disabled={this.state.deleteConfirmDisabled}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                </IconButton>\n                         \n                                }     \n                        </Grid>\n                            \n                    </Grid>\n                }\n                \n                <Grid item className={this.styles.item}>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >\n                    Upload Image\n                    <input\n                        type=\"file\"\n                        style={{ display: \"none\" }}\n                        onChange={this.encodeImageFileAsURL}\n                    />\n                    </Button>\n                </Grid>\n\n                <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                    <Typography variant=\"h6\" color=\"textPrimary\">\n                        Image Preview\n                    </Typography>\n                    <Grid item className={this.styles.item}>\n                        <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                    </Grid>\n                </Collapse>\n\n                <Grid item className={this.styles.item}>\n                    <Grid container direction=\"row\" className={this.styles.buttonContainer}>\n                        <form>\n                            <Button\n                                type=\"submit\"\n                                disabled={!this.state.formValid}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={this.handleSubmit}>\n                                    Submit\n                            </Button>\n                        </form>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddMCQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { FreeTextQuestionObj } from '../../../models/QuestionObj';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddFreeTextQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        correct_answer: '',\n        error: '',\n        titleValid: false,\n        correct_answer_valid: true,\n        question_image_string: ''\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    handleValidation(name, value) {\n        switch(name) {\n            case \"title\":\n                if (this.state.title.replace(/^\\s+|\\s+$/g, '') === '') {\n                    this.setState({\n                        error: \"This field is required\",\n                        titleValid: false,\n                    })\n                } else {\n                    this.setState({\n                        error: \"\",\n                        titleValid: true,\n                    });\n                }\n                break;\n            case \"correct_answer\":\n                if (this.state.correct_answer !== \"\") {\n                    if (this.state.correct_answer.replace(/^\\s+|\\s+$/g, '') === '') {\n                        this.setState({ correct_answer_valid: false })\n                    }\n                    else {\n                        this.setState({ correct_answer_valid: true })\n                    }\n                }\n                else {\n                    if (!this.state.correct_answer_valid) this.setState({ correct_answer_valid: true })\n                }\n                break;\n            default:\n        }\n        \n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.handleValidation(name, value) });\n    };\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        if(this.state.titleValid) {\n            const { lectureId } = this.props.match.params\n    \n            // Send course to API\n            this.props.apiService.addQuestion(\n                new FreeTextQuestionObj(null, lectureId, \"free_text\", this.state.title, this.state.question_image_string, this.state.correct_answer, null, null, null, null, null, null, null, '')\n            )\n    \n            this.setState({ toQuestions: true });\n        }\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n\n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Question:\n                </Typography>\n\n                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                    <Grid container direction=\"column\">\n                        <TextField\n                            required\n                            error={!this.state.titleValid && !(this.state.error === \"\")}\n                            label=\"Question Title\"\n                            className={this.styles.textField}\n                            value={this.state.title}\n                            onChange={this.handleChange('title')}\n                            margin=\"normal\"\n                            helperText={this.state.error}\n                        />\n                        \n                        <TextField\n                            label=\"Correct Answer\"\n                            className={this.styles.textField}\n                            value={this.state.correct_answer}\n                            onChange={this.handleChange('correct_answer')}\n                            margin=\"normal\"\n                        />\n\n                        <Grid item className={this.styles.item}>\n                            <Button\n                                variant=\"contained\"\n                                component=\"label\"\n                            >\n                            Upload Image\n                            <input\n                                type=\"file\"\n                                style={{ display: \"none\" }}\n                                onChange={this.encodeImageFileAsURL}\n                            />\n                            </Button>\n                        </Grid>\n\n                        <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                            <Grid item className={this.styles.item}>\n                                <Typography variant=\"h6\" color=\"textPrimary\">\n                                    Image Preview\n                                </Typography>\n                            </Grid>\n\n                            <Grid item className={this.styles.item}>\n                                <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n\n                        <Grid item className={this.styles.item}>\n                            <Button\n                                type=\"submit\"\n                                disabled={!this.state.titleValid || !this.state.correct_answer_valid}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={this.handleSubmit}>\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddFreeTextQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Collapse from '@material-ui/core/Collapse';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { SliderQuestionObj } from '../../../models/QuestionObj';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Slider from '@material-ui/lab/Slider';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        marginRight: theme.spacing.unit*2.5,\n        width: 45\n    },\n    percentText: {\n        color: \"white\",\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"0.75em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n    },\n    entry: {\n        maxWidth: 500\n    },\n    titleContainer: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit*2\n    },\n    slidercontainer: {\n        paddingRight: theme.spacing.unit*2\n    },\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        flexWrap: 'wrap',\n    },\n    button: {\n        paddingTop: theme.spacing.unit*3,\n    },\n    andor: {\n        padding: theme.spacing.unit,\n        width: \"15%\"\n    },\n});\n\nconst answerBoundOptions = [\n    {\n      value: '=',\n      label: '=',\n    },\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n  const answerBoundOptionsRange = [\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddSliderQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        titleError: \"\",\n        correct_answer: '', // will be sent as statement such as = 5 or >2 && < 100\n        labels: {lower:\"0%\", upper:\"100%\"}, // labels on slider\n        answer_bounds: {upper:\"\", lower:\"\"}, \n        range: false, // whether or not correct answer has a range\n        rangeVal: \"not_range\", // added for radio group purposes\n        equality_operators: {upper:\"\", lower:\"\"},\n        slider_value: 50,\n        has_correct_answer: false,\n        custom_labels: false,\n        question_image_string: \"\",\n        fieldsValid: {title: false, lower_label:false, upper_label:false, lower_bound:false, upper_bound: false, equality_operators: false},\n        disabled: true\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    validateAnswers() {\n        let disabled = false;\n\n        if (this.state.custom_labels && this.state.has_correct_answer) {\n            const keys = Object.keys(this.state.fieldsValid);\n            for (const key of keys) {\n                if (!this.state.fieldsValid[key]) disabled = true;\n            }\n        }\n        else {\n            if (this.state.custom_labels) {\n                if (!this.state.fieldsValid.lower_label || !this.state.fieldsValid.upper_label || !this.state.fieldsValid.title) disabled = true;\n            }\n            else {\n                if (this.state.has_correct_answer) {\n                    if (!this.state.fieldsValid.lower_bound || !this.state.fieldsValid.upper_bound || !this.state.fieldsValid.equality_operators) {\n                        disabled = true;\n                    }\n                }\n                else {\n                    if (!this.state.fieldsValid.title) disabled = true;\n                }\n            }\n        }\n       \n        if (!this.state.fieldsValid.title) disabled = true;\n\n        this.setState({ disabled: disabled })\n    }\n    \n    // handles the switch to control setting a correct answer for the question\n    setCorrectAnswer = name => event => {\n\n        if (!event.target.checked) {\n            this.setState({\n                answer_bounds:{upper:\"\", lower:\"\"},\n                equality_operators: {upper:\"\", lower:\"\"}, \n                range: false,\n                rangeVal: \"not_range\", \n            })\n        }\n       \n\n        this.setState({ [name]: event.target.checked },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n    // controls switch to set custom labels for bounds\n    setCustomLabels = name => event => {\n        if (!event.target.checked) {\n            let fieldsValid = this.state.fieldsValid;\n            fieldsValid.lower_label = true;\n            fieldsValid.upper_label = true;\n            this.setState({\n                fieldsValid: fieldsValid,\n                labels: {upper:\"100%\", lower:\"0%\"},\n                custom_labels: false,\n            })\n        }\n        this.setState({ [name]: event.target.checked });\n        this.validateAnswers();\n    };\n\n    // gets opposite of upper_bound/lower_bound vice\n    getOppBound(bound) {\n       if (bound === \"upper_bound\") return \"lower_bound\";\n       return \"upper_bound\";\n    }\n\n    // gets opposite of upper/lower vice\n    getOppSide(side) {\n        if (side === \"upper\") return \"lower\";\n        return \"upper\";\n     }\n\n    isInRange(operator, value) {\n        if (operator.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n\n        if (operator === \"<\") {\n            if (value === \"0\") {\n                return false;\n            }\n        }\n        if (operator === \">\") {\n            if (value === \"100\") return false;\n        }\n        return true;\n    }\n\n    // sets if bounds and operators are valid \n    validateBoundsAndOperators() {\n\n        let allValid = true;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (!this.isInRange(this.state.equality_operators.lower, this.state.answer_bounds.lower)) {\n            fieldsValid.equality_operators = false;\n            fieldsValid.lower_bound = false;\n            allValid = false;\n        }\n\n        if (this.state.range) {\n            if (!this.isInRange(this.state.equality_operators.upper, this.state.answer_bounds.upper)) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.upper_bound = false;\n                allValid = false;\n            }\n\n            if (this.state.answer_bounds.lower === this.state.answer_bounds.upper) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.lower_bound = false;\n                allValid = false;\n            }\n\n            let valid = true;\n            switch(this.state.equality_operators.lower) {\n                case \">\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \">=\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \"<\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                case \"<=\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                default:\n                    valid = true;\n            }\n\n            fieldsValid.equality_operators = valid && fieldsValid.equality_operators;\n\n            if (!valid) allValid = false;\n\n        }\n\n        if (allValid) {\n            fieldsValid = {title: this.state.fieldsValid.title, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true};\n        }\n        else {\n        }\n\n        this.setState({ fieldsValid: fieldsValid },\n            () => { this.validateAnswers() });\n    }\n    \n   \n    // function to handle setting correct answer bounds. prop contains \"lower\" or \"upper\"\n    setCorrectBounds = prop => event => {\n        let answerBounds = this.state.answer_bounds;\n        let val = event.target.value;\n\n        answerBounds[prop] = val;\n\n        if (val < 0) {\n            val = 0;\n        }\n        if (val > 100) {\n            val = 100;\n        }\n\n        if (!Number.isInteger(val)) {\n            val = Math.round(val);\n        }\n        \n    \n        this.setState({ answer_bounds: answerBounds },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    // function to set equality operators\n    handleEqualityOperator = prop => event => {\n\n        let equality_operators = this.state.equality_operators;\n        equality_operators[prop] = event.target.value;\n        this.setState({ equality_operators: equality_operators },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    validateTitle(value) {\n        let error = this.state.titleError;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n           error = \"Required\" ;\n           fieldsValid.title = false;\n        }\n        else {\n            error = \"\";\n            fieldsValid.title = true;\n        }\n            \n        this.setState({ titleError: error, fieldsValid: fieldsValid });\n\n        this.validateAnswers();\n    }\n\n    handleTitleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            title: value,\n        }, () => { this.validateTitle(value) });\n    };\n\n    handleLabelsValidation() {\n        let valid = false;\n        if (this.state.labels.upper.replace(/^\\s+|\\s+$/g, '') !== \"\" && this.state.labels.lower.replace(/^\\s+|\\s+$/g, '') !== \"\") valid  = true;\n\n        let fieldsValid = this.state.fieldsValid;\n        fieldsValid.lower_label = valid;\n        fieldsValid.upper_label = valid;\n        this.setState({ fieldsValid: fieldsValid })\n\n        this.validateAnswers();\n    }\n\n    handleLabelsChange = name => event => {\n        let value = event.target.value;\n        let labels = this.state.labels;\n        labels[name] = event.target.value;\n        this.setState({\n            labels: labels,\n        }, () => { this.handleLabelsValidation(name, value) });\n    };\n\n    handleSliderChange = (event, value) => {\n        this.setState({ slider_value: value });\n      };\n\n    // whether or not to display to inqualities\n    handleSetRange = (e) => {\n        let range = true;\n        if (e.target.value === \"not_range\") {\n            range = false;\n        }\n        this.setState({\n            rangeVal: e.target.value,\n            range: range\n        });\n    };\n\n    // true will be && and false will be ||\n    getOperatorCondition(lower_operator) {\n        \n        let condition = true;\n\n        switch (lower_operator) {\n            case \"<\":\n                condition = \"||\";\n                break;\n            case \"<=\":\n                condition = \"||\";\n                break;\n            case \">\":\n                condition = \"&&\";\n                break;\n            case \">=\":\n                condition = \"&&\";\n                break;\n            default:\n                condition = true;\n        }\n        return condition;\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        // need this check for submitting with enter key\n        if (this.state.disabled) {\n            return;\n        }\n\n        const { lectureId } = this.props.match.params;\n        let correct_answer = \"\";\n        \n        if (this.state.has_correct_answer) {\n            if (this.state.range) {\n                let answerBounds = this.state.answer_bounds;\n                let equalityOperators = this.state.equality_operators;\n                if (Number(answerBounds.lower) > Number(answerBounds.upper)) {\n                    const lower = answerBounds.lower;\n                    answerBounds.lower = answerBounds.upper;\n                    answerBounds.upper = lower;\n                    let equalityOperators = this.state.equality_operators;\n                    const lower_operator = this.state.equality_operators.lower;\n                    equalityOperators.lower = equalityOperators.upper;\n                    equalityOperators.upper = lower_operator;\n                }\n                correct_answer = equalityOperators.lower + \" \" + answerBounds.lower.toString() + \" \" +  this.getOperatorCondition(equalityOperators.lower) + \" \" + equalityOperators.upper + \" \" + answerBounds.upper.toString();\n            }\n            else {\n                correct_answer = this.state.equality_operators.lower + \" \" + this.state.answer_bounds.lower.toString();\n            }\n        }\n\n        // Send course to API\n        this.props.apiService.addQuestion(\n            new SliderQuestionObj(null, lectureId, \"slider\", this.state.title, this.state.question_image_string, correct_answer, null, null, null, null, null, null, null, this.state.labels.lower, this.state.labels.upper)\n        );\n\n        this.setState({ toQuestions: true });\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n\n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <Grid container justify=\"center\" className={this.styles.container} spacing={24} >\n                <Grid item className={this.styles.gridItem} xs={12} sm={6}>\n                    <Grid container direction=\"column\" align-items=\"flex-start\">\n                        <Grid item>\n                            <Typography variant=\"h6\" color=\"textPrimary\">\n                                Add New Question:\n                            </Typography>\n                        </Grid>\n                        <Grid item className={this.styles.entry}>\n                            <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={this.state.titleError !== \"\"}\n                                    id=\"standard-name\"\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleTitleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.titleError}\n                                />\n                            </form>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                component=\"label\"\n                            >\n                            Upload Image\n                            <input\n                                type=\"file\"\n                                style={{ display: \"none\" }}\n                                onChange={this.encodeImageFileAsURL}\n                            />\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"column\" justify=\"flex-start\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.custom_labels}\n                                    onChange={this.setCustomLabels('custom_labels')}\n                                    value={this.state.custom_labels}\n                                    />\n                                }\n                                label=\"custom labels (optional)\"\n                            />\n                        </Grid>\n                        \n                        {this.state.custom_labels && \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={24} className={this.styles.entry}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"lower label\"\n                                            value={this.state.labels.lower}\n                                            onChange={this.handleLabelsChange('lower')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"upper label\"\n                                            value={this.state.labels.upper}\n                                            onChange={this.handleLabelsChange('upper')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        }\n                    </Grid>                       \n                    <Grid container direction=\"column\" justify=\"space-evenly\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.has_correct_answer}\n                                    onChange={this.setCorrectAnswer('has_correct_answer')}\n                                    value={this.state.has_correct_answer}\n                                    />\n                                }\n                                label=\"set correct answer (optional)\"\n                            />\n                        </Grid>\n                        {this.state.has_correct_answer && \n                            <Grid item>\n                                <Grid container direction=\"row\">\n                                    <FormControl component=\"fieldset\">\n                                        <RadioGroup\n                                            name=\"rangeVal\"\n                                            value={this.state.rangeVal}\n                                            onChange={this.handleSetRange}\n                                        >\n                                            <FormControlLabel value={\"not_range\"} name=\"not_range\" control={<Radio />} label={\"inequality/equality\"} />\n                                            <FormControlLabel value={\"range\"} name=\"range\" control={<Radio />} label={\"set range\"} />  \n                                        </RadioGroup>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        }\n                        \n                        {this.state.has_correct_answer && this.state.range ? ( <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry} spacing={16}> \n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.lower}\n                                        onChange={this.handleEqualityOperator('lower')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer lower bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.lower}\n                                        onChange={this.setCorrectBounds('lower')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.upper}\n                                        onChange={this.handleEqualityOperator('upper')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">and/or</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer upper bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.upper}\n                                        onChange={this.setCorrectBounds('upper')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    /> \n                                </Grid>\n                            </Grid>\n                        </Grid>)\n                        : (this.state.has_correct_answer && <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry}>\n                                <Grid item> \n                                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={24}>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                select\n                                                fullWidth\n                                                value={this.state.equality_operators.lower}\n                                                onChange={this.handleEqualityOperator('lower')}\n                                                InputProps={{\n                                                    startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                                }}\n                                                >\n                                                {answerBoundOptions.map(option => (\n                                                    <MenuItem key={option.value} value={option.value}>\n                                                    {option.label}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                fullWidth\n                                                id=\"correct answer lower bound\"\n                                                type=\"number\"\n                                                value={this.state.answer_bounds.lower}\n                                                onChange={this.setCorrectBounds('lower')}\n                                                InputProps={{\n                                                    endAdornment: (\n                                                    <InputAdornment variant=\"filled\" position=\"end\">\n                                                        %\n                                                    </InputAdornment>\n                                                    ),\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                    </Grid>\n                    <Grid container className={this.styles.button}>\n                        <Button\n                            disabled={this.state.disabled}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            onClick={this.handleSubmit}>\n                            Submit\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item className={this.styles.gridItem} xs={12} sm={6}>\n                    <Grid container direction=\"column\" align-items=\"flex-start\" spacing={24}>\n                        <Grid item><Typography variant=\"h6\" color=\"textPrimary\"> Preview: </Typography></Grid>\n                        <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                            <Grid item align=\"center\">\n                                <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n                        <Grid item>\n                            <Grid container direction=\"column\" justify=\"center\" spacing={24}>\n                                <Grid item xs={12}>\n                                    <Grid container direction=\"row\" justify=\"space-between\" className={this.styles.titleContainer}>\n                                        <Grid item>\n                                            <div className={this.styles.titleWrap}> {this.state.title} </div>\n                                        </Grid>\n                                        <Grid item>\n                                            <Grid container direction=\"row\" justify=\"flex-end\">\n                                                <Card className={this.styles.card}>\n                                                    <Typography align=\"center\" className={this.styles.percentText}>\n                                                        {this.state.slider_value.toString() + \" \"}%\n                                                    </Typography>\n                                                </Card>\n                                            </Grid>\n                                        </Grid>  \n                                    </Grid>\n                                </Grid>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" className={this.styles.slidercontainer} spacing={24}>\n                                    <Grid item xs><div className={this.styles.labels}>{this.state.labels.lower}</div></Grid>\n                                    <Grid item xs={8}>\n                                        <Slider\n                                            value={this.state.slider_value}\n                                            min={0}\n                                            max={100}\n                                            step={1}\n                                            aria-labelledby=\"label\"\n                                            onChange={this.handleSliderChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs><div className={this.styles.labels}>{this.state.labels.upper}</div></Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>  \n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddSliderQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Collapse from '@material-ui/core/Collapse';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport { Redirect } from \"react-router-dom\";\nimport { inject } from 'mobx-react';\nimport LectureObj from '../../../models/LectureObj';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 80,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    gridItem: {\n        margin: theme.spacing.unit\n    },\n    dateField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 30,\n    },\n    gridItemButton: {\n        margin: theme.spacing.unit*2\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 60,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\nclass ProfessorAddLecture extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId = this.props.match.params.courseId\n        \n        const date = new Date();\n       \n        this.state = {\n            toLecture: false,\n            title: \"Lecture \",\n            courseId: this.courseId,\n            // description: \"\",\n            scheduled: false,\n            numLects: this.props.location.state.numLects.toString(),\n            errors: {title: ''},\n            titleValid: true,\n            formValid: false,\n            selectedDate: date,\n            dateValid: true,\n            openDate: date,\n            closeDate: date\n        }\n    }\n\n    componentDidMount() {\n        const lectString = \"Lecture \" + this.state.numLects.toString();\n        this.setState({\n            title: lectString\n        })\n        this.handleValidation()\n    }\n\n\n    handleValidation() {\n        let titleValid = this.state.titleValid;\n        let dateValid = this.state.dateValid;\n        let errors = this.state.errors;\n\n        if (this.state.title === '') {\n            errors.title = \"This field is required.\"\n            titleValid = false\n        }\n        else {\n            titleValid = true\n        }\n\n        if (this.state.scheduled) {\n            dateValid = this.state.closeDate.getTime() >= this.state.openDate.getTime()\n        }\n\n        this.setState({ titleValid: titleValid, dateValid: dateValid }, this.validateForm);\n    }\n\n\n    validateForm() {\n        this.setState({formValid: this.state.titleValid && this.state.dateValid });\n    }\n\n    modifyDate = date => {\n        date.setUTCDate(date.getDate());\n        date.setUTCHours(12);\n        date.setUTCMinutes(0);\n        date.setUTCMinutes(0);\n\n        return date;\n    }\n\n    handleDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            selectedDate: date\n        })\n    }\n\n    handleOpenDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({ \n            openDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleCloseDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            closeDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        }, () => { this.handleValidation() });\n    };\n\n    handleCheck = (event) => {\n        const {name, checked} = event.target\n        this.setState({\n            [name]: checked\n        }, () => {this.handleValidation() });\n    }\n\n    handleSubmit = () => {\n        this.props.apiService.addLecture(\n            new LectureObj(this.state.title, this.state.selectedDate, null, this.state.courseId, null, this.state.scheduled, this.state.openDate, this.state.closeDate)\n        )\n        this.setState({ toLecture: true });\n    }\n\n    render() {\n        if (this.state.toLecture === true) {\n            return <Redirect to={'/professor/' + this.state.courseId + '/lectures'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Grid container direction=\"column\">\n                    <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h6\" color=\"textPrimary\">\n                            Add New Lecture:\n                        </Typography>\n                    </Grid>\n                    <form noValidate autoComplete=\"off\">\n                    <Grid item className={this.styles.gridItem}>\n                        <TextField\n                            requiredtitle=\"true\"\n                            error={!this.state.titleValid}\n                            name=\"title\"\n                            label=\"Lecture Title\"\n                            className={this.styles.textField}\n                            value={this.state.title}\n                            onChange={this.handleChange}\n                            margin=\"normal\"\n                            helperText={this.state.errors[\"title\"]}\n                            multiline={true}\n                        />\n                    </Grid>\n\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid item className={this.styles.gridItem}>\n                            <DatePicker\n                                margin=\"normal\"\n                                label=\"Lecture Date\"\n                                name=\"selectedDate\"\n                                value={this.state.selectedDate}\n                                onChange={this.handleDateChange}\n                                className={this.styles.dateField}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n\n                    <Grid item className={this.styles.gridItem}>\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item>\n                                <Checkbox\n                                    checked={this.state.scheduled}\n                                    onChange={this.handleCheck}\n                                    name=\"scheduled\"\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\">\n                                    Schedule the Lecture to Open and Close at Specific Dates\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Collapse in={this.state.scheduled} timeout=\"auto\" unmountOnExit>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid container direction=\"row\">\n                                <Grid item className={this.styles.gridItem}>\n                                    <DatePicker\n                                        margin=\"normal\"\n                                        label=\"Start Date\"\n                                        name=\"openDate\"\n                                        value={this.state.openDate}\n                                        onChange={this.handleOpenDateChange}\n                                        className={this.styles.dateField}\n                                    />\n                                </Grid>\n\n                                <Grid item className={this.styles.gridItem}>\n                                    <DatePicker\n                                        margin=\"normal\"\n                                        label=\"End Date\"\n                                        name=\"closeDate\"\n                                        value={this.state.closeDate}\n                                        onChange={this.handleCloseDateChange}\n                                        className={this.styles.dateField}\n                                    />\n                                </Grid>\n                            </Grid>\n                            \n                        </MuiPickersUtilsProvider>\n                    </Collapse>\n\n                    <Grid item className={this.styles.gridItemButton}>\n                        <Button\n                            disabled={!this.state.formValid}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            className={this.styles.container}\n                            onClick={this.handleSubmit}>\n                                Submit\n                        </Button>\n                   </Grid>\n                    </form>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddLecture);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass NoMatch extends React.Component {\n\n    render() {\n        return (\n            <Typography variant=\"h5\">\n                Woops! This page does not exist.\n            </Typography>\n        );\n    }\n\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport SideMenuBar from '../../components/SideMenuBar';\nimport TopMenuBar from '../../components/TopMenuBar';\nimport ProfessorStore from '../../stores/ProfessorStore';\nimport APIProfService from '../../services/APIProfService';\nimport ProfessorHome from './ProfessorHome';\nimport ProfessorNewCourse from './NewCourse';\nimport ProfessorViewLectures from './ViewLectures';\nimport ProfessorViewQuestions from './ViewQuestions';\nimport ProfessorAddMCQuestion from './AddMCQuestion';\nimport ProfessorAddFreeTextQuestion from './AddFreeTextQuestion';\nimport ProfessorAddSliderQuestion from './AddSliderQuestion';\nimport ProfessorAddLecture from './AddLecture';\nimport NoMatch from '../../components/NoMatch';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    content: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth,\n        },\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass ProfessorRoutes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = new ProfessorStore()\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                this.profStore.dataLoaded = true\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Provider profStore={this.profStore} apiService={this.apiProfService}>\n                <div>\n                    <CssBaseline />\n                    <Route path='/professor' component={TopMenuBar} />\n                    <nav>\n                        <Hidden xsDown implementation=\"css\">\n                            <Route path='/professor' component={SideMenuBar} />\n                        </Hidden>\n                    </nav>\n                    \n                    <main className={this.styles.content}>\n                        <Switch>\n                            <Route exact path='/professor' component={ProfessorHome} />\n                            <Route path='/professor/new' component={ProfessorNewCourse} />\n                            <Route path='/professor/:courseId/lectures' component={ProfessorViewLectures} />\n                            <Route path='/professor/:courseId/new' component={ProfessorAddLecture} />\n                            <Route exact path='/professor/:lectureId/questions' component={ProfessorViewQuestions} />\n                            <Route path='/professor/:lectureId/questions/new-mc' component={ProfessorAddMCQuestion} />\n                            <Route path='/professor/:lectureId/questions/new-free-text' component={ProfessorAddFreeTextQuestion} />\n                            <Route path='/professor/:lectureId/questions/new-slider' component={ProfessorAddSliderQuestion} />\n                            <Route component={NoMatch} />\n                        </Switch>\n                    </main>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorRoutes);\n","import { observable, action } from \"mobx\";\nimport CourseObj from '../models/CourseObj';\nimport { MultipleChoiceQuestionObj, FreeTextQuestionObj, SliderQuestionObj } from \"../models/QuestionObj\";\n\nexport default class StudentStore {\n  @observable\n  courses = []; // CourseObj[]\n\n  @observable\n  questions = []; // QuestionObj[]\n\n  @observable\n  prevQuestions = []; // QuestionObj[]\n\n  @observable\n  lastQuestion = null;\n\n  @observable\n  lastAnswer = null;  // the submitted answer to the most recently closed question\n\n  @observable\n  socketIOStatus = false;\n\n\n  @action\n  setSocketIOStatus(status) {\n    this.socketIOStatus = status;\n  }\n\n  /** Call this when the question is closed and the component about to unmount.\n   *  DO NOT call it when the student submits an answer!\n   */\n  @action\n  updateLastQuestion(question) {\n    this.lastQuestion = question;\n  }\n\n  @action\n  resetQuestions() {\n    this.questions = [];\n    this.prevQuestions = [];\n    this.lastAnswer = null;\n    this.lastQuestion = null;\n  }\n\n  @action\n  updateLastAnswer(answer) {\n    this.lastAnswer = answer;\n  }\n\n  @action\n  updateAllCourses(courses) {\n    this.courses = []\n\n    courses.forEach(element => {\n      element.num = element['coursenum']\n      element.joinCode = element['enroll_code']\n      this.courses.push(new CourseObj(element))\n    })\n  }\n\n  @action\n  dropCourse(course_id) {\n      this.courses.remove(this.courses.find(x=> x.id === course_id));\n  }\n\n  getQuestionWithId(question_id) {\n    return this.questions.find(x => x.id === question_id);\n  }\n\n  getPrevQuestionWithId(question_id) {\n    return this.prevQuestions.find(x => x.id === question_id);\n  }\n\n  @action\n  updateQuestion(question) {\n    const original_question = this.questions.find(x => x.id === question.id);\n    if (question.question_type === 'free_text') {\n      original_question.id = question.id;\n      original_question.lecture_id = question.lecture_id;\n      original_question.question_type = question.question_type;\n      original_question.question_title = question.question_title;\n      original_question.correct_answer = question.correct_answer;\n      original_question.creator_id = question.creator_id;\n      original_question.is_open = question.is_open;\n      original_question.opened_at = question.opened_at;\n      original_question.closed_at = question.closed_at;\n      original_question.created_at = question.created_at;\n      original_question.modified_at = question.modified_at;\n      original_question.answer =  question.answer;\n      original_question.word_limit = question.word_limit;\n    }\n  }\n\n  @action\n  updateAllQuestions(questions) {\n      this.questions = []\n\n      questions.forEach(element => {\n        if (element.question_type === 'multiple_choice') {\n          this.questions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n            element.question_type, element.question_title, element.question_image,\n            element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n            element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n            element.option2, element.option3, element.option4, element.option5, element.number_of_options))\n        }\n        else {\n          if (element.question_type === 'free_text') {\n            this.questions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n              element.question_type, element.question_title, element.question_image,\n              element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n              element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit))\n            }\n          else {\n            this.questions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n              element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.opened_at, \n              element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label))\n          }\n\n          }\n          \n\n      });\n  }\n\n  @action\n  updateAllPrevQuestions(questions) {\n    this.prevQuestions = [];\n\n    questions.forEach(element => {\n      console.log(element.question_title)\n      if (element.question_type === 'multiple_choice') {\n        this.prevQuestions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options))\n      }\n      else {\n        if (element.question_type === 'free_text') {\n          this.prevQuestions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n            element.question_type, element.question_title, element.question_image,\n            element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n            element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit))\n        }\n        else {\n          this.prevQuestions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n            element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.opened_at, \n            element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label))\n        }\n      }\n    });\n  }\n\n  @action\n  addOneQuestion(element) {\n    if (this.questions.find(x => x.id === element.id) === undefined) {\n      if (element.question_type === 'multiple_choice') {\n        this.questions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options));\n      } else if (element.question_type === 'free_text') {\n        this.questions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit));\n      } else {\n        this.questions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n          element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.opened_at, \n          element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label));\n      }\n\n    }\n    \n  }\n\n  @action\n  updateOneQuestion(element) {\n    var question_id = element.id;\n    var oldQuestion = this.questions.find(x => x.id === question_id);\n    var index = this.questions.indexOf(oldQuestion);\n    if (index <= -1) {\n      // not yet in store\n      this.addOneQuestion(element);\n    } else {\n      // update existing\n      var updatedQuestion;\n      if (element.question_type === 'multiple_choice') {\n        updatedQuestion = new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title,\n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options);\n      } else if (element.question_type === 'free_text') {\n        updatedQuestion = new FreeTextQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, \n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit);\n      } else {\n        updatedQuestion = new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n          element.question_title, element.correct_answer, element.creator_id, element.is_open, element.opened_at, \n          element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label);\n      }\n      this.questions[index] = updatedQuestion;\n    }\n  }\n\n  @action\n  removeQuestionById(question_id) {\n   \n      this.questions.remove(this.questions.find(x => x.id === question_id));\n  }\n\n  // get number of open questions for course \n  getNumberOfQuestions() {\n    return this.questions.length;  \n  }\n\n}\n","import { getStudentCoursesAPI, getStudentNameAPI, postEnrollStudentAPI, getStudentQuestionsByCourseAPI, getStudentPrevQuestionsByCourseAPI, postAnswerQuestionAPI, getLogoutStudentAPI, deleteDropCourseAPI } from '../utils/api-facade';\n\nexport default class APIStudentService {\n    constructor(studentStore) {\n        this.studentStore = studentStore;\n    }\n\n    loadAllCourses() {\n        getStudentCoursesAPI()\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllCourses(res.data)\n\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n        \n    }\n\n    async getName() {\n        return getStudentNameAPI()\n            .then(res => {\n                return res.data.name\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    loadAllQuestions(course_id) {\n        getStudentQuestionsByCourseAPI(course_id)\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllQuestions(res.data)\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n        \n    }\n\n    loadAllPrevQuestions(course_id) {\n        getStudentPrevQuestionsByCourseAPI(course_id)\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllPrevQuestions(res.data)\n\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n    }\n\n    // remove the course\n    dropCourse(course_id) {\n        deleteDropCourseAPI(course_id)\n        .then(\n            this.studentStore.dropCourse(course_id)\n        )\n        .catch(error => {\n            console.log(error.response);\n            this._checkAuth(error);\n        })\n    }\n\n    async postAnswer(answer, question_id) {\n        postAnswerQuestionAPI(answer, question_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n    }\n\n    async enrollCourse(code) {\n        return postEnrollStudentAPI(code)\n            .then(res => {\n                getStudentCoursesAPI()\n                    .then(res => {\n                        console.log(res.data)\n                        this.studentStore.updateAllCourses(res.data)\n        \n                    })\n                    .catch(error => {\n                        console.log(error.response);\n                        this._checkAuth(error);\n                    })\n                return null;\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n                return error.response.data;\n            })\n        // getStudentCoursesAPI()\n        //     .then(res => {\n        //         this.studentStore.updateAllCourses(res.data)\n\n        //     })\n        //     .catch(error => {\n        //         console.log(error.response);\n        //         this._checkAuth(error);\n        //     })\n    }\n\n    async getLogoutStudent() {\n        getLogoutStudentAPI()\n        .catch(error => {\n            console.log(error.response);\n            this._checkAuth(error);\n        })\n    }\n\n    _checkAuth(error) {\n        if (error.response !== undefined) {\n            if (error.response.status === 401)\n                window.location.replace('/login/student')\n        }\n    }\n}\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom'\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    yellowCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.main\n    },\n    navyCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.secondary.light\n    },\n    greenCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.light\n    },\n    orangeCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.dark\n    },\n    link: {\n        width: '98%',\n        textDecoration: 'none',\n    },\n    icon: {\n        margin: theme.spacing.unit\n    },\n    typography: {\n        width: '100%'\n    }\n\n});\n\n@inject(\"store\")\n@observer\nclass ClassCard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.styles = props.classes\n    }\n    \n    state = {\n        link:'student/questions',\n        colorStyle: undefined,\n        open:false,\n    }\n\n    componentDidMount () {\n        var colors = [this.styles.orangeCard, this.styles.greenCard, this.styles.yellowCard, this.styles.navyCard];\n        this.setState({\n            colorStyle: colors[this.props.colorIndex]\n        });\n    }\n    \n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n      \n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleDelete = () => {\n        this.apiStudentService.dropCourse(this.props.id);\n        this.handleClose()\n    };\n\n    \n    render() {\n        return (\n            \n                <Card className={this.state.colorStyle}>\n                    <CardContent>\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\" spacing={24}>\n                            <Grid item xs={10}>\n                                <Link className={this.styles.link} to={{\n                                pathname: '/student/questions',\n                                state : {\n                                    course_id: this.props.id,\n                                }\n                                }}>\n                                    <Typography className={this.styles.typography} variant=\"h4\">\n                                        {this.props.course.dept} {this.props.course.num} - {this.props.course.title}: {this.props.course.term} {this.props.course.year}\n                                    </Typography>\n                                </Link>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Tooltip title=\"Drop Course\" disableFocusListener placement=\"top-start\">\n                                        <Button variant=\"text\" size=\"small\" onClick={this.handleOpen}>\n                                            <Icon className={this.styles.icon} color=\"secondary\">delete</Icon>\n                                        </Button>\n                                    </Tooltip>\n                                </Grid>\n                                \n                            </Grid>\n                            <Dialog\n                                open={this.state.open}\n                                onClose={this.handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete \\\"\" + this.props.name + \"\\\"?\"}</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">\n                                    Doing so will remove this course and all of its data permanently.\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleDelete} color=\"secondary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClassCard);","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport { Redirect } from 'react-router-dom';\n\n@inject(\"store\")\n@observer\nclass LogoutButton extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    state = {\n        logout: false\n    }\n\n    handleLogout = () => {\n        this.apiStudentService.getLogoutStudent();\n        this.setState({\n            logout: true\n        })\n    }\n\n    render() {\n        if (this.state.logout) {\n            return <Redirect to={'/'} push />\n        }\n        return (\n          \n            <Button onClick={this.handleLogout}>logout</Button>\n            \n        );\n    }\n}\nexport default LogoutButton;","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../../../assets/clikrlogo.png'\nimport LogoutButton from '../Buttons/LogoutButton';\nimport { Link } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n    render () {\n        return(\n            <div>\n            <AppBar position=\"static\" color='primary'>\n                <Toolbar>\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems='center'>\n                        <Grid item>\n                            <Link to=\"/student\">\n                                <img src = {logo} alt = \"logo\" width=\"100\"></img>\n                            </Link>\n                        </Grid>\n\n                        <Grid item>\n                            <Grid container direction=\"row\" alignItems='right'>\n                                <Typography variant=\"h5\" color=\"secondary\"> {this.props.userName} </Typography>\n\n                                <LogoutButton />\n                            </Grid>\n                        </Grid>\n                        \n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { observer, inject } from 'mobx-react';\nimport Icon from '@material-ui/core/Icon';\nimport APIStudentService from '../../../services/APIStudentService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main,\n        marginRight: theme.spacing.unit*2\n    },\n    icon: {\n        margin: theme.spacing.unit,\n        color: \"white\"\n    }\n});\n\n@inject('store')\n@observer\nclass AddCourseDialog extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    state = {\n        message: \"Enter Course Enrollment Code:\",\n        open: false,\n        code: \"\",\n        disabled: true,\n        errorMsg: null,\n    };\n\n    handleChange = (e) => {\n        if (e.target.value.length > 0) {\n            this.setState({\n                [e.target.name]: e.target.value.toUpperCase(),\n                disabled: false,\n            })\n        }\n        else {\n            this.setState({\n                disabled: true,\n                [e.target.name]: e.target.value.toUpperCase(),\n            })\n        }\n        \n    }  \n    handleOpen = () => {\n        this.setState({\n            message: \"Enter Course Enrollment Code:\",\n            open: true,\n            code: \"\",\n            disabled: true,\n        })\n    };\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    enroll() {\n        this.apiStudentService.enrollCourse(this.state.code).then((data) => {\n            if (data !== null) {\n                this.setState(() => {\n                    return {\n\n                        message: data.error,\n                        disabled: true,\n                        open: true,\n                    }\n                });\n            }\n            else {\n                this.setState(() => {\n                    return {\n                        open: false,\n                    }\n                });\n            }\n            \n        });\n    }\n    handleSubmit = () => {\n        \n        this.enroll();\n        if (this.state.message === \"Enter Course Enrollment Code:\") {\n            this.apiStudentService.loadAllCourses();\n            this.handleClose();\n        }\n\n    };\n\n    \n    render() {\n        return (\n            <div>\n                <Fab color=\"secondary\" aria-label=\"Add\" className={this.styles.button} onClick={this.handleOpen}>\n                    <Icon className={this.styles.icon}>add</Icon>\n                </Fab>\n                <Dialog\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">{this.state.message}</DialogTitle>\n                        <DialogContent>\n                            <TextField\n                                id=\"title\"\n                                helperText=\"Enter code\"\n                                name='code'\n                                value={this.state.code}\n                                onChange={e => this.handleChange(e)}\n                                fullWidth\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                cancel\n                            </Button>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disabled} color=\"secondary\">\n                                enroll\n                            </Button>\n                    </DialogActions>\n                </Dialog>   \n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(AddCourseDialog);","import { socketioURL } from '../constants/api';\nimport socketIOClient from 'socket.io-client';\n\nexport default class SocketIOStudentService {\n    \n    constructor(store) {\n        this.store = store;\n        this.socket = socketIOClient(socketioURL);\n        this.timeout = null;\n        \n        store.setSocketIOStatus(true);  // optimistic approach: assume we're connected, verify later\n        setTimeout(() => {\n            this.checkConnection();\n        }, 1000)\n    }\n\n    reset() {\n        this.store.resetQuestions();\n    }\n\n    // subscribe student for particular class\n    // must be called before all other calls\n    subscribe(course_id) {\n        this.socket.emit('subscribe student', course_id);\n    }\n\n    // check for opening of a question\n    detectOpenQuestion() {\n        this.socket.on('question opened', (data) => {\n            this.store.addOneQuestion(data.question);\n        });\n    }\n    \n\n    // check for closing of a question\n    detectCloseQuestion() {\n        this.socket.on('question closed', (msg) => {\n            this.store.updateLastQuestion(msg.question);\n            this.store.removeQuestionById(msg.question.id);\n        });\n    }\n    \n\n    // listen for server messages\n    listen() {\n        this.socket.on('server message', (msg) => {\n            console.log('Received message: ' + msg);\n        });\n    }\n\n    // get all open questions for a course \n    getAllQuestions() {\n        return this.socket.on('all open questions', (data) => {\n            this.store.updateAllQuestions(data.questions);\n            console.log(data);\n        });\n    }\n\n    // detect broken connection\n    startCheckingConnection() {\n        this.timeout = setInterval(() => {\n            this.checkConnection();\n        }, 1000);\n    }\n\n    // clear the timeout\n    stopCheckingConnection() {\n        clearTimeout(this.timeout);\n    }\n\n    // check if connected\n    checkConnection() {\n        if (this.socket.connected) {\n            this.store.setSocketIOStatus(true);\n        } else {\n            this.store.setSocketIOStatus(false);\n        }\n    }\n\n}","import React, { Component } from 'react';\nimport ClassCard from '../../../components/Student/StudentClassCards';\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { withStyles } from '@material-ui/core/styles'\nimport AddCourseDialog from '../../../components/Student/AddCourseDialog';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport SocketIOStudentService from '../../../services/SocketIOStudentService';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    paper: {\n        padding: theme.spacing.unit*2,\n    }\n});\n\n@inject(\"store\")\n@observer\nclass StudentHome extends Component {\n    state = {\n        course_ids: [],\n        userName: \"\",\n        showArchive: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.styles = props.classes\n        this.socketIOStudentService = new SocketIOStudentService(this.store);\n\n        this.handleToggleArchive = this.handleToggleArchive.bind(this)\n    }\n\n    componentDidMount() {\n        this.apiStudentService.getName()\n            .then(name => {\n                this.setState({ userName: name });\n            })\n    }\n    \n    componentWillReceiveProps() {\n        this.apiStudentService.loadAllCourses()\n    }\n    \n    handleToggleArchive() {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                showArchive: !prevState.showArchive\n            }\n        })\n    }\n\n    render() {\n        var currentCourses = this.store.courses.filter(courseObj => {\n            return courseObj.is_current\n        })\n\n        var archivedCourses = this.store.courses.filter(courseObj => {\n            return !courseObj.is_current\n        })\n\n        var showString = this.state.showArchive ? \"\" : \"Show\"\n\n        return (\n            <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header userName={this.state.userName} />\n                <Grid item className={this.styles.gridItem}>\n                    <Paper className={this.styles.paper}>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\" className={this.styles.gridContainer}>\n                            <Grid item xs={12} sm={10}>\n                                <Typography variant=\"h2\" color=\"secondary\" className={this.styles.typeography}> My Classes </Typography>\n                            </Grid>\n                            <Grid item container justify=\"flex-end\" xs={12} sm={2}>\n                                <AddCourseDialog />      \n                            </Grid>\n                        </Grid>\n                        <Grid container justify=\"center\" alignItems=\"flex-end\">\n                            {currentCourses.map(function (courseObj, index) {\n                                const colorIndex = index%4;\n                                return (\n                                    <ClassCard key={index} course={courseObj} id={courseObj.id} colorIndex={colorIndex}/>\n                                );\n                            })}\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n                <Grid item className={this.styles.gridItem} >\n                    <Paper className={this.styles.paper}>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\" className={this.styles.gridContainer}>\n                            <Grid item xs={12} sm={10}>\n                                <Typography variant=\"h2\" color=\"secondary\" className={this.styles.typeography}> {showString} Archived Courses </Typography>\n                            </Grid>\n                            <Grid item container justify=\"flex-end\" xs={12} sm={2}>\n                                <IconButton color=\"secondary\" onClick={this.handleToggleArchive}>\n                                    {this.state.showArchive ? <ExpandLess /> : <ExpandMore />}\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                        <Collapse in={this.state.showArchive} timeout=\"auto\" unmountOnExit>\n                            <Grid container justify=\"center\" alignItems=\"flex-end\">\n                                {archivedCourses.map(function (courseObj, index) {\n                                    const colorIndex = index%4;\n                                    return (\n                                        <ClassCard key={index} course={courseObj} id={courseObj.id} colorIndex={colorIndex}/>\n                                    );\n                                })}\n                            </Grid>\n                        </Collapse>\n                    </Paper>\n                </Grid>\n            </Grid>\n        )\n    }\n}\nexport default withStyles(styles)(StudentHome);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Timer from '@material-ui/icons/Timer';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingRight: theme.spacing.unit*2,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n@inject(\"store\")\n@observer\nclass FRQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answer: \"\",\n        sent: \"\",\n        disabled: false,\n        dialogue: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.sent);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer(this.state.answer, this.question.id)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    }\n\n    handleClick = (e) => {\n        if (this.state.sent === \"\"){\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    }\n\n    handleChange = (e) => {\n\n        if (e.target.value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        }\n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({ dialogue: false });\n        };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Typography variant=\"subtitle2\" color=\"secondary\"> \n                            <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                        </Typography>\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                id=\"full-width\"\n                                helperText=\"Enter Response\"\n                                name = 'answer'\n                                value={this.state.answer}\n                                onChange={e => this.handleChange(e)}\n                                fullWidth\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Button onClick={this.handleClick} disabled={this.state.disabled} variant=\"contained\" color=\"secondary\">\n                            Submit\n                        </Button>\n                        <Dialog\n                            open={this.state.dialogue}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\"Answer changed- \"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                no\n                                </Button>\n                                <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                                yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(FRQ);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Timer from '@material-ui/icons/Timer';\nimport { withStyles } from '@material-ui/core/styles';\nconst prettyMs = require('pretty-ms')\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit * 1.5,\n    },\n    answerOption: {\n        marginLeft: theme.spacing.unit * 0.3,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n@inject(\"store\")\n@observer\nclass MCQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answerchoices: [],\n        answer: \"\",\n        sent: \"\",\n        dialogue: false,\n        disabled: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n\n        var answers = []\n\n        for (var i = 1; i <= this.question['number_of_options']; i++) {\n            var qstring = this.question[\"option\" + i.toString()];\n            answers.push(qstring)\n        }\n\n        this.setState({\n            answerchoices: answers\n        })\n\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.answerchoices.indexOf(this.state.sent) + 1);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            answer: e.target.value\n        });\n        if (e.target.value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        }\n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n    };\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer((this.state.answerchoices.indexOf(this.state.answer) + 1).toString(), this.props.questionId)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    };\n\n    handleClick = () => {\n        if (this.state.sent === \"\") {\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    };\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({\n            dialogue: false,\n            answer: this.state.sent,\n            disabled: true\n        });\n    };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Typography variant=\"subtitle2\" color=\"secondary\"> \n                            <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                        </Typography>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup\n                                name=\"answers\"\n                                value={this.state.answer}\n                                onChange={this.handleChange}\n                            >\n                                {this.state.answerchoices.map((a, index) => {\n                                    return (\n                                        <FormControlLabel value={a} key={a} control={<Radio />} label={a} className={this.styles.answerOption} />\n                                    )\n                                })\n                                }\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n\n\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Button onClick={this.handleClick} disabled={this.state.disabled} value={this.state.answer} variant=\"contained\" color=\"secondary\">\n                            Submit\n                        </Button>\n                        <Dialog\n                            open={this.state.dialogue}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\"Answer changed- \"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                    \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </Paper>\n            </div>\n\n\n        );\n    }\n}\nexport default withStyles(styles)(MCQ);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/lab/Slider';\nimport Timer from '@material-ui/icons/Timer';\nimport Card from '@material-ui/core/Card';\n\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingTop: theme.spacing.unit*3,\n        paddingBottom: theme.spacing.unit*3,\n        paddingRight: theme.spacing.unit*1.5\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n        width: \"100%\"\n    },\n    percentContainer: {\n        paddingRight: theme.spacing.unit*3\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n        color: theme.palette.secondary.main\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        width: 45\n    },\n    whiteTypography: {\n        color: \"white\"\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n@inject(\"store\")\n@observer\nclass SLQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answer: 50,\n        sent: \"\",\n        disabled: false,\n        dialogue: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n    \n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.sent);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer(this.state.answer.toString(), this.question.id)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    }\n\n    handleClick = (e) => {\n        if (this.state.sent === \"\"){\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    }\n\n    handleSliderChange = (event, value) => {\n        if (value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        } \n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n        \n        this.setState({ answer: value });\n      };\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({ dialogue: false });\n    };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" justify=\"space-between\" className={this.styles.gridContainer}>\n                        <Grid item>\n                            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={24}>\n                                <Grid item xs>\n                                    <div className={this.styles.titleWrap}> {this.question.question_title} </div>\n                                    <Typography variant=\"subtitle2\" color=\"secondary\"> \n                                        <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                            '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Grid container justify=\"flex-end\" direction=\"row\" className={this.styles.percentContainer}>\n                                        <Card className={this.styles.card}>\n                                            <Typography align=\"center\" className={this.styles.whiteTypography}>\n                                                {this.state.answer.toString() + \" \"}%\n                                            </Typography>\n                                        </Card>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={24} className={this.styles.gridItem}>\n                            <Grid item xs>\n                                <Grid container justify=\"center\">\n                                    <div className={this.styles.labels}>{this.question.lower_label}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Slider\n                                    value={this.state.answer}\n                                    min={0}\n                                    max={100}\n                                    step={1}\n                                    aria-labelledby=\"label\"\n                                    onChange={this.handleSliderChange}\n                                />\n                            </Grid>\n                            <Grid item xs>\n                                <Grid container justify=\"center\">\n                                    <div className={this.styles.labels}>{this.question.upper_label}</div>\n                                </Grid>\n                            </Grid>\n                        </Grid> \n                    </Grid>\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Grid item >\n                            <Button onClick={this.handleClick} disabled={this.state.disabled} variant=\"contained\" color=\"secondary\">\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                <Dialog\n                    open={this.state.dialogue}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Answer changed- \"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                        \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                        no\n                        </Button>\n                        <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                        yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>            \n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(SLQ);\n","\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    neutralAnswer: {\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n\n});\n\n@inject(\"store\")\n@observer\nclass PrevMCQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = null;\n        this.answerchoices = [];\n        this.correct = null;\n    }\n\n    render() {\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            this.answer = this.store.lastAnswer;\n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            this.answer = this.question.answer;\n        }\n\n        // answer choices\n        var answers = []\n\n        for (var i = 1; i <= this.question['number_of_options']; i++) {\n            var qstring = this.question[\"option\" + i.toString()];\n            answers.push(qstring)\n        }\n\n        this.answerchoices = answers;\n\n        // compute correct answer\n        var a =  this.question.correct_answer\n        if (a !== undefined) {\n            if (a !== null && a !== \"\") {\n                this.correct = Number(a) - 1;\n            } else {\n                this.correct = null;\n            }\n        }\n\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup\n                                name=\"answers\"\n                            >\n                                {this.answerchoices.map((a, index) => {\n                                    var background_style;\n                                    if (this.correct === undefined || this.correct === null) {\n                                        background_style = this.styles.neutralAnswer;\n                                    }\n                                    else if (index === this.correct) {\n                                        background_style = this.styles.correctAnswer;\n                                    }\n                                    else if (parseInt(this.answer, 10)-1 === index) {\n                                        background_style = this.styles.wrongAnswer;\n                                    }\n\n                                    return (\n                                        <FormControlLabel value={a} key={a} control={<Radio disabled checked={index === parseInt(this.answer)-1} />} label={a} className={background_style}/>\n                                    );\n                                })}\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                </Paper>\n            </div>\n\n\n        );\n    }\n}\nexport default withStyles(styles)(PrevMCQ);\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingRight: theme.spacing.unit*2,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    neutralAnswer: {\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n});\n\n@inject(\"store\")\n@observer\nclass PrevFRQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = \"\";\n        this.correct = null;\n        this.helperText = \"\";\n    }\n\n    \n\n    render() {\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            if (this.store.lastAnswer !== null) {\n                this.answer = this.store.lastAnswer;\n            } \n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            if (this.question.answer !== null) {\n                this.answer = this.question.answer;\n            }   \n        }\n\n        // correct answer\n        var a =  this.question.correct_answer\n        if (a !== undefined) {\n            this.correct = a;\n\n            if (a === \"\" || a === null) {\n                this.helperText = \"Your Answer: \"\n            } else if (this.answer === a) {\n                this.helperText = \"Correct\"\n            } else {\n                this.helperText = \"Correct Answer: \" + a\n            }\n        }\n\n        var backgroundStyle;\n        if (this.correct && this.correct !== \"\") {\n            if (this.answer === this.correct) {\n                backgroundStyle = this.styles.correctAnswer;\n            } else {\n                backgroundStyle = this.styles.wrongAnswer;\n            }\n        } else {\n            backgroundStyle = this.styles.neutralAnswer;\n        }\n    \n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                id=\"full-width\"\n                                helperText={this.helperText}\n                                name = 'answer'\n                                value={this.answer}\n                                fullWidth\n                                disabled\n                                className={backgroundStyle}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(PrevFRQ);\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1em\", \n        display:\"flex\", \n        justifyContent:\"center\",\n        color: \"#424242\"\n    },\n    titleContainer: {\n        paddingBottom: theme.spacing.unit*0.25\n    },\n    percentContainer: {\n        paddingRight: theme.spacing.unit*3\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n        color: theme.palette.secondary.main\n    },\n    card: {\n        backgroundColor: \"gray\",\n        padding: theme.spacing.unit*0.25,\n        width: 45\n    },\n    gridItem: {\n        width: \"98%\"\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n        paddingTop: theme.spacing.unit*2\n        \n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n        paddingTop: theme.spacing.unit*2\n    },\n    neutralAnswer: {\n        paddingTop: theme.spacing.unit*2\n    },\n    textField: {\n\t\tfontSize: 50\n\t}\n});\n\n@inject(\"store\")\n@observer\nclass PrevSLQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = -1;\n        this.helperText = \"\";\n        \n    }\n\n    // helper method to see if answer is correct\n    operatorToComparison(response, operator, answer) {\n        let correct = false;\n        switch(operator) {\n            case \"<\":\n                correct = response < answer;\n                break;\n            case \"<=\":\n                correct = response <= answer;\n                break;\n            case \">\":\n                correct = response > answer;\n                break;\n            case \">=\":\n                correct = response >= answer;\n                break;\n            default:\n                correct = response === answer;\n        } \n        return correct;\n    }\n    \n    // check if answer is correct\n    checkAnswer(correct_answer, answer) {\n        if (correct_answer === null || correct_answer === \"\") return true;\n        const expression = correct_answer.split(\" \");\n        if (expression.length === 2) {\n            return this.operatorToComparison(Number(answer), expression[0], Number(expression[1]))\n        }\n        else {\n            const exp1 = this.operatorToComparison(Number(answer), expression[0], Number(expression[1]))\n            const exp2 = this.operatorToComparison(Number(answer), expression[3], Number(expression[4]))\n            if (expression[2] === \"&&\") return exp1 && exp2;\n            return exp1 || exp2;\n        }\n    }\n\n    // helper method for function that turns answer into a more readable form \n    operatorToWord(operator) {\n        let string = \"equals\";\n        switch(operator) {\n            case \"<\":\n                string = \"<\";\n                break;\n            case \"<=\":\n                string = \"\\u2264\";\n                break;\n            case \">\":\n                string = \">\";\n                break;\n            case \">=\":\n                string = \"\\u2265\";\n                break;\n            case \"||\":\n                string = \"or\";\n                break;\n            case \"&&\":\n                string = \"and\";\n                break;\n            default:\n                string = \"=\";\n        } \n        return string;\n    }\n\n    // turn the answer into a more readable form\n    getAnswerText(answer) {\n        if (answer === null) {\n            return \"\";\n        }\n        const expression = answer.split(\" \");\n        if (expression.length === 2) {\n            return \"answer \" + this.operatorToWord(expression[0]) + \" \" +  expression[1] + \"%\";\n        }\n        else {\n            return \"answer \" + this.operatorToWord(expression[0]) + \" \" +  expression[1] + \"% \" + this.operatorToWord(expression[2]) + \" \" + this.operatorToWord(expression[3]) + \" \" + expression[4] + \"%\";\n        }\n    }\n\n    render() {\n\n        // fetch question data\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            if (this.store.lastAnswer !== null) {\n                this.answer = Number(this.store.lastAnswer);\n            } \n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            if (this.question.answer !== null) {\n                this.answer = Number(this.question.answer);\n            }   \n        }\n        \n        // background style\n        var correct = this.checkAnswer(this.question.correct_answer, this.answer);\n        var backgroundStyle;\n        if (correct) {\n            if (this.question.correct_answer !== \"\" && this.question.correct_answer !== null) {\n                backgroundStyle = this.styles.correctAnswer;\n            } else {\n                backgroundStyle = this.styles.neutralAnswer;\n            }\n        } else {\n            backgroundStyle = this.styles.wrongAnswer;\n        }\n\n        // helper text\n        if (this.question.correct_answer === \"\" || this.question.correct_answer === null) {\n            this.helperText = \"Your Answer: \" + this.answer.toString() + \"%\"\n        } else {\n            this.helperText = \"Correct Answer: \" + this.getAnswerText(this.question.correct_answer) \n        }\n\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" justify=\"center\" className={this.styles.gridContainer}>\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={16} className={this.styles.titleContainer}>\n                            <Grid item xs>\n                                <div className={this.styles.titleWrap}> {this.question.question_title} </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Grid container justify=\"flex-end\" direction=\"row\" className={this.styles.percentContainer}>\n                                    <Card className={this.styles.card}>\n                                        <Typography align=\"center\" className={this.styles.whiteTypography}>\n                                            {this.answer.toString() + \" \"}%\n                                        </Typography>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid container direction=\"column\" className={this.styles.gridItem}>\n                            <Grid container direction=\"column\" justify=\"space-evenly\" className={backgroundStyle}>\n                                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={24}>\n                                    <Grid item xs>\n                                        <Grid container justify=\"center\">\n                                            <div className={this.styles.labels}>{this.question.lower_label}</div>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Slider\n                                            disabled\n                                            value={this.answer}\n                                            min={0}\n                                            max={100}\n                                            step={1}\n                                            aria-labelledby=\"label\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Grid container justify=\"center\">\n                                            <div className={this.styles.labels}>{this.question.upper_label}</div>\n                                        </Grid>\n                                    </Grid>\n                                </Grid> \n                                <Grid container direction=\"row\" >\n                                    <TextField\n                                        id=\"correctAnswer\"\n                                        helperText={this.helperText}\n                                        fullWidth\n                                        disabled\n                                    />\n                                </Grid>\n                            </Grid> \n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(PrevSLQ);\n","import React, { Component } from 'react';\n//import './style.css'; // Not our preferred way of importing style\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { observer, inject } from 'mobx-react';\nimport FRQ from '../../../components/Student/Questions/FRQ';\nimport MCQ from '../../../components/Student/Questions/MCQ';\nimport SLQ from '../../../components/Student/Questions/SLQ';\nimport PrevMCQ from '../../../components/Student/Questions/PrevMCQ';\nimport PrevFRQ from '../../../components/Student/Questions/PrevFRQ';\nimport PrevSLQ from '../../../components/Student/Questions/PrevSLQ';\nimport { withStyles } from '@material-ui/core/styles';\nimport SocketIOStudentService from '../../../services/SocketIOStudentService';\n\nconst styles = theme => ({\n    gridContainer: {\n        padding: theme.spacing.unit,\n    },\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    }\n\n});\n\n@inject(\"store\")\n@observer\nclass QuestionPage extends Component {\n\n    state = {\n        show_previous_questions: false,\n        show_last_question: true,\n        dots: '',\n    }\n    \n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.socketIOStudentService = new SocketIOStudentService(this.store)\n        this.timeout = null;  \n    }\n\n    componentDidMount() {\n        this.socketIOStudentService.reset();\n\n        const { course_id } = this.props.location.state\n        \n        this.socketIOStudentService.subscribe(course_id);\n\n        this.socketIOStudentService.detectOpenQuestion();\n        \n        this.socketIOStudentService.detectCloseQuestion();\n\n        this.socketIOStudentService.getAllQuestions();\n\n        this.socketIOStudentService.listen();\n\n        this.socketIOStudentService.startCheckingConnection();\n\n        // timeout for the status dots\n        this.timeout = setInterval(() => {\n            var dots = this.state.dots;\n            if (dots === '...') {\n                dots = '';\n            } else {\n                dots += '.';\n            }\n            this.setState({\n                dots: dots,\n            })\n        }, 1000);\n\n    }\n\n    componentWillUnmount() {\n        // cancel the timeout\n        clearTimeout(this.timeout);\n\n        // stop checking connection\n        this.socketIOStudentService.stopCheckingConnection();\n    }\n\n    handleClick = () => {\n        const { course_id } = this.props.location.state;\n\n        if (!this.state.show_previous_questions) {\n            this.apiStudentService.loadAllPrevQuestions(course_id);\n            this.setState({\n                show_previous_questions: true,\n                show_last_question: false,\n            });\n        } else {\n            this.setState({\n                show_previous_questions: false,\n                show_last_question: true,\n            }); \n        }\n    };\n\n    render() {\n        return (\n            <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header />\n                <Grid className={this.styles.gridContainer}>\n                    <Paper className={this.styles.paper} style={{backgroundColor: \"secondary\"}}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.store.socketIOStatus ? ((this.store.getNumberOfQuestions() !== 0 ? \"Open Questions\" : \"No Open Questions\") + this.state.dots) : \"Connection lost!\"} </Typography>\n                        {this.store.getNumberOfQuestions() !== 0 ? (\n                            <Grid>\n                                {this.store.questions.map(q => {\n                                    if (q.question_type === 'free_text') {\n                                        return (\n                                            <Grid item className={this.styles.gridItem} key={q.id}>\n                                                <FRQ questionId={q.id} />\n                                            </Grid>\n            \n                                        )\n                                    }\n                                    else {\n                                        // TODO: handle slider and drag-and-drop questions!\n                                        if (q.question_type === \"slider\") {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <SLQ questionId={q.id} />\n                                                </Grid>\n                                            )\n                                        }\n                                        else {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <MCQ questionId={q.id} />\n                                                </Grid>\n                                            )\n\n                                        }\n                                       \n                                    }\n            \n                                })}\n            \n                            </Grid>\n                        ) : null} \n\n                    </Paper>\n                </Grid>\n                <Grid className={this.styles.gridContainer}>\n                    <Paper className={this.styles.paper}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.state.show_last_question && this.store.lastQuestion !== null ? \"Recently Closed\" : \"Previous Questions\"} </Typography>\n                        {this.state.show_last_question ? (\n                            <Grid className={this.styles.gridContainer}>\n                                {this.store.lastQuestion !== null ? (\n                                    this.store.lastQuestion.question_type === \"multiple_choice\" ? (\n                                        <PrevMCQ isLast={true} />\n                                    ) : this.store.lastQuestion.question_type === \"free_text\" ? (\n                                        <PrevFRQ isLast={true} />\n                                    ) : (<PrevSLQ isLast={true} />)\n                                ) : null } \n                            </Grid>\n                        ) : null}\n                        <Grid className={this.styles.gridContainer}>\n                            <Button onClick={this.handleClick} variant=\"outlined\" color=\"secondary\">\n                                {this.state.show_previous_questions ? \"Hide Previous Questions\" : \"Show All Previous Questions\"}\n                            </Button>\n                        </Grid>\n                        <Grid >\n                            {this.state.show_previous_questions ? (\n                                this.store.prevQuestions.length > 0 ? (\n                                    this.store.prevQuestions.map(q => {\n                                        if (q.question_type === 'free_text') {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <PrevFRQ questionId={q.id} />\n                                                </Grid>\n            \n                                            )\n                                        }\n                                        else {\n                                            if (q.question_type === \"multiple_choice\") {\n                                                return (\n                                                    <Grid item className={this.styles.gridItem} key={q.id}>\n                                                        <PrevMCQ questionId={q.id}/>\n                                                    </Grid>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <Grid item className={this.styles.gridItem} key={q.id}>\n                                                        <PrevSLQ questionId={q.id}/>\n                                                    </Grid>\n                                                )\n                                            }\n                                            \n                                        }\n            \n                                    })) : \n                                    <Typography color=\"secondary\"> There are no previous questions </Typography>\n                                ) : null}\n                        </Grid>\n                    </Paper>\n                </Grid>\n                \n\n            </Grid>\n        );\n\n    }\n}\nexport default withStyles(styles)(QuestionPage);","import React, { Component } from 'react';\n//import './style.css'; // Not our preferred way of importing style\nimport Header from '../../../components/Student/LoggedinHeader';  \nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { observer, inject } from 'mobx-react';\nimport { Link } from 'react-router-dom'\n\n@inject(\"store\")\n@observer\nclass CheckQuestions extends Component {\n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)        \n    }\n\n    componentDidMount() {\n        const { course_id } = this.props.location.state\n        this.apiStudentService.loadAllQuestions(course_id)\n        this.setState({\n            course_id: this.props.location.state\n        })\n    }\n    state = {\n        course_id: \"\"\n    }\n\n    render() {\n        if (this.store.questions['length'] !== 0) {\n            return (\n             <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header/>\n                \n                <Grid container direction='column' justify='center'>\n                    <Paper style={{padding:\"2%\"}}>\n                    <Button size=\"large\" variant=\"contained\" color=\"secondary\" width=\"100%\">\n                        <Link to={{\n                            pathname: '/student/questions',\n                            state : {\n                                course_id: this.state.course_id\n                            }\n                        }} style={{ \"color\": \"white\", \"text-decoration\": \"none\" }}> Open Questions </Link>\n\n                    </Button>\n                    </Paper>\n                </Grid>\n            </Grid>\n            )\n        } \n        else {\n            return (\n             <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header/>\n                {}\n\n                <Grid item>\n                    <Paper style={{paddingTop:\"1%\", paddingBottom:\"1%\"}}>\n                        <Typography variant=\"h5\" color=\"secondary\" style={{width:\"98%\", paddingLeft:\"1%\", paddingRight:\"1%\"}}> There are no questions for this course at the moment... </Typography> \n                    </Paper>\n                </Grid>\n            </Grid>\n            )\n\n        }\n    }\n}\nexport default CheckQuestions;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport StudentStore from '../../stores/StudentStore';\nimport APIStudentService from '../../services/APIStudentService';\nimport StudentHome from './StudentHome';\nimport QuestionPage from './StudentQuestionPage';\nimport CheckQuestions from './CheckQuestions';\nimport NoMatch from '../../components/NoMatch';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    content: {\n        marginLeft: drawerWidth,\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass StudentRoutes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = new StudentStore()\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    componentDidMount() {\n        this.apiStudentService.loadAllCourses()\n    }\n\n    render() {\n        return (\n            <div>\n                <Provider store={this.store}>\n                    <Switch>\n                        <Route exact path='/student' component={StudentHome} />\n                        <Route path='/student/checkquestions' component={CheckQuestions} />\n                        <Route path='/student/questions' component={QuestionPage}/>\n                        <Route component={NoMatch} />\n                    </Switch>\n                </Provider>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StudentRoutes);","import React, {Component} from \"react\"\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport logoprof from '../../../assets/clikrlogo2.png';\nimport background from '../../../assets/holder_hall.jpg';\n\nimport { inject } from 'mobx-react';\n\nconst styles = theme => ({\n   profTypography: {\n     color: theme.palette.primary.main,\n   },\n   gridContainer: {\n      paddingTop: theme.spacing.unit*8\n   },\n   gridItem: {\n         align: 'center',\n         textAlign: 'center',\n         paddingTop: theme.spacing.unit*4\n   },\n   root: {\n     flexGrow: 1,\n     height: '100vh',\n     width: '100vw',\n     backgroundImage: 'url(' + background + ')',\n     backgroundSize: 'cover',\n     backgroundRepeat: 'no-repeat',\n     backgroundPosition: 'center center',\n   },\n   appBar: {\n     top: 'auto',\n     bottom: 0,\n   },\n   loginCard: {\n     backgroundColor: theme.palette.secondary.main,\n     [theme.breakpoints.up('xs')]: {\n       maxWidth: 400,\n     },\n     [theme.breakpoints.down('xs')]: {\n       maxWidth: 300,\n     },\n   },\n });\n\n@inject(\"apiLoginService\")\nclass LoginProf extends Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         username: \"\",\n         password: \"\",\n         login: false,\n         createAccount: false\n      }\n\n      this.apiLoginService = props.apiLoginService;\n\n      this.styles = props.classes\n      this.handleChange = this.handleChange.bind(this)\n      this.handleLoginProfessor = this.handleLoginProfessor.bind(this)\n      this.handleCreateNewProfessor = this.handleCreateNewProfessor.bind(this)\n   }\n\n   handleChange(event) {\n      const {name, value} = event.target\n\n      this.setState({ [name]: value })\n   }\n\n   handleLoginProfessor() {\n      this.apiLoginService.loginProfessor(this.state.username, this.state.password)\n         .then(valid_login => {\n            if (valid_login) {\n               this.setState({ login: valid_login })\n            } else {\n               this.setState({ password: \"\" })\n            }\n         })\n   }\n\n   handleCreateNewProfessor() {\n      this.setState({ createAccount: true })\n   }\n\n   render() {\n      if (this.state.login) {\n         return <Redirect to={'/professor'} push />\n      }\n\n      if (this.state.createAccount) {\n         return <Redirect to={'/login/create-prof'} push />\n      }\n\n      return (\n         <div className={this.styles.root}>\n            <Grid container spacing={24} justify=\"center\" className={this.styles.gridContainer}>\n               <Grid item className={this.styles.clickGrid}>\n                  <Card className={this.styles.loginCard}>\n                     <Grid item align=\"center\">\n                        <img src={logoprof} alt=\"logo\" width={100}></img>\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h6\" color=\"primary\" align=\"center\"> Username </Typography>\n                        <TextField\n                                 name = 'username'\n                                 value={this.state.username}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h6\" color=\"primary\" align=\"center\"> Password </Typography>\n                        <TextField\n                                 name = 'password'\n                                 type = 'password'\n                                 value={this.state.password}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n\n                     </Grid>\n\n                     <CardActionArea onClick={this.handleLoginProfessor}>\n                        <CardContent>\n                           <Grid item container direction=\"column\" spacing={8}>\n                              <Grid item align=\"center\">\n                                 <Typography variant=\"h5\" gutterBottom className={this.styles.profTypography}>\n                                    Login\n                                 </Typography>\n                              </Grid>\n                           </Grid>\n                        </CardContent>\n                     </CardActionArea>\n\n                     <CardActionArea onClick={this.handleCreateNewProfessor}>\n                        <CardContent>\n                           <Grid item container direction=\"column\" spacing={8} >\n                              <Grid item align=\"center\">\n                                 <Typography variant=\"h5\" gutterBottom className={this.styles.profTypography}>\n                                    Create New Account\n                                 </Typography>\n                              </Grid>\n                           </Grid>\n                        </CardContent>\n                     </CardActionArea>\n\n                  </Card>\n               </Grid>\n            </Grid>\n\n            <AppBar position=\"fixed\" color=\"primary\" className={this.styles.appBar}>\n               <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n               >\n                  <Typography color=\"inherit\">\n                  {\"Created by mecakir, zsyang, afeng, lheimes, and czye.\"}\n                  </Typography>\n               </Grid>\n            </AppBar>\n         </div>\n      )\n   }\n}\n\nexport default withStyles(styles)(LoginProf);\n","import React, {Component} from \"react\"\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport logoprof from '../../../assets/clikrlogo2.png';\nimport background from '../../../assets/holder_hall.jpg';\n\nimport { inject } from 'mobx-react';\n\nconst styles = theme => ({\n   profTypography: {\n     color: theme.palette.primary.main,\n   },\n   gridContainer: {\n      paddingTop: theme.spacing.unit*8\n   },\n   gridItem: {\n         align: 'center',\n         textAlign: 'center',\n         paddingTop: theme.spacing.unit*3\n   },\n   root: {\n     flexGrow: 1,\n     height: '100vh',\n     width: '100vw',\n     backgroundImage: 'url(' + background + ')',\n     backgroundSize: 'cover',\n     backgroundRepeat: 'no-repeat',\n     backgroundPosition: 'center center',\n   },\n   appBar: {\n     top: 'auto',\n     bottom: 0,\n   },\n   loginCard: {\n     backgroundColor: theme.palette.secondary.main,\n     [theme.breakpoints.up('xs')]: {\n       maxWidth: 400,\n     },\n     [theme.breakpoints.down('xs')]: {\n       maxWidth: 300,\n     },\n   },\n });\n\n@inject(\"apiLoginService\")\nclass CreateProf extends Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         username: \"\",\n         password: \"\",\n         checkPassword: \"\",\n         firstName: \"\",\n         lastName: \"\",\n         createAccount: false\n      }\n\n      this.apiLoginService = props.apiLoginService;\n\n      this.styles = props.classes\n      this.handleChange = this.handleChange.bind(this)\n      this.handleCreateNewProfessor = this.handleCreateNewProfessor.bind(this)\n   }\n\n   handleChange(event) {\n      const {name, value} = event.target\n\n      this.setState({ [name]: value })\n   }\n\n   handleCreateNewProfessor() {\n      if (this.state.password === this.state.checkPassword) {\n         this.apiLoginService.createProf(this.state.username, this.state.password, this.state.firstName, this.state.lastName)\n            .then(user_created => {\n               this.setState({ createAccount: user_created })\n            })\n      } else {\n         this.setState({ password: \"\",  checkPassword: \"\"})\n      }\n   }\n\n   render() {\n      if (this.state.createAccount) {\n         return <Redirect to={'/login/prof'} push />\n      }\n\n      return (\n         <div className={this.styles.root}>\n            <Grid container spacing={24} justify=\"center\" className={this.styles.gridContainer}>\n               <Grid item className={this.styles.clickGrid}>\n                  <Card className={this.styles.loginCard}>\n                     <Grid item align=\"center\">\n                        <img src={logoprof} alt=\"logo\" width={100}></img>\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"primary\" align=\"center\"> Username </Typography>\n                        <TextField\n                                 name = 'username'\n                                 value={this.state.username}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"primary\" align=\"center\"> First Name </Typography>\n                        <TextField\n                                 name = 'firstName'\n                                 value={this.state.firstName}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"primary\" align=\"center\"> Last Name </Typography>\n                        <TextField\n                                 name = 'lastName'\n                                 value={this.state.lastName}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"primary\" align=\"center\"> Password </Typography>\n                        <TextField\n                                 name = 'password'\n                                 type = 'password'\n                                 value={this.state.password}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"primary\" align=\"center\"> Enter Password Again </Typography>\n                        <TextField\n                                 name = 'checkPassword'\n                                 type = 'password'\n                                 value={this.state.checkPassword}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n\n                     </Grid>\n\n                     <CardActionArea onClick={this.handleCreateNewProfessor}>\n                        <CardContent>\n                           <Grid item container direction=\"column\" spacing={8} >\n                              <Grid item align=\"center\">\n                                 <Typography variant=\"h5\" gutterBottom className={this.styles.profTypography}>\n                                    Create New Account\n                                 </Typography>\n                              </Grid>\n                           </Grid>\n                        </CardContent>\n                     </CardActionArea>\n\n                  </Card>\n               </Grid>\n            </Grid>\n\n            <AppBar position=\"fixed\" color=\"primary\" className={this.styles.appBar}>\n               <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n               >\n                  <Typography color=\"inherit\">\n                  {\"Created by mecakir, zsyang, afeng, lheimes, and czye.\"}\n                  </Typography>\n               </Grid>\n            </AppBar>\n         </div>\n      )\n   }\n}\n\nexport default withStyles(styles)(CreateProf);\n","import React, {Component} from \"react\"\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport logostudent from '../../../assets/clikrlogo.png';\nimport background from '../../../assets/nassau_hall.jpg';\n\nimport { inject } from 'mobx-react';\n\nconst styles = theme => ({\n   studentTypography: {\n     color: theme.palette.secondary.main,\n   },\n   gridContainer: {\n      paddingTop: theme.spacing.unit*8\n   },\n   gridItem: {\n         align: 'center',\n         textAlign: 'center',\n         paddingTop: theme.spacing.unit*4\n   },\n   root: {\n     flexGrow: 1,\n     height: '100vh',\n     width: '100vw',\n     backgroundImage: 'url(' + background + ')',\n     backgroundSize: 'cover',\n     backgroundRepeat: 'no-repeat',\n     backgroundPosition: 'center center',\n   },\n   appBar: {\n     top: 'auto',\n     bottom: 0,\n   },\n   loginCard: {\n     backgroundColor: theme.palette.primary.main,\n     [theme.breakpoints.up('xs')]: {\n       maxWidth: 400,\n     },\n     [theme.breakpoints.down('xs')]: {\n       maxWidth: 300,\n     },\n   },\n });\n\n@inject(\"apiLoginService\")\nclass LoginStudent extends Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         username: \"\",\n         password: \"\",\n         login: false,\n         createAccount: false\n      }\n\n      this.apiLoginService = props.apiLoginService;\n\n      this.styles = props.classes\n      this.handleChange = this.handleChange.bind(this)\n      this.handleLoginStudent = this.handleLoginStudent.bind(this)\n      this.handleCreateNewStudent = this.handleCreateNewStudent.bind(this)\n   }\n\n   handleChange(event) {\n      const {name, value} = event.target\n\n      this.setState({ [name]: value })\n   }\n\n   handleLoginStudent() {\n      this.apiLoginService.loginStudent(this.state.username, this.state.password)\n         .then(valid_login => {\n            if (valid_login) {\n               this.setState({ login: valid_login })\n            } else {\n               this.setState({ password: \"\" })\n            }\n         })\n   }\n\n   handleCreateNewStudent() {\n      this.setState({ createAccount: true })\n   }\n\n   render() {\n      if (this.state.login) {\n         return <Redirect to={'/student'} push />\n      }\n\n      if (this.state.createAccount) {\n         return <Redirect to={'/login/create-student'} push />\n      }\n\n      return (\n         <div className={this.styles.root}>\n            <Grid container spacing={24} justify=\"center\" className={this.styles.gridContainer}>\n               <Grid item className={this.styles.clickGrid}>\n                  <Card className={this.styles.loginCard}>\n                     <Grid item align=\"center\">\n                        <img src={logostudent} alt=\"logo\" width={100}></img>\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> Username </Typography>\n                        <TextField\n                                 name = 'username'\n                                 value={this.state.username}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> Password </Typography>\n                        <TextField\n                                 name = 'password'\n                                 type = 'password'\n                                 value={this.state.password}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n\n                     </Grid>\n\n                     <CardActionArea onClick={this.handleLoginStudent}>\n                        <CardContent>\n                           <Grid item container direction=\"column\" spacing={8}>\n                              <Grid item align=\"center\">\n                                 <Typography variant=\"h5\" gutterBottom className={this.styles.studentTypography}>\n                                    Login\n                                 </Typography>\n                              </Grid>\n                           </Grid>\n                        </CardContent>\n                     </CardActionArea>\n\n                     <CardActionArea onClick={this.handleCreateNewStudent}>\n                        <CardContent>\n                           <Grid item container direction=\"column\" spacing={8} >\n                              <Grid item align=\"center\">\n                                 <Typography variant=\"h5\" gutterBottom className={this.styles.studentTypography}>\n                                    Create New Account\n                                 </Typography>\n                              </Grid>\n                           </Grid>\n                        </CardContent>\n                     </CardActionArea>\n\n                  </Card>\n               </Grid>\n            </Grid>\n\n            <AppBar position=\"fixed\" color=\"primary\" className={this.styles.appBar}>\n               <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n               >\n                  <Typography color=\"inherit\">\n                  {\"Created by mecakir, zsyang, afeng, lheimes, and czye.\"}\n                  </Typography>\n               </Grid>\n            </AppBar>\n         </div>\n      )\n   }\n}\n\nexport default withStyles(styles)(LoginStudent);\n","import React, {Component} from \"react\"\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport logostudent from '../../../assets/clikrlogo.png';\nimport background from '../../../assets/nassau_hall.jpg';\n\nimport { inject } from 'mobx-react';\n\nconst styles = theme => ({\n   studentTypography: {\n     color: theme.palette.secondary.main,\n   },\n   gridContainer: {\n      paddingTop: theme.spacing.unit*8\n   },\n   gridItem: {\n         align: 'center',\n         textAlign: 'center',\n         paddingTop: theme.spacing.unit*3\n   },\n   root: {\n     flexGrow: 1,\n     height: '100vh',\n     width: '100vw',\n     backgroundImage: 'url(' + background + ')',\n     backgroundSize: 'cover',\n     backgroundRepeat: 'no-repeat',\n     backgroundPosition: 'center center',\n   },\n   appBar: {\n     top: 'auto',\n     bottom: 0,\n   },\n   loginCard: {\n     backgroundColor: theme.palette.primary.main,\n     [theme.breakpoints.up('xs')]: {\n       maxWidth: 400,\n     },\n     [theme.breakpoints.down('xs')]: {\n       maxWidth: 300,\n     },\n   },\n });\n\n@inject(\"apiLoginService\")\nclass CreateStudent extends Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         username: \"\",\n         password: \"\",\n         checkPassword: \"\",\n         firstName: \"\",\n         lastName: \"\",\n         createAccount: false\n      }\n\n      this.apiLoginService = props.apiLoginService;\n\n      this.styles = props.classes\n      this.handleChange = this.handleChange.bind(this)\n      this.handleCreateNewStudent = this.handleCreateNewStudent.bind(this)\n   }\n\n   handleChange(event) {\n      const {name, value} = event.target\n\n      this.setState({ [name]: value })\n   }\n\n   handleCreateNewStudent() {\n      if (this.state.password === this.state.checkPassword) {\n         this.apiLoginService.createStudent(this.state.username, this.state.password, this.state.firstName, this.state.lastName)\n            .then(user_created => {\n               this.setState({ createAccount: user_created })\n            })\n      } else {\n         this.setState({ password: \"\",  checkPassword: \"\"})\n      }\n   }\n\n   render() {\n      if (this.state.createAccount) {\n         return <Redirect to={'/login/student'} push />\n      }\n\n      return (\n         <div className={this.styles.root}>\n            <Grid container spacing={24} justify=\"center\" className={this.styles.gridContainer}>\n               <Grid item className={this.styles.clickGrid}>\n                  <Card className={this.styles.loginCard}>\n                     <Grid item align=\"center\">\n                        <img src={logostudent} alt=\"logo\" width={100}></img>\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> Username </Typography>\n                        <TextField\n                                 name = 'username'\n                                 value={this.state.username}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> First Name </Typography>\n                        <TextField\n                                 name = 'firstName'\n                                 value={this.state.firstName}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> Last Name </Typography>\n                        <TextField\n                                 name = 'lastName'\n                                 value={this.state.lastName}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> Password </Typography>\n                        <TextField\n                                 name = 'password'\n                                 type = 'password'\n                                 value={this.state.password}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> Enter Password Again </Typography>\n                        <TextField\n                                 name = 'checkPassword'\n                                 type = 'password'\n                                 value={this.state.checkPassword}\n                                 onChange={this.handleChange}\n                        />\n                     </Grid>\n\n                     <Grid item className={this.styles.gridItem}>\n\n                     </Grid>\n\n                     <CardActionArea onClick={this.handleCreateNewStudent}>\n                        <CardContent>\n                           <Grid item container direction=\"column\" spacing={8} >\n                              <Grid item align=\"center\">\n                                 <Typography variant=\"h5\" gutterBottom className={this.styles.studentTypography}>\n                                    Create New Account\n                                 </Typography>\n                              </Grid>\n                           </Grid>\n                        </CardContent>\n                     </CardActionArea>\n\n                  </Card>\n               </Grid>\n            </Grid>\n\n            <AppBar position=\"fixed\" color=\"primary\" className={this.styles.appBar}>\n               <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n               >\n                  <Typography color=\"inherit\">\n                  {\"Created by mecakir, zsyang, afeng, lheimes, and czye.\"}\n                  </Typography>\n               </Grid>\n            </AppBar>\n         </div>\n      )\n   }\n}\n\nexport default withStyles(styles)(CreateStudent);\n","import { loginProfessorAPI, createProfessorAPI, loginStudentAPI, createStudentAPI } from '../utils/api-facade'\n\nexport default class APILoginService {\n   \n   async loginProfessor(username, password) {\n      return loginProfessorAPI(username, password)\n         .then(res => {\n            return res.json().data.valid_login;\n         })\n         .catch(error => {\n            console.log(error)\n            this._checkAuth(error)\n            return []\n         })\n   }\n\n   async createProf(username, password, firstName, lastName) {\n      return createProfessorAPI(username, password, firstName, lastName)\n         .then(res => {\n            return res.data.message\n         })\n         .catch(error => {\n            console.log(error)\n            this._checkAuth(error)\n            return []\n         })\n   }\n\n   async loginStudent(username, password) {\n      return loginStudentAPI(username, password)\n         .then(res => {\n            return res.json().data.valid_login;\n         })\n         .catch(error => {\n            console.log(error)\n            this._checkAuth(error)\n            return []\n         })\n   }\n\n   async createStudent(username, password, firstName, lastName) {\n      return createStudentAPI(username, password, firstName, lastName)\n         .then(res => {\n            return res.data.message\n         })\n         .catch(error => {\n            console.log(error)\n            this._checkAuth(error)\n            return []\n         })\n   }\n\n   _checkAuth(error) {\n      if (error.response !== undefined) {\n          if (error.response.status === 401)\n              window.location.replace('/')\n      }\n   }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LoginProf from \"./LoginProf\"\nimport CreateProf from \"./CreateProf\"\nimport LoginStudent from \"./LoginStudent\"\nimport CreateStudent from \"./CreateStudent\"\nimport APILoginService from '../../services/APILoginService';\nimport NoMatch from '../../components/NoMatch';\n\nconst styles = theme => ({});\n\nclass LoginRoutes extends Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.apiLoginService = new APILoginService()\n    }\n\n    render() {\n        return(\n            <div>\n                <Provider apiLoginService={this.apiLoginService}>\n                    <Switch>\n                        <Route path='/login/prof' component={LoginProf} />\n                        <Route path='/login/student' component={LoginStudent} />\n                        <Route path='/login/create-prof' component={CreateProf} />\n                        <Route path='/login/create-student' component={CreateStudent} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                </Provider>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(LoginRoutes);\n","import React, { Component } from 'react';\nimport './style.css'; // Not our preferred way of importing style\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport logoprof from '../../assets/clikrlogo2.png';\nimport logostudent from '../../assets/clikrlogo.png';\nimport background from '../../assets/boathouse.jpeg';\n\n\nconst styles = theme => ({\n  studentTypography: {\n    color: theme.palette.secondary.main,\n  },\n  profTypography: {\n    color: theme.palette.primary.main,\n  },\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    width: '100vw',\n    backgroundImage: 'url(' + background + ')',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center center',\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  studentcard: {\n    backgroundColor: theme.palette.primary.main,\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: 400,\n    },\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: 300,\n    },\n  },\n  profcard: {\n    backgroundColor: theme.palette.secondary.main,\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: 400,\n    },\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: 300,\n    },\n    marginBottom: 16,\n  }\n});\n\n\nclass Home extends Component {\n\n  state = {\n    toStudent: false,\n    toProf: false\n  }\n\n  constructor(props) {\n    super(props)\n    this.styles = props.classes\n  }\n\n  handleLoginProf = () => {\n    this.setState({\n      toProf: true\n    })\n  }\n\n  handleLoginStudent = () => {\n    this.setState({\n      toStudent: true\n    })\n  }\n\n  render() {\n    if (this.state.toProf) {\n      return <Redirect to={'/login/prof'} push />\n    }\n    \n    if (this.state.toStudent) {\n      return <Redirect to={'/login/student'} push />\n    }\n\n    return (\n      <div className={this.styles.root}>\n        <Grid container spacing={24} justify=\"center\">\n          <Grid item className={this.styles.clickGrid}>\n            <Card className={this.styles.studentcard}>\n              <CardActionArea onClick={this.handleLoginStudent}>\n                <CardContent>\n                  <Grid item container direction=\"column\" spacing={16} >\n                    <Grid item align=\"center\">\n                      <img src={logostudent} alt=\"logo\" width={100}></img>\n                    </Grid>\n                    <Grid item align=\"center\">\n                      <Typography variant=\"h2\" gutterBottom className={this.styles.studentTypography}>\n                        STUDENT LOGIN\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n\n          <Grid item className={this.styles.clickGrid}>\n            <Card className={this.styles.profcard}>\n              <CardActionArea onClick={this.handleLoginProf}>\n                <CardContent>\n                  <Grid item container direction=\"column\" spacing={16} >\n                    <Grid item align=\"center\">\n                      <img src={logoprof} alt=\"logo\" width={100}></img>\n                    </Grid>\n                    <Grid item align=\"center\">\n                      <Typography variant=\"h2\" gutterBottom className={this.styles.profTypography}>\n                        TEACHER LOGIN\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <AppBar position=\"fixed\" color=\"primary\" className={this.styles.appBar}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n          >\n            <Typography color=\"inherit\">\n              {\"Created by mecakir, zsyang, afeng, lheimes, and czye.\"}\n            </Typography>\n          </Grid>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Home);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProfessorRoutes from './Professor'\nimport StudentRoutes from './Student'\nimport LoginRoutes from './Login';\nimport NoMatch from '../components/NoMatch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from './Home';\nimport ProfessorStore from '../stores/ProfessorStore';\nimport APIProfService from '../services/APIProfService';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#E9C46A',\n            dark: '#F4A261',\n            light: '#2A9D8F',\n        },\n        secondary: {\n            main: '#264653'\n        },\n        accent: {\n            main: '#E76F51',\n        },\n        type: 'light'\n    },\n        typography: {\n        useNextVariants: true,\n    },\n});\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.profStore = new ProfessorStore()\n        this.apiProfService = new APIProfService(this.profStore) \n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router>\n                    <div>\n                        <Switch>\n                            <Route exact path='/' component={Home} />\n                            <Route path='/login' component={LoginRoutes} />\n                            <Route path=\"/professor\" component={ProfessorRoutes} />\n                            <Route path=\"/student\" component={StudentRoutes} />\n                            <Route component={NoMatch} />\n                        </Switch>\n                    </div>\n                </Router>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './config/serviceWorker';\nimport App from './routes/app';\nimport { configure } from 'mobx';\n\n// enable MobX strict mode\nconfigure({ enforceActions: \"observed\" });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/clikrlogo2.f8a6c63b.png\";","module.exports = __webpack_public_path__ + \"static/media/clikrlogo.6c47d62c.png\";"],"sourceRoot":""}