{"version":3,"sources":["assets/clikrlogo2.png","assets/clikrlogo.png","assets/background.jpeg","config/serviceWorker.js","components/SideMenuBar/index.jsx","constants/api.js","utils/api-facade.js","services/APIProfService.js","components/TopMenuBar/index.jsx","models/LectureObj.js","stores/ProfessorStore.js","components/AddStudentsModal/index.jsx","components/DuplicateCourseModal/index.jsx","components/CourseListItemNavEdit/index.jsx","components/ListOfAllCourses/index.jsx","components/DeleteCoursesList/index.jsx","components/AllCoursesFrame/index.jsx","components/ListOfArchivedCourses/index.jsx","components/ArchivedCoursesFrame/index.jsx","routes/Professor/ProfessorHome/index.jsx","models/CourseObj.js","routes/Professor/NewCourse/index.jsx","components/EditLectureDialog/index.jsx","components/LectListItemNavEdit/index.jsx","components/ListOfAllLectures/index.jsx","components/CourseInfo/index.jsx","components/DeleteLecturesList/index.jsx","components/AllLecturesFrame/index.jsx","routes/Professor/ViewLectures/index.jsx","components/AddQuestionModal/index.jsx","components/OpenClosedButton/index.jsx","components/BaseStatsComponent/index.jsx","components/MCQuestionStats/index.jsx","components/FreeTextStats/index.jsx","components/SliderStats/index.jsx","components/ViewStatsModal/index.jsx","models/QuestionObj.js","components/EditFRQDialog/index.jsx","components/EditMCQDialog/index.jsx","components/EditSLQDialog/index.jsx","components/QuestionListItem/index.jsx","components/DeleteQuestionsList/index.jsx","components/AllQuestionsFrame/index.jsx","routes/Professor/ViewQuestions/index.jsx","routes/Professor/AddMCQuestion/index.jsx","routes/Professor/AddFreeTextQuestion/index.jsx","routes/Professor/AddSliderQuestion/index.jsx","routes/Professor/AddLecture/index.jsx","components/NoMatch/index.jsx","routes/Professor/index.jsx","stores/StudentStore.js","services/APIStudentService.js","components/Student/StudentClassCards/index.js","components/Student/Buttons/LogoutButton/index.js","components/Student/LoggedinHeader/index.js","components/Student/AddCourseDialog/index.jsx","services/SocketIOStudentService.js","routes/Student/StudentHome/index.js","components/Student/Questions/FRQ/index.js","components/Student/Questions/MCQ/index.js","components/Student/Questions/SLQ/index.jsx","components/Student/Questions/PrevMCQ/index.js","components/Student/Questions/PrevFRQ/index.js","components/Student/Questions/PrevSLQ/index.jsx","routes/Student/StudentQuestionPage/index.js","routes/Student/CheckQuestions/index.js","routes/Student/index.jsx","routes/Home/index.jsx","routes/Login/index.jsx","routes/app.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","SideMenuBar","inject","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","selectedCourse","selectedLecture","styles","classes","profStore","undefined","pathname","length","url_parts_arr","split","setState","getLectureWithId","course_id","id","history","push","_this2","courses","filter","courseObj","is_current","react_default","a","createElement","Grid_default","container","direction","justify","alignItems","Drawer_default","className","drawer","variant","paper","drawerPaper","anchor","item","src","logo","alt","height","Divider_default","List_default","map","index","lectures","getCourseLectures","key","ListItem_default","hover","button","onClick","handleCourseClick","selected","ListItemText_default","disableTypography","primary","Typography_default","type","listtext","title","secondary","listsubtext","term","year","ListItemSecondaryAction_default","IconButton_default","color","disabled","handleExpand","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","lectureObj","innerIndex","handleLectureClick","nestedListtext","React","Component","withRouter","withStyles","theme","width","flexShrink","palette","main","dark","titletext","paddingTop","spacing","unit","paddingLeft","backgroundColor","&:hover","toolbar","mixins","socketioURL","baseURL","getStudentCoursesAPI","axios","get","postEnrollStudentAPI","code","post","enroll_code","postAnswerQuestionAPI","answer","question_id","defaults","withCredentials","APIProfService","professorStore","then","res","data","name","catch","error","console","log","_checkAuth","archiveCourseAPI","updateCourseData","course","message","_this3","duplicateCourseAPI","lecture_id","_this4","exportGradesLectureAPI","_this5","exportGradesCourseAPI","_this6","dataLoaded","Promise","updateData","_this7","updateAllCourseData","_this8","getProfAnswers","_this9","getQuestionsForLectureAPI","_this10","action","postOpenQuestionAPI","openQuestion","_this11","postCloseQuestionAPI","closeQuestion","_this12","postCloseAllQuestionsAPI","closeAllQuestionsForLecture","lecture","_this13","date","description","open_date","openDate","close_date","closeDate","scheduled","postNewLectureAPI","newLec","find","questions","addLecture","_this14","dept","coursenum","num","postNewCourseAPI","newCourse","addCourse","_this15","delete","removeCourse","loadData","courseId","courseTitle","course_title","_this16","patch","updateCourse","_this17","patchUpdateCourseDataAPI","_this18","updateLecture","questionObj","question","_this19","question_type","question_title","question_image","correct_answer","option1","option2","option3","option4","option5","number_of_options","word_limit","lower_label","upper_label","updateQuestion","_this20","removeLecture","parentLectureId","_this21","removeQuestion","_this22","creator_id","postNewQuestionAPI","newQ","q","addQuestion","_this23","response","status","replace","TopMenuBar","anchorEl","goHome","logout","userName","handleMenu","event","currentTarget","handleClose","handleLogout","handleHome","store","apiProfService","getName","getLogoutProf","Redirect","to","AppBar_default","position","appBar","Toolbar_default","homeButton","SvgIcon_default","fill","d","style","float","marginRight","align","aria-haspopup","viewBox","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","defineProperty","breakpoints","up","marginLeft","concat","LectureObj","ProfessorStore","x","QuestionObj","lec","slice","sort","b","created_at","oldCourse","oldLecture","getLectureById","remove","parent_lecture_id","_i","_keys","keys","is_open","opened_at","Date","now","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","_courses","observable","AddStudentsModal","handleOpen","handleSubmit","joinCode","nextProps","Tooltip_default","placement","PersonAdd_default","Modal_default","aria-labelledby","aria-describedby","top","left","transform","gutterBottom","Button_default","AddStudentsModalWrapped","background","boxShadow","shadows","padding","display","flexWrap","textField","dense","marginTop","menu","DuplicateCourseModal","newYear","newTerm","handleChange","_event$target","target","duplicateCourse","FileCopy_default","onSubmit","noValidate","autoComplete","TextField_default","label","onChange","margin","DuplicateCourseModalWrapped","flexDirection","CourseListItemNavEdit","editMode","newTitle","nav","courseYear","courseTerm","courseCode","toHome","handleEdit","handleEditOpen","handleEditClose","changeCourseTitle","handleToCourse","handleArchive","archiveCourse","handleExportGrades","exportGradesCourse","element","document","file","Blob","fileData","href","URL","createObjectURL","download","fileName","body","appendChild","click","divider","FormControl_default","InputBase_default","input","bootstrapInput","Done_default","iconDone","ImportExport_default","components_AddStudentsModal","Edit_default","components_DuplicateCourseModal","archive","Unarchive_default","Archive_default","light","iconEdit","borderRadius","common","white","border","fontSize","transition","transitions","create","fontFamily","join","&:focus","borderColor","ListOfAllCourses","referrerCourseId","courseList","components_CourseListItemNavEdit","card","minWidth","DeleteCoursesList","referrerLectureId","delCourses","checked","getDeletions","shouldDelete","forEach","fullWidth","FormGroup_default","c","FormControlLabel_default","control","Checkbox_default","checkBox","AllCoursesFrame","toNewCourse","deleteMode","deletions","delTitles","delIds","handleNewCourseClick","handleDelete","courseArr","i","handleFinalDeletion","deleteCourses","list","components_ListOfAllCourses","deleteAction","components_DeleteCoursesList","Card_default","CardContent_default","bind","Delete_default","Icon_default","icon","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","ListOfArchivedCourses","ArchivedCoursesFrame","showArchive","prevState","objectSpread","components_ListOfArchivedCourses","titleString","delButton","containerDiv","handleToggleArchive","ProfessorHome","components_AllCoursesFrame","components_ArchivedCoursesFrame","CourseObj","ProfessorNewCourse","assertThisInitialized","preventDefault","multiline","subcontainer","EditLectureDialog","modifyDate","setUTCDate","getDate","setUTCHours","setUTCMinutes","handleDateChange","selectedDate","handleOpenDateChange","handleValidation","handleCloseDateChange","handleCheck","_event$target2","apiService","editLecture","titleValid","formValid","dateValid","getTime","validateForm","scroll","gridItem","requiredtitle","material_ui_pickers_esm","utils","DateFnsUtils","dateField","gridItemButton","LectListItemNavEdit","_e$target","changeLectureTitle","handleToLecture","exportGradesLecture","components_EditLectureDialog","ListOfAllLectures","components_LectListItemNavEdit","CourseInfo","parentCourse","changeCourseData","getCourseWithId","Paper_default","editRoot","elevation","xs","textFieldShort","textFieldLong","root","termYear","gutters","paddingBottom","fontStyle","DeleteLecturesList","delLectures","lect","AllLecturesFrame","toNewLecture","referrerLectureIndex","numLects","handleNewLectureClick","lectArr","deleteLectures","components_ListOfAllLectures","course_info","components_CourseInfo","components_DeleteLecturesList","ProfessorViewLectures","components_AllLecturesFrame","params","AddQuestionModal","toNewMCQuestion","toNewFreeTextQuestion","toNewSliderQuestion","lectureId","handleMC","handleFreeText","handleSlider","aria-label","vert","index_es","AddQuestionModalWrapped","justifyContent","socket","socketIOClient","OpenClosedButton","isOpen","questionId","parentLecture","recentlyOpenedId","handleToUpdate","recentlyClosedId","handleListClose","emit","handleClick","handleBtnClick","startLectureBtn","prettyMs","require","BaseStatsComponent","time","isOn","questionTitle","hidden","startTimer","stopTimer","resetTimer","timer","setInterval","clearInterval","Timer_default","secDecimalDigits","children","responsesNumber","marginBottom","MCQuestionStats","update","override","global","legend","tooltips","enabled","selectedQuestionId","getQuestionWithId","labels","currLabel","loadAnswers","msg","values","answers","datasets","count","on","j","removeAllListeners","options","scales","yAxes","ticks","beginAtZero","userCallback","Math","floor","components_BaseStatsComponent","es","responses","next_question","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","scope","SliderStats","updateChartLabels","updateChartData","ViewStatsModal","stats","components_MCQuestionStats","FreeTextStats","components_SliderStats","InsertChartOutlined_default","ViewStatsModalWrapped","closed_at","modified_at","MultipleChoiceQuestionObj","_QuestionObj","inherits","SliderQuestionObj","_QuestionObj2","FreeTextQuestionObj","_QuestionObj3","EditFRQDialog","getEdits","removeImage","encodeImageFileAsURL","files","reader","FileReader","onloadend","result","readAsDataURL","required","helperText","buttonItem","paddingRight","answersValid","new_options","EditMCQDialog_createForOfIteratorHelper","option","_Object$values","val","EditMCQDialog","answer_choices","should_delete","titleError","hasAnswers","optionsValid","delete_mode","deleteDisabled","deleteConfirmDisabled","handleOption","validateFields","handleSetNumberOfOptions","option_string","toString","handleDeleteQueue","numRemainingOptions","_i3","_Object$keys","substring","correct","Number","_i4","_Object$keys2","k","_i5","_Object$keys3","errors","has_answers","InputLabel_default","htmlFor","Select_default","select","inputProps","setDeleteMode","answerBoundOptions","answerBoundOptionsRange","EditSLQDialog","lower","upper","answer_bounds","range","rangeVal","equality_operators","slider_value","has_correct_answer","custom_labels","fieldsValid","lower_bound","upper_bound","setCorrectAnswer","validateBoundsAndOperators","setCustomLabels","validateAnswers","setCorrectBounds","prop","answerBounds","isInteger","round","handleEqualityOperator","handleTitleChange","validateTitle","handleLabelsChange","handleLabelsValidation","handleSliderChange","handleSetRange","equalityOperators","lower_operator","getOperatorCondition","_this$props$questionO","correct_arr","bound","side","operator","allValid","isInRange","valid","condition","align-items","entry","Switch_default","sm","RadioGroup_default","Radio_default","InputProps","startAdornment","InputAdornment_default","endAdornment","percentText","wordBreak","titleWrap","maxWidth","titleContainer","slidercontainer","gridContainer","andor","QuestionListItem","mode","prevProps","number","components_OpenClosedButton","components_EditFRQDialog","components_EditMCQDialog","components_EditSLQDialog","components_ViewStatsModal","DeleteQuestionsList","delQuestions","closed_questions","checkBoxContainer","AllQuestionsFrame","toNewQuestion","lectureTitle","handleNewQuestionClick","handleDeleteQuestions","disableTopButton","handleEditQuestions","handleRestoreMode","restoreTopButton","editQuestion","mcqEditDetect","qArr","handleDeletion","nextLecture","components_AddQuestionModal","components_DeleteQuestionsList","components_QuestionListItem","ProfessorViewQuestions","mcqStatsUpdated","updateMCQStats","editDeleteMode","_loop","handleListClickClose","deleteQuestions","btnStatus","convertQuestionIndexToId","currentQuestionIndex","openQuestionId","currentQuestionId","handleListClick","convertQuestionIdToIndex","closeAllQuestions","text","textQ","grid","md","components_AllQuestionsFrame","getSortedQuestionsCopy","sortedQuestionsCopy","showCodeBtn","AddMCQuestion_createForOfIteratorHelper","ProfessorAddMCQuestion","toQuestions","question_image_string","uploading","num_options","buttonContainer","ProfessorAddFreeTextQuestion","correct_answer_valid","ProfessorAddSliderQuestion","Slider_default","min","max","step","ProfessorAddLecture","toLecture","lectString","NoMatch","ProfessorRoutes","index_module","CssBaseline_default","Route","path","Hidden_default","xsDown","implementation","content","Switch","exact","_content","StudentStore","socketIOStatus","lastQuestion","prevQuestions","lastAnswer","original_question","updatedQuestion","oldQuestion","indexOf","addOneQuestion","APIStudentService","studentStore","updateAllCourses","getStudentQuestionsByCourseAPI","updateAllQuestions","getStudentPrevQuestionsByCourseAPI","updateAllPrevQuestions","deleteDropCourseAPI","dropCourse","ClassCard","link","colorStyle","apiStudentService","colors","orangeCard","greenCard","yellowCard","navyCard","colorIndex","Link","typography","disableFocusListener","size","textDecoration","LogoutButton","getLogoutStudent","Header","Buttons_LogoutButton","AddCourseDialog","errorMsg","_this$setState","toUpperCase","enroll","loadAllCourses","enrollCourse","Fab_default","SocketIOStudentService","setSocketIOStatus","setTimeout","checkConnection","resetQuestions","updateLastQuestion","removeQuestionById","clearTimeout","connected","StudentHome","course_ids","socketIOStudentService","currentCourses","archivedCourses","showString","LoggedinHeader","typeography","Student_AddCourseDialog","StudentClassCards","Transition","Slide_default","assign","FRQ","sent","dialogue","postAnswer","handleCloseSubmit","updateLastAnswer","TransitionComponent","keepMounted","MCQ","answerchoices","qstring","answerOption","SLQ","percentContainer","whiteTypography","PrevMCQ","isLast","getPrevQuestionWithId","background_style","neutralAnswer","correctAnswer","parseInt","wrongAnswer","PrevFRQ","backgroundStyle","PrevSLQ","expression","operatorToComparison","exp1","exp2","string","operatorToWord","checkAnswer","getAnswerText","QuestionPage","show_previous_questions","show_last_question","dots","loadAllPrevQuestions","reset","subscribe","detectOpenQuestion","detectCloseQuestion","getAllQuestions","listen","startCheckingConnection","stopCheckingConnection","getNumberOfQuestions","Questions_FRQ","Questions_SLQ","Questions_MCQ","Questions_PrevMCQ","Questions_PrevFRQ","Questions_PrevSLQ","CheckQuestions","loadAllQuestions","text-decoration","StudentRoutes","flexGrow","Home","toStudent","toProf","handleLoginProf","handleLoginStudent","clickGrid","studentcard","CardActionArea_default","logostudent","studentTypography","profcard","logoprof","profTypography","_studentcard","_profcard","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","bottom","down","Login","url_add_on_1","url_add_on_2","end_sub","valueOf","createMuiTheme","accent","useNextVariants","App","core_styles","BrowserRouter","configure","enforceActions","ReactDOM","render","app","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d8171b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clikrlogo2.f8a6c63b.png\";","module.exports = __webpack_public_path__ + \"static/media/clikrlogo.6c47d62c.png\";","module.exports = __webpack_public_path__ + \"static/media/background.d8b36ae3.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withRouter } from \"react-router\";\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer, inject } from 'mobx-react';\nimport logo from '../../assets/clikrlogo2.png';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    listtext: {\n        color: theme.palette.primary.main\n    },\n    listsubtext: {\n        color: theme.palette.primary.dark\n    },\n    titletext: {\n        color: theme.palette.primary.main,\n        paddingTop: theme.spacing.unit*2\n    },\n    nestedListtext: {\n        color: theme.palette.primary.main,\n        paddingLeft: theme.spacing.unit*2,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hover: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.secondary.dark\n          }\n    },\n    toolbar: theme.mixins.toolbar,\n});\n\n@inject('profStore')\n@observer\nclass SideMenuBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n    }\n\n    state = {\n        open: null,\n        selectedCourse: 0,\n        selectedLecture: 0,\n    }\n    componentDidMount() {\n        if (this.props.location.pathname !== undefined) {\n            if (this.props.location.pathname.length !== \"\") {\n                const url_parts_arr = this.props.location.pathname.split(\"/\");\n                if (url_parts_arr[3] === \"questions\") {\n                    this.setState({ selectedLecture: url_parts_arr[2], open: this.profStore.getLectureWithId(url_parts_arr[2]).course_id, selectedCourse: this.profStore.getLectureWithId(url_parts_arr[2]).course_id})\n                }\n                if (url_parts_arr[3] === \"lectures\") {\n                    this.setState({ selectedLecture:0, selectedCourse: url_parts_arr[2]})\n                }\n            }\n        }\n    }\n    componentDidUpdate() {\n        if (this.props.location.pathname !== undefined) {\n            if (this.props.location.pathname.length !== \"\") {\n                const url_parts_arr = this.props.location.pathname.split(\"/\");\n                if (url_parts_arr[3] === \"questions\" && this.state.selectedLecture !== url_parts_arr[2]) {\n                    this.setState({ selectedLecture: url_parts_arr[2], open: this.profStore.getLectureWithId(url_parts_arr[2]).course_id, selectedCourse: this.profStore.getLectureWithId(url_parts_arr[2]).course_id })\n                }\n                if (url_parts_arr[3] === \"lectures\" && this.state.selectedCourse !== url_parts_arr[2]) {\n                    this.setState({ selectedLecture:0, selectedCourse: url_parts_arr[2]})\n                }\n                if (url_parts_arr.length === 2) {\n                    if (this.state.selectedLecture !== 0 ||this.state.selectedCourse !== 0) {\n                        this.setState({ selectedLecture: 0, selectedCourse: 0 })\n                    }\n                }\n            }\n        }\n    }\n\n    handleCourseClick(id) {\n        this.props.history.push('/professor/' + id + '/lectures');\n    }\n\n    handleLectureClick(id) {\n        this.props.history.push('/professor/' + id + '/questions');\n    }\n\n    handleExpand(id) {\n        var open = this.state.open;\n        if (open === id) {\n            open = null;\n        } else {\n            open = id;\n        }\n\n        this.setState({\n            open: open,\n        })\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current\n        })\n\n        return (\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <Drawer\n                    className={this.styles.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: this.styles.drawerPaper,\n                    }}\n                    anchor=\"left\"\n                >\n                \n                <Grid item><Grid container direction=\"row\" justify=\"center\" ><img src={logo} alt=\"logo\" height={80}/></Grid></Grid>\n                <Grid item><Divider /></Grid>\n                <Grid item>\n                    <List>\n                        {courses.map((courseObj, index) => {\n                            var lectures = this.profStore.getCourseLectures(courseObj.id);\n                            return (\n                                <div key={\"div\" + index}>\n                                    <ListItem className={this.styles.hover} button key={index} onClick={() => this.handleCourseClick(courseObj.id)} selected={this.state.selectedCourse === courseObj.id}>\n                                        <ListItemText disableTypography \n                                            primary={<Typography type=\"body2\" className={this.styles.listtext}>{courseObj.title}</Typography>} \n                                            secondary={<Typography type=\"body2\" className={this.styles.listsubtext}>{courseObj.term} {courseObj.year}</Typography>}\n                                        />\n\n                                        <ListItemSecondaryAction>\n                                            <IconButton color=\"primary\" disabled={lectures.length === 0} onClick={() => this.handleExpand(courseObj.id)}>\n                                                {lectures.length > 0 && this.state.open === courseObj.id ? <ExpandLess /> : <ExpandMore />}\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Collapse in={this.state.open === courseObj.id} timeout=\"auto\" unmountOnExit>\n                                        <List component=\"div\" disablePadding>\n                                            {lectures.map((lectureObj, innerIndex) => {\n                                                return (\n                                                    <ListItem button key={courseObj.id + \"_lecture_\" + innerIndex} onClick={() => this.handleLectureClick(lectureObj.id)} selected={this.state.selectedLecture === lectureObj.id}>\n                                                        <ListItemText disableTypography primary={<Typography type=\"body2\" className={this.styles.nestedListtext}> {lectureObj.title} </Typography>} />\n                                                    </ListItem>\n                                                )\n                                            })}\n                                        </List>\n                                    </Collapse>\n                                </div>\n                            )\n                        })}\n                    </List>\n                </Grid>\n                </Drawer>\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(SideMenuBar));","export const socketioURL =\n         process.env.NODE_ENV === \"production\"\n           ? \"https://clikr.herokuapp.com/\"\n           : \"http://localhost:5000/\";\nexport const baseURL = socketioURL + \"api/v1/\"; ","import axios from 'axios';\nimport { baseURL } from '../constants/api'\n\naxios.defaults.withCredentials = true;\n\nexport function getProfDataAPI() {\n    return axios.get(baseURL + 'professor/data');\n}\n\nexport function loginProfessorAPI(username, password) {\n    return axios.post(baseURL + 'admin/professorlogin', {\n        netId: username,\n        password: password\n    });\n}\n\nexport function createProfessorAPI(username, password, firstName, lastName) {\n    return axios.post(baseURL + 'admin/professor', {\n        netId: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName\n    });\n}\n\nexport function archiveCourseAPI(course_id) {\n    return axios.post(baseURL + 'professor/courses/' + course_id + '/archive');\n}\n\nexport function duplicateCourseAPI(course_id, year, term) {\n    return axios.post(baseURL + 'professor/courses/' + course_id + '/duplicate', {\n        year: year,\n        term: term\n    });\n}\n\nexport function loginStudentAPI(username, password) {\n    return axios.post(baseURL + 'admin/studentlogin', {\n        netId: username,\n        password: password\n    });\n}\n\nexport function createStudentAPI(username, password, firstName, lastName) {\n    return axios.post(baseURL + 'admin/student', {\n        netId: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName\n    });\n}\n\nexport function getProfAnswers(question_id) {\n    return axios.get(baseURL + 'professor/questions/' + question_id + '/statistics');\n}\n\nexport function getProfNameAPI() {\n    return axios.get(baseURL + 'professor/name');\n}\n\nexport function getStudentNameAPI() {\n    return axios.get(baseURL + 'student/name');\n}\n\nexport function getStudentCoursesAPI() {\n    return axios.get(baseURL + 'student/courses');\n}\n\nexport function hasStudentQuestions(course_id) {\n    return Promise.all(axios.get(baseURL + 'student/courses/' + course_id + '/questions'));\n}\n\nexport function getProfCoursesAPI() {\n    return axios.get(baseURL + 'professor/courses');\n}\n\nexport function getStudentQuestionsByCourseAPI(course_id) {\n    return axios.get(baseURL + 'student/courses/' + course_id + '/questions');\n}\n\nexport function getStudentPrevQuestionsByCourseAPI(course_id) {\n    return axios.get(baseURL + 'student/courses/' + course_id + '/prevquestions');\n}\n\nexport function postOpenQuestionAPI(question_id) {\n    return axios.post(baseURL + 'professor/questions/' + question_id, {\n        action: \"open\"\n    });\n}\n\nexport function postCloseQuestionAPI(question_id) {\n    return axios.post(baseURL + 'professor/questions/' + question_id, {\n        action: \"close\"\n    });\n}\n\nexport function postCloseAllQuestionsAPI(lecture_id) {\n    return axios.post(baseURL + 'professor/lectures/' + lecture_id, {\n        action: \"close\"\n    });\n}\n\n// course: CourseObj\nexport function postNewCourseAPI(course) {\n    return axios.post(baseURL + 'professor/courses', {\n        title: course.title,\n        dept: course.dept,\n        coursenum: course.num,\n        description: course.description,\n        year: course.year,\n        term: course.term\n    });\n}\n\n// lecture: LectureObj\nexport function postNewLectureAPI(lecture) {\n    return axios.post(baseURL + 'professor/courses/' + lecture.course_id + '/lectures', {\n        title: lecture.title,\n        date: lecture.date,\n        description: lecture.description,\n        open_date: lecture.openDate,\n        close_date: lecture.closeDate,\n        scheduled: lecture.scheduled\n    });\n}\n\nexport function postEnrollStudentAPI(code) {\n    return axios.post(baseURL + 'student/courses', {\n        enroll_code: code\n    });\n}\n\nexport function postAnswerQuestionAPI(answer, question_id) {\n    return axios.post(baseURL + 'student/questions/' + question_id, {\n        answer: answer\n    });\n}\nexport function getLogoutStudentAPI() {\n    return axios.get(baseURL + 'student/logout');\n}\nexport function getLogoutProfAPI() {\n    return axios.get(baseURL + 'professor/logout');\n}\n\n// course: CourseObj\nexport function patchUpdateCourseAPI(course_id, course_title) {\n    return axios.patch(baseURL + 'professor/courses/' + course_id, {\n        title: course_title\n    });\n}\n\nexport function patchUpdateCourseDataAPI(course_id, course) {\n    return axios.patch(baseURL + 'professor/courses/' + course_id, {\n        title: course.title,\n        dept: course.dept,\n        coursenum: course.coursenum,\n        year: course.year,\n        term: course.term,\n        description: course.description\n    });\n}\n\nexport function exportGradesLectureAPI(lecture_id) {\n    return axios.get(baseURL + 'professor/lectures/' + lecture_id + '/exportgrades')\n}\n\nexport function exportGradesCourseAPI(course_id) {\n    return axios.get(baseURL + 'professor/courses/' + course_id + '/exportgrades')\n}\n\nexport function patchUpdateLectureAPI(lecture) {\n    return axios.patch(baseURL + 'professor/lectures/' + lecture.id, {\n        title: lecture.title,\n        date: lecture.date,\n        description: lecture.description,\n        open_date: lecture.openDate,\n        close_date: lecture.closeDate,\n        scheduled: lecture.scheduled\n    });\n}\n\n// delete the course \nexport function deleteCourseAPI(course_id) {\n    return axios.delete(baseURL + 'professor/courses/' + course_id);\n}\n\n// delete a question by id\nexport function deleteQuestionsAPI(question_id) {\n    return axios.delete(baseURL + 'professor/questions/' + question_id);\n}\n\n// get questions for course by id\nexport function getQuestionsForLectureAPI(lecture_id) {\n    return axios.get(baseURL + 'professor/lectures/' + lecture_id + '/questions');\n}\n\n// delete a lecture by id\nexport function deleteLecturesAPI(lecture_id) {\n    return axios.delete(baseURL + 'professor/lectures/' + lecture_id);\n}\n// drop = delete for studnet\nexport function deleteDropCourseAPI(course_id) {\n    return axios.delete(baseURL + 'student/courses/' + course_id);\n}\n\n// update a question:\nexport function patchUpdateQuestionAPI(question) {\n    return axios.patch(baseURL + 'professor/questions/' + question.id, {\n        id: question.id,\n        lecture_id: question.lecture_id,\n        question_type: question.question_type,\n        question_title: question.question_title,\n        question_image: question.question_image,\n        correct_answer: question.correct_answer,\n        option1: question.option1,\n        option2: question.option2,\n        option3: question.option3,\n        option4: question.option4,\n        option5: question.option5,\n        number_of_options: question.number_of_options,\n        word_limit: question.word_limit,\n        lower_label: question.lower_label,\n        upper_label: question.upper_label,\n    });\n}\n\nexport function postNewQuestionAPI(question) {\n    return axios.post(baseURL + 'professor/lectures/' + question.lecture_id + '/questions', {\n        lecture_id: question.lecture_id,\n        question_type: question.question_type,\n        question_title: question.question_title,\n        question_image: question.question_image,\n        correct_answer: question.correct_answer,\n        creator_id: question.creator_id,\n        option1: question.option1,\n        option2: question.option2,\n        option3: question.option3,\n        option4: question.option4,\n        option5: question.option5,\n        number_of_options: question.number_of_options,\n        word_limit: question.word_limit,\n        lower_label: question.lower_label,\n        upper_label: question.upper_label,\n    });\n}\n","import { getProfDataAPI, patchUpdateLectureAPI, duplicateCourseAPI, archiveCourseAPI, exportGradesCourseAPI, exportGradesLectureAPI, patchUpdateCourseDataAPI, getProfNameAPI, getProfAnswers, postNewCourseAPI, postNewQuestionAPI, postNewLectureAPI, postOpenQuestionAPI, postCloseQuestionAPI, getLogoutProfAPI, patchUpdateCourseAPI, deleteCourseAPI, getProfCoursesAPI, deleteLecturesAPI, getQuestionsForLectureAPI, postCloseAllQuestionsAPI, deleteQuestionsAPI, patchUpdateQuestionAPI } from '../utils/api-facade';\n\n\nexport default class APIProfService {\n    constructor(professorStore) {\n        this.professorStore = professorStore;\n    }\n    \n    async getName() {\n        return getProfNameAPI()\n            .then(res => {\n                return res.data.name\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    archiveCourse(course_id) {\n        return archiveCourseAPI(course_id)\n            .then(res => {\n                this.professorStore.updateCourseData(res.data.id, res.data.course)\n                return res.data.message\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    duplicateCourse(course_id, year, term) {\n        return duplicateCourseAPI(course_id, year, term)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    exportGradesLecture(lecture_id) {\n        return exportGradesLectureAPI(lecture_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    exportGradesCourse(course_id) {\n        return exportGradesCourseAPI(course_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    loadData() {\n        if (!this.professorStore.dataLoaded) {\n            return getProfDataAPI()\n                .then(res => {\n                    this.professorStore.updateData(res.data)\n                })\n                .catch(error => {\n                    console.log(error);\n                    this._checkAuth(error);\n                })\n        }\n\n        return new Promise(function () {\n            return true\n        })\n    }\n\n    loadAllCourses() {\n        return getProfCoursesAPI()\n            .then(res => {\n                this.professorStore.updateAllCourseData(res.data)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    loadAnswers(question_id) {\n        return getProfAnswers(question_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n                return [];\n            })\n    }\n\n    loadQuestions(lecture_id) {\n        return getQuestionsForLectureAPI(lecture_id)\n        .then(res => {\n            return res.data\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n            return [];\n        })\n    }\n\n    openQuestion(question_id, lecture_id) {\n        postOpenQuestionAPI(question_id)\n            .then(res => {\n                this.professorStore.openQuestion(question_id, lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    closeQuestion(question_id, lecture_id) {\n        postCloseQuestionAPI(question_id)\n            .then(res => {\n                this.professorStore.closeQuestion(question_id, lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    closeAllQuestions(lecture_id) {\n        postCloseAllQuestionsAPI(lecture_id)\n            .then(res => {\n                this.professorStore.closeAllQuestionsForLecture(lecture_id)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    addLecture(lecture) {\n        postNewLectureAPI(lecture)\n            .then(res => {\n                const newLec = res.data.lectures.find(lecture => lecture.id === res.data.id)\n                newLec.questions = []\n                this.professorStore.addLecture(newLec)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    addCourse(course) {\n        postNewCourseAPI(course)\n            .then(res => {\n                course.id = res.data.id\n                const newCourse = res.data.courses.find(course => course.id === res.data.id)\n                newCourse.lectures = []\n                this.professorStore.addCourse(res.data.courses, newCourse)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    // remove courses\n    deleteCourses(courses) {\n        courses.map(id => {\n            return (\n                deleteCourseAPI(id)\n                    .then(() => {\n                        this.professorStore.removeCourse(id)\n                        this.professorStore.dataLoaded = false\n                        this.loadData()\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    changeCourseTitle(courseId, courseTitle) {\n        patchUpdateCourseAPI(courseId, courseTitle)\n            .then(res => {\n                this.professorStore.updateCourse(courseId, courseTitle)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    changeCourseData(courseId, course) {\n        patchUpdateCourseDataAPI(courseId, course)\n            .then(res => {\n                this.professorStore.updateCourseData(courseId, course)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    editLecture(lectureObj) {\n        return patchUpdateLectureAPI(lectureObj)\n        .then(res => {\n            this.professorStore.updateLecture(res.data.lecture);\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n        })\n    }\n\n    editQuestion(questionObj) {\n        patchUpdateQuestionAPI(questionObj)\n        .then(res => {\n            this.professorStore.updateQuestion(questionObj);\n        })\n        .catch(error => {\n            console.log(error);\n            this._checkAuth(error);\n        })\n    }\n\n    // remove lectures- input is array of lecture ids\n    deleteLectures(lectures, courseId) {\n        lectures.map(id => {\n            return (\n                deleteLecturesAPI(id)\n                    .then(() => {\n                        this.professorStore.removeLecture(id, courseId)\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    // remove lectures- input is array of lecture ids\n    deleteQuestions(questions, parentLectureId) {\n        questions.map(id => {\n            return (\n                deleteQuestionsAPI(id)\n                    .then(() => {\n                        this.professorStore.removeQuestion(id, parentLectureId)\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        this._checkAuth(error);\n                    })\n            )\n        })\n    }\n\n    addQuestion(question) {\n        // post new question\n        postNewQuestionAPI(question)\n            .then(res => {\n                const newQ = res.data.questions.find(q => q.id === res.data.id)\n                newQ.id = res.data.id\n                this.professorStore.addQuestion(newQ)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n    async getLogoutProf() {\n        getLogoutProfAPI()\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    _checkAuth(error) {\n        if (error.response !== undefined) {\n            if (error.response.status === 401)\n                window.location.replace('/login-prof')\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ToolbarGroup from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\n\nimport Menu from '@material-ui/core/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport APIProfService from '../../services/APIProfService'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n\n    homeButton: {\n        marginLeft: \"0%\"\n    },\n\n});\n\nclass TopMenuBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store  = props.store\n        this.apiProfService = new APIProfService(this.store)\n    }\n\n    state = {\n      anchorEl: null,\n      goHome: false,\n      logout: false,\n      userName: \"\"\n    };\n\n    componentDidMount() {\n        this.apiProfService.getName()\n            .then(name => {\n                this.setState({ userName: name });\n            })\n    }\n\n    handleMenu = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n      this.setState({\n          anchorEl: null,\n          logout: false\n        });\n    };\n\n    handleLogout = () => {\n        this.setState({\n            anchorEl: null,\n            logout: true\n          });\n    }\n\n    handleHome = () => {\n        this.props.history.push('/professor');\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        if (this.state.logout) {\n            this.apiProfService.getLogoutProf()\n            return <Redirect to='/' push/>\n        }\n\n\n        return (\n            <AppBar position=\"sticky\" color=\"inherit\" className={this.styles.appBar}>\n                <Toolbar>\n                    <IconButton className={classes.homeButton} onClick={this.handleHome} color=\"primary\">\n                        <SvgIcon>\n                            <path fill=\"secondary\"\n                                d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\n                        </SvgIcon>\n                    </IconButton>\n                    \n                    <ToolbarGroup style={{\n                        float: 'none',\n                        marginRight: 'auto'\n                    }}>\n                    </ToolbarGroup>\n\n                    <Typography variant=\"h8\" color=\"secondary\" align=\"center\"> {this.state.userName} </Typography>\n\n                    <IconButton\n                        aria-haspopup=\"true\"\n                        onClick={this.handleMenu}\n                        color=\"primary\"\n                        float=\"right\"\n                    >\n                        <SvgIcon style={{ \"width\": \"24px\", \"height\": \"24px\" }} viewBox=\"0 0 24 24\">\n                            <path color=\"secondary\"\n                                d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" />\n\n                        </SvgIcon>\n                    </IconButton>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={this.handleClose}\n                    >\n                        <MenuItem onClick={this.handleLogout}>\n\n                            LOGOUT\n\n                        </MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n\n\n\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(TopMenuBar));\n","\nexport default class LectureObj {\n    constructor(title, date, id, course_id, description, scheduled, openDate, closeDate) {\n        this.course_id = course_id;\n        this.date = date;\n        this.id = id;\n        this.title = title;\n        // this.description = description;\n        this.scheduled = scheduled;\n        this.openDate = openDate;\n        this.closeDate = closeDate;\n    }\n}","import { observable, action } from \"mobx\";\nimport LectureObj from '../models/LectureObj';\nimport QuestionObj from '../models/LectureObj';\n\nexport default class ProfessorStore {\n    @observable\n    courses = [];\n    dataLoaded = false;\n\n    set courses(value) {\n        value.sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n        this._courses = value;\n    }\n\n    getCourseWithId(course_id) {\n        return this.courses.find(x => x.id === course_id)\n    }\n\n    getLectureById(lecture_id) {\n        \n        if (lecture_id === 0)\n        return { questions: [] };\n        const course = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id))\n        \n        if (course === undefined)\n            return new LectureObj();\n\n        const lectures = course.lectures\n        return lectures.find(lecture => lecture.id === lecture_id)\n    }\n\n    getLectureWithId(lecture_id) {\n        \n        if (lecture_id === 0)\n            return { questions: [] };\n        const course = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id))\n        if (course === undefined)\n            return { questions: [] }\n\n        const lectures = course.lectures\n        return lectures.find(lecture => lecture.id === lecture_id)\n    }\n\n    @action\n    getCourseLectures(course_id) {\n        return this.courses.find(x => x.id === course_id).lectures;\n    }\n\n    // getQuestionWithId(lecture, question_id) {\n    //     console.log(\"get question with id\")\n    //     console.log(lecture)\n    //     console.log(question_id)\n    //     if (lecture.questions === [])\n    //         return { questions: [] };\n\n    //     if (lecture.questions.find(x => x.id === question_id) === undefined)\n    //         return { questions: [] };\n\n    //     return this.courses.find(course => course.lectures.find(lec => lec.id === lecture.id)).lectures\n    //         .find(lec => lec.id === lecture.id).questions.find(x => x.id === question_id)\n    // }\n    getQuestionWithId(lecture, question_id) {\n        if (lecture.questions === [] || lecture.questions === undefined)\n            return new QuestionObj();\n\n        if (lecture.questions.find(x => x.id === question_id) === undefined)\n            return new QuestionObj();\n\n        return this.courses.find(course => course.lectures.find(lec => lec.id === lecture.id)).lectures\n            .find(lec => lec.id === lecture.id).questions.find(x => x.id === question_id)\n    }\n\n    @action\n    getLectureQuestions(lecture_id) {\n        return this.courses.find(course => course.lectures.find(lec => lec.id === lecture_id)).lectures;\n    }\n\n    @action\n    updateData(data) {\n        this.dataLoaded = true;\n        this.courses = data;\n    }\n\n    @action\n    addCourse(courses, course) {\n        course.enroll_code = courses.find(x => x.id === course.id).enroll_code\n        this.courses.push(course);\n        this.courses.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n\n    @action\n    updateCourse(courseId, title) {\n        const oldCourse = this.courses.find(x => x.id === courseId);\n        oldCourse.title = title\n    }\n\n    @action\n    updateCourseData(courseId, course) {\n        const oldCourse = this.courses.find(x => x.id === courseId);\n        oldCourse.title = course.title\n        oldCourse.dept = course.dept\n        oldCourse.coursenum = course.coursenum\n        oldCourse.year = course.year\n        oldCourse.term = course.term\n        oldCourse.description = course.description\n        oldCourse.is_current = course.is_current\n    }\n\n    @action\n    updateLecture(lecture) {\n        const oldLecture = this.getLectureById(lecture.id)\n\n        oldLecture.title = lecture.title\n        oldLecture.closeDate = lecture.closeDate\n        oldLecture.openDate = lecture.openDate\n        oldLecture.scheduled = lecture.scheduled\n        oldLecture.date = lecture.date\n\n        console.log(oldLecture)\n    }\n\n    @action\n    deleteCourse(course_id) {\n        this.courses.remove(this.courses.find(x => x.id === course_id));\n    }\n\n    @action\n    addLecture(lecture) {\n        this.courses.find(x => x.id === lecture.course_id).lectures.push(lecture)\n        this.courses.find(x => x.id === lecture.course_id).lectures.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n    @action\n    removeCourse(course_id) {\n        this.courses.remove(this.courses.find(x => x.id === course_id));\n    }\n\n    @action\n    removeLecture(lecture_id, course_id) {\n        const lectures = this.courses.find(x => x.id === course_id).lectures;\n        lectures.remove(lectures.find(x => x.id === lecture_id));\n    }\n\n    @action\n    removeQuestion(question_id, parent_lecture_id) {\n        const questions = this.courses.find(course => course.lectures.find(lec => lec.id === parent_lecture_id)).lectures\n            .find(lec => lec.id === parent_lecture_id).questions;\n        questions.remove(questions.find(x => x.id === question_id));\n    }\n\n    @action\n    addQuestion(question) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === question.lecture_id)).lectures\n            .find(lecture => lecture.id === question.lecture_id).questions.push(question);\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === question.lecture_id)).lectures\n            .find(lecture => lecture.id === question.lecture_id).questions.slice().sort(function (a, b) {\n                if (a.created_at < b.created_at) {\n                    return -1;\n                }\n                if (a.created_at > b.created_at) {\n                    return 1;\n                }\n                // a must be equal to b\n                return 0;\n            });\n    }\n    @action \n    updateQuestion(questionObj) {\n        const lecture = this.courses.find(course => course.lectures.find(lecture => lecture.id === questionObj.lecture_id)).lectures\n        .find(lecture => lecture.id === questionObj.lecture_id);\n        const question = lecture.questions.find(q => q.id === questionObj.id);\n       \n        const keys = Object.keys(questionObj);\n        for (const key of keys) question[key] = questionObj[key];\n    }\n\n    @action\n    openQuestion(question_id, lecture_id) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).is_open = true;\n            this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\t\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).opened_at = Date.now();\n    }\n\n    @action\n    closeQuestion(question_id, lecture_id) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions.find(x => x.id === question_id).is_open = false;\n    }\n\n    @action\n    closeAllQuestionsForLecture(lecture_id) {\n        var questions = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n            .find(lecture => lecture.id === lecture_id).questions;\n        \n        for (var question of questions) {\n            question.is_open = false;\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    }\n});\n\n\n@observer\nclass AddStudentsModal extends React.Component {\n    state = {\n        open: false,\n        code: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.joinCode = props.joinCode\n        this.profStore = props.profStore\n    }\n    componentDidMount() {\n        this.setState({ code: this.joinCode })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.joinCode !== undefined) {\n            this.setState({ code: nextProps.joinCode })\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit = () => {\n        // Close modal \n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid item>\n                <Tooltip title=\"Add Students\" placement=\"top\">\n                    <IconButton color=\"primary\" onClick={this.handleOpen}>\n                        <PersonAddIcon />\n                    </IconButton>\n                </Tooltip>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <Typography variant=\"subtitle1\">\n                            Share this code with your students:\n                        </Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {this.state.code}\n                        </Typography>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Done</Button>\n                    </div>\n                </Modal>\n            </Grid>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst AddStudentsModalWrapped = withStyles(styles)(AddStudentsModal);\n\nexport default AddStudentsModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 20,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 2,\n        direction: 'column'\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'column'\n    },\n    textField: {\n        width: theme.spacing.unit * 15,\n    },\n    button: {\n        width: theme.spacing.unit * 15,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    }\n});\n\n\n@observer\nclass DuplicateCourseModal extends React.Component {\n    state = {\n        open: false,\n        newYear: \"\",\n        newTerm: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n        this.styles = props.classes\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.courseId = nextProps.courseId\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({ [name]: value });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit = () => {\n        this.apiProfService.duplicateCourse(this.courseId, this.state.newYear, this.state.newTerm)\n            .then(data => {\n                this.setState({ open: false });\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid item>\n                <Tooltip title=\"Duplicate Course\" placement=\"top\">\n                    <IconButton color=\"secondary\" onClick={this.handleOpen}>\n                        <FileCopyIcon />\n                    </IconButton>\n                </Tooltip>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper} >\n                        <Typography variant=\"subtitle1\">\n                            Duplicate Course\n                        </Typography>\n                        <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                           <TextField\n                                 label=\"Year\"\n                                 name=\"newYear\"\n                                 className={this.styles.textField}\n                                 value={this.state.newYear}\n                                 onChange={this.handleChange}\n                                 margin=\"normal\"\n                           />\n\n                           <TextField\n                                 label=\"Term\"\n                                 name=\"newTerm\"\n                                 className={this.styles.textField}\n                                 value={this.state.newTerm}\n                                 onChange={this.handleChange}\n                                 margin=\"normal\"\n                           />\n\n                           <Button className={this.styles.button}\n                                 type=\"submit\"\n                                 disabled={!(this.state.newTerm && this.state.newYear)}\n                                 variant=\"outlined\"\n                                 color=\"primary\"\n                                 > submit\n                           </Button>\n                        </form>\n                    </div>\n                </Modal>\n            </Grid>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst DuplicateCourseModalWrapped = withStyles(styles)(DuplicateCourseModal);\n\nexport default DuplicateCourseModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport InputBase from '@material-ui/core/InputBase';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FormControl from '@material-ui/core/FormControl';\nimport AddStudentsModal from '../AddStudentsModal';\nimport DuplicateCourseModal from '../DuplicateCourseModal';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport Grid from '@material-ui/core/Grid';\nimport { baseURL } from '../../constants/api';\n\nconst styles = theme => ({\n    iconDone: {\n        color: theme.palette.primary.light\n    },\n    iconEdit: {\n        color: theme.palette.secondary\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 14,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\n@observer\nclass CourseListItemNavEdit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n        this.courseTitle = props.courseTitle\n        this.courseYear = props.courseYear\n        this.courseTerm = props.courseTerm\n        this.courseCode = props.courseCode\n    }\n\n    state = {\n        editMode: false,\n        courseTitle: this.courseTitle,\n        newTitle: \"\",\n        nav: false,\n        courseId: this.courseId,\n        courseYear: this.courseYear,\n        courseTerm: this.courseTerm,\n        courseCode: this.courseCode,\n        toHome: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            courseTitle: this.courseTitle,\n            newTitle: this.courseTitle,\n            courseId: this.courseId,\n            courseYear: this.courseYear,\n            courseTerm: this.courseTerm,\n            courseCode: this.courseCode\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.state.editMode) {\n            if (nextProps.courseId !== this.courseId) {\n                this.setState({\n                    courseTitle: nextProps.courseTitle,\n                    newTitle: nextProps.courseTitle,\n                    courseId: nextProps.courseId,\n                    courseYear: nextProps.courseYear,\n                    courseTerm: nextProps.courseTerm,\n                    courseCode: nextProps.courseCode\n                })\n            }\n        } \n    }\n\n    handleEdit = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n    \n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n\n        // only close if the title is not empty space\n        if (this.state.newTitle.replace(/\\s/g, '').length > 0) {\n            this.apiProfService.changeCourseTitle(this.state.courseId, this.state.newTitle);\n            this.setState({\n                courseTitle: this.state.newTitle,\n                editMode: false,\n            })\n        }\n        else { // defaults to not changing title if invalid title is input\n            this.setState({\n                editMode: false\n            })\n        }\n    }\n\n    handleToCourse = () => {\n        this.setState({\n            nav: true\n        })\n    }\n\n    handleArchive = () => {\n        this.apiProfService.archiveCourse(this.state.courseId)\n            .then(message => {\n                this.setState({ toHome: true })\n            })\n    }\n\n    handleExportGrades = () => {\n        this.apiProfService.exportGradesCourse(this.courseId)\n            .then(data => {\n                const element = document.createElement(\"a\");\n                const file = new Blob([data.fileData], {type: 'text/csv;charset=utf-8;'});\n                element.href = URL.createObjectURL(file);\n                element.download = data.fileName;\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n            })\n    }\n\n    render () {\n        if (this.state.nav) {\n            return  <Redirect to={'/professor/' + this.state.courseId + '/lectures'} push />\n        }\n\n        if (this.state.toHome) {\n            return  <Redirect to={'/professor'} push />\n        }\n\n        if (this.state.editMode) {\n            return (\n                <ListItem divider>\n                    <FormControl>\n                        <InputBase\n                        id=\"bootstrap-input\"\n                        name=\"newTitle\"\n                        value={this.state.newTitle}\n                        onChange={e => this.handleEdit(e)}\n                        classes={{\n                            input: this.styles.bootstrapInput\n                        }}\n                        />\n                    </FormControl>\n                    <ListItemSecondaryAction>\n                        <Grid container direction=\"row\" justify=\"flex-end\" >\n                            <Grid item>\n                                <Tooltip title=\"Done Editing\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleEditClose}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" href={baseURL + \"professor/courses/\" + this.courseId + \"/exportgrades\"} target=\"_blank\">\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <AddStudentsModal profStore={this.profStore} joinCode={this.state.courseCode} />\n                            </Grid>  \n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )\n        }\n        else {\n            return (\n                 <ListItem button divider onClick={this.handleToCourse}>\n                    <Grid container direction=\"row\" justify=\"flex-start\">\n                        <Grid item>\n                            <ListItemText primary={this.state.courseTitle} secondary={this.state.courseTerm + ' ' + this.state.courseYear} />\n                        </Grid>\n                    </Grid>\n                    <ListItemSecondaryAction>\n                        <Grid container direction=\"row\" justify=\"flex-end\">\n                            <Grid item>\n                                <Tooltip title=\"Change Title\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleEditOpen}>\n                                        <EditIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <DuplicateCourseModal profStore={this.profStore} apiProfService = {this.apiProfService} courseId={this.state.courseId} />\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title={this.props.archive ? \"Unarchive Course\" : \"Archive Course\"} placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleArchive}>\n                                        {this.props.archive ? <UnarchiveIcon /> : <ArchiveIcon />}\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleExportGrades}>\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <AddStudentsModal profStore={this.profStore} joinCode={this.state.courseCode} />\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )\n        }\n    }\n}\n\nexport default withStyles(styles)(CourseListItemNavEdit);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport CourseListItemNavEdit from '../CourseListItemNavEdit';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass ListOfAllCourses extends React.Component {\n    state = {\n        referrerCourseId: null,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n   \n    handleCourseClick = id => () => {\n        this.setState(() => ({\n            referrerCourseId: id\n        }))\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current\n        })\n\n        // Handle routes\n        if (this.state.referrerCourseId !== null) {\n            return <Redirect to={'/professor/' + this.state.referrerCourseId + '/lectures'} push />\n        }\n\n        var courseList = courses.map((courseObj, index) => {\n            return (\n                <CourseListItemNavEdit \n                    key={index}\n                    archive={false}\n                    profStore={this.profStore} \n                    apiProfService={this.apiProfService} \n                    courseId={courseObj.id}\n                    courseTitle={courseObj.title}\n                    courseYear={courseObj.year}\n                    courseTerm={courseObj.term}\n                    courseCode={courseObj.enroll_code}\n                />\n            )\n        })\n\n        return (\n            <List component=\"nav\">\n                {courseList}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfAllCourses);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    }\n});\n\n@observer\nclass DeleteCoursesList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delCourses: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n    }\n\n    componentDidMount() {\n        let shouldDelete = []\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return courseObj.is_current !== this.props.archive\n        })\n        \n        courses.forEach(courseObj => {\n            shouldDelete.push({\n                id: courseObj.id,\n                checked: false,\n                title: courseObj.title,\n                term: courseObj.term,\n                year: courseObj.year\n            })\n        })\n\n        this.setState({\n            delCourses: shouldDelete\n        })\n    }\n\n    handleChange = id =>  event => {\n        // if id in courses, then we are unchecking; otherwise we need to uncheck\n        this.state.delCourses.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delCourses: this.state.delCourses\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delCourses);\n    }\n\n\n    render() {\n        return (\n            <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delCourses\"\n                    value={this.state.delCourses}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delCourses.map((c, index) => {\n                                return (\n                                    <ListItem divider key={index}>\n                                        <ListItemText primary={c.title} secondary={c.term + ' ' + c.year} />\n                                        <ListItemSecondaryAction>\n                                            <FormControlLabel key={index} control={\n                                                    <Checkbox className={this.styles.checkBox} key={c.id} checked={c.checked} onChange={this.handleChange(c.id)} value={c.id} />\n                                                }/>\n                                        </ListItemSecondaryAction> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteCoursesList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport ListOfAllCourses from '../ListOfAllCourses';\nimport DeleteCoursesList from '../DeleteCoursesList';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    }\n});\n\n@observer\nclass AllCoursesFrame extends React.Component {\n    state = {\n        toNewCourse: false,\n        deleteMode: false,\n        deletions: [],\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n\n    // gets courses to be deleted from child component\n    getDeletions = (delCourses) => {\n        this.setState({\n            deletions: delCourses\n        })\n    }\n    handleNewCourseClick = () => {\n        this.setState(() => ({\n            toNewCourse: true\n        }))\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const courseArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    courseArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (courseArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: courseArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n        \n    }\n    handleClose = () => {\n        this.setState({ \n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteCourses(this.state.delIds);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewCourse === true) {\n            return <Redirect to='/professor/new' push />\n        }\n        \n        let list = <ListOfAllCourses profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction=\"Delete\"\n        \n        if (this.state.deleteMode) {\n            list = <DeleteCoursesList profStore={this.profStore} getDeletions={this.getDeletions} archive={false} />\n            deleteAction=\"Done\"\n        }\n\n        return (\n            <div>\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\"> Courses </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                                {deleteAction === 'Delete' ? <DeleteIcon /> : <DoneIcon />}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button onClick={this.handleNewCourseClick} color=\"primary\">\n                                            <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                                            Add Course\n                                        </Button>\n                                    </Grid>    \n                                </Grid>  \n                            </Grid>\n                        </Grid> \n                        {list}\n                    </CardContent>\n                </Card>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following course(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) => \n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n                                        \n                        )}\n    \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            no\n                        </Button>\n                        <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                            yes\n                        </Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AllCoursesFrame);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport CourseListItemNavEdit from '../CourseListItemNavEdit';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass ListOfArchivedCourses extends React.Component {\n    state = {\n        referrerCourseId: null,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n   \n    handleCourseClick = id => () => {\n        this.setState(() => ({\n            referrerCourseId: id\n        }))\n    }\n\n    render() {\n        var courses = this.profStore.courses.filter((courseObj) => {\n            return !courseObj.is_current\n        })\n\n        // Handle routes\n        if (this.state.referrerCourseId !== null) {\n            return <Redirect to={'/professor/' + this.state.referrerCourseId + '/lectures'} push />\n        }\n        return (\n            <List component=\"nav\">\n                {courses.map((courseObj, index) => {\n                    return (\n                        <CourseListItemNavEdit \n                            key={index} \n                            archive={true}\n                            profStore={this.profStore} \n                            apiProfService={this.apiProfService} \n                            courseId={courseObj.id}\n                            courseTitle={courseObj.title} \n                            courseYear={courseObj.year}\n                            courseTerm={courseObj.term}\n                            joinCode={courseObj.enroll_code} \n                        />\n                    )\n                })}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfArchivedCourses);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport ListOfArchivedCourses from '../ListOfArchivedCourses';\nimport DeleteCoursesList from '../DeleteCoursesList';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    },\n    containerDiv: {\n        paddingTop: theme.spacing.unit * 8\n    }\n});\n\n@observer\nclass ArchivedCoursesFrame extends React.Component {\n    state = {\n        toNewCourse: false,\n        deleteMode: false,\n        deletions: [],\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false,\n        showArchive: false,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n\n    handleToggleArchive() {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                showArchive: !prevState.showArchive\n            }\n        })\n    }\n\n    // gets courses to be deleted from child component\n    getDeletions = (delCourses) => {\n        this.setState({\n            deletions: delCourses\n        })\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const courseArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    courseArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (courseArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: courseArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.setState({ \n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteCourses(this.state.delIds);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewCourse === true) {\n            return <Redirect to='/professor/new' push />\n        }\n        let list = <ListOfArchivedCourses profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction=\"Delete\"\n        \n        if (this.state.deleteMode) {\n            list = <DeleteCoursesList profStore={this.profStore} getDeletions={this.getDeletions} archive={true} />\n            deleteAction=\"Done\"\n        }\n\n        var titleString = this.state.showArchive ? \"Archived Courses\" : \"Show Archived Courses\"\n        var delButton = \"\"\n        if (this.state.showArchive) {\n            delButton = deleteAction === 'Delete' ? <DeleteIcon /> : <DoneIcon />\n        } \n\n        return (\n            <div className={this.props.classes.containerDiv} >\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Grid container direction='row' >\n                                    <Grid item>\n                                        <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\"> {titleString} </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <IconButton color=\"primary\" onClick={this.handleToggleArchive.bind(this)}>\n                                            {this.state.showArchive ? <ExpandLess /> : <ExpandMore />}\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} >\n                                                {delButton}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                </Grid>  \n                            </Grid>\n                        </Grid>\n\n                        <Collapse in={this.state.showArchive} timeout=\"auto\" unmountOnExit>\n                            {list}\n                        </Collapse>\n\n                        <Dialog\n                            open={this.state.open}\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following course(s): \"}</DialogTitle>\n                            <DialogContent>\n                                {this.state.delTitles.map((title, index) => \n                                    <DialogContentText key={index} id=\"alert-dialog-description\">\n                                        {title}\n                                    </DialogContentText>\n                                                \n                                )}\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ArchivedCoursesFrame);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\nimport AllCoursesFrame from '../../../components/AllCoursesFrame';\nimport ArchivedCoursesFrame from '../../../components/ArchivedCoursesFrame';\n\nconst styles = theme => ({\n\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorHome extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    render() {\n        return (\n            <div>\n                <AllCoursesFrame profStore={this.profStore} apiProfService={this.apiProfService} />\n                <ArchivedCoursesFrame profStore={this.profStore} apiProfService={this.apiProfService} />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorHome);\n","export default class CourseObj {\n    constructor(course) {\n        if (course !== undefined) {\n            this.title = course.title;\n            this.id = course.id;\n            this.num = course.num;\n            this.dept = course.dept;\n            this.description = course.description;\n            this.term = course.term;\n            this.joinCode = course.joinCode;\n            this.year = course.year;\n            this.is_current = course.is_current;\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\nimport CourseObj from '../../../models/CourseObj';\n\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    subcontainer: {\n        display: 'flex',\n        direction: 'row',\n        alignItems: 'flex-start'\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorNewCourse extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n\n        this.state = {\n            toHome: false,\n            title: '',\n            dept: '',\n            num: '',\n            year: '',\n            term: '',\n            description: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit(event) {\n        // Send course to API\n        event.preventDefault()\n        this.apiProfService.addCourse(\n            new CourseObj(this.state)\n        )\n        // Close modal\n        this.setState({ toHome: true });\n    }\n\n\n    // TODO: Make the year and term and Dept a drop down\n    render() {\n        if (this.state.toHome === true) {\n            return <Redirect to='/professor' push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Course:\n                </Typography>\n                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                    <TextField\n                        label=\"Course Name\"\n                        name=\"title\"\n                        className={this.styles.textField}\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Department\"\n                        name=\"dept\"\n                        className={this.styles.textField}\n                        value={this.state.dept}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Course Number\"\n                        name=\"num\"\n                        className={this.styles.textField}\n                        value={this.state.num}\n                        onChange={this.handleChange}\n                        margin=\"none\"\n                    />\n\n                    <TextField\n                        label=\"Year\"\n                        name=\"year\"\n                        className={this.styles.textField}\n                        value={this.state.year}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n\n                    <TextField\n                        label=\"Term\"\n                        name=\"term\"\n                        className={this.styles.textField}\n                        value={this.state.term}\n                        onChange={this.handleChange}\n                        margin=\"none\"\n                    />\n\n                    <TextField\n                        label=\"Description\"\n                        name=\"description\"\n                        className={this.styles.textField}\n                        value={this.state.description}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        multiline={true}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        disabled={!this.state.title}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        > submit\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorNewCourse);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { inject } from 'mobx-react';\nimport Collapse from '@material-ui/core/Collapse';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LectureObj from '../../models/LectureObj';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 80,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    gridItem: {\n        margin: theme.spacing.unit\n    },\n    dateField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 30,\n    },\n    gridItemButton: {\n        margin: theme.spacing.unit*2\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 60,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass EditLectureDialog extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiService\n\n        const date = new Date()\n\n        this.state = {\n            open: false,\n            title: \"\",\n            courseId: \"\",\n            id: \"\",\n            scheduled: false,\n            titleValid: true,\n            formValid: false,\n            selectedDate: date,\n            dateValid: true,\n            openDate: date,\n            closeDate: date\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.lectureObj !== undefined) {\n            this.setState({\n                title: nextProps.lectureObj.title,\n                scheduled: nextProps.lectureObj.scheduled,\n                selectedDate: new Date(nextProps.lectureObj.date),\n                courseId: nextProps.lectureObj.courseId,\n                id: nextProps.lectureObj.id\n            }, () => { this.handleValidation() })\n\n            if (nextProps.lectureObj.scheduled) {\n                this.setState({\n                    openDate: new Date(nextProps.lectureObj.open_date),\n                    closeDate: new Date(nextProps.lectureObj.close_date)\n                }, () => { this.handleValidation() })\n            }\n        }\n    }\n\n    handleValidation() {\n        let dateValid = this.state.dateValid;\n        let titleValid = this.state.title !== ''\n\n        if (this.state.scheduled) {\n            dateValid = this.state.closeDate.getTime() >= this.state.openDate.getTime()\n        } else {\n            dateValid = true\n        }\n\n        this.setState({ titleValid: titleValid, dateValid: dateValid }, this.validateForm);\n    }\n    \n    validateForm() {\n        this.setState({formValid: this.state.titleValid && this.state.dateValid });\n    }\n\n    modifyDate = date => {\n        date.setUTCDate(date.getDate());\n        date.setUTCHours(12);\n        date.setUTCMinutes(0);\n        date.setUTCMinutes(0);\n\n        return date;\n    }\n\n    handleDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            selectedDate: date\n        })\n    }\n\n    handleOpenDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({ \n            openDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleCloseDateChange = date => {\n        date = this.modifyDate(date);\n        \n        this.setState({\n            closeDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        }, () => { this.handleValidation() });\n    };\n\n    handleCheck = (event) => {\n        const {name, checked} = event.target\n        this.setState({\n            [name]: checked\n        }, () => {this.handleValidation() });\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    handleSubmit = () => {\n        // Send course to API\n        this.props.apiService.editLecture(\n            new LectureObj(this.state.title, this.state.selectedDate, this.state.id, this.state.courseId, null, \n                this.state.scheduled, this.state.openDate, this.state.closeDate)\n        )\n        .then(() => {\n            this.handleClose();\n        })\n    }\n    \n    render() {\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen}>\n                    <Typography variant=\"h7\" color=\"textPrimary\">\n                        Edit\n                    </Typography>\n                </Button>\n                <Dialog\n                    fullWidth\n                    scroll=\"paper\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Edit Lecture Information\"}</DialogTitle>\n                    <DialogContent>\n                    <Grid container direction=\"column\">\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                requiredtitle=\"true\"\n                                error={!this.state.titleValid}\n                                name=\"title\"\n                                label=\"Lecture Title\"\n                                className={this.styles.textField}\n                                value={this.state.title}\n                                onChange={this.handleChange}\n                                margin=\"normal\"\n                                multiline={true}\n                            />\n                        </Grid>\n\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid item className={this.styles.gridItem}>\n                                <DatePicker\n                                    margin=\"normal\"\n                                    label=\"Lecture Date\"\n                                    name=\"selectedDate\"\n                                    value={this.state.selectedDate}\n                                    onChange={this.handleDateChange}\n                                    className={this.styles.dateField}\n                                />\n                            </Grid>\n                        </MuiPickersUtilsProvider>\n\n                        <Grid item className={this.styles.gridItem}>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                    <Checkbox\n                                        checked={this.state.scheduled}\n                                        onChange={this.handleCheck}\n                                        name=\"scheduled\"\n                                    />\n                                </Grid>\n\n                                <Grid item>\n                                    <Typography variant=\"body2\" color=\"textPrimary\">\n                                        Schedule the Lecture to Open and Close at Specific Dates\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Collapse in={this.state.scheduled} timeout=\"auto\" unmountOnExit>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.gridItem}>\n                                        <DatePicker\n                                            margin=\"normal\"\n                                            label=\"Start Date\"\n                                            name=\"openDate\"\n                                            value={this.state.openDate}\n                                            onChange={this.handleOpenDateChange}\n                                            className={this.styles.dateField}\n                                            error={!this.state.dateValid}\n                                        />\n                                    </Grid>\n\n                                    <Grid item className={this.styles.gridItem}>\n                                        <DatePicker\n                                            margin=\"normal\"\n                                            label=\"End Date\"\n                                            name=\"closeDate\"\n                                            value={this.state.closeDate}\n                                            onChange={this.handleCloseDateChange}\n                                            className={this.styles.dateField}\n                                            error={!this.state.dateValid}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                \n                            </MuiPickersUtilsProvider>\n                        </Collapse>\n\n                    </Grid>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={this.handleClose} type=\"button\" autoFocus color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} type=\"submit\" color=\"secondary\" disabled={!this.state.formValid}>\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditLectureDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditLectureDialog from '../../components/EditLectureDialog'\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport InputBase from '@material-ui/core/InputBase';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport LectureObj from '../../models/LectureObj';\nimport { baseURL } from '../../constants/api';\n\nconst styles = theme => ({\n    iconDone: {\n        color: theme.palette.primary.light\n    },\n    iconEdit: {\n        color: theme.palette.secondary\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 14,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\n@observer\nclass LectListItemNavEdit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.lecture = props.lecture\n    }\n    \n    state = {\n        editMode: false,\n        lecture: new LectureObj(null, new Date()),\n        newTitle: \"\",\n        nav: false\n    }\n\n    componentDidMount() {\n        if (this.lecture !== undefined) {\n            this.setState({\n                lecture: this.lecture,\n                newTitle: this.lecture.title\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.state.editMode) {\n            if (nextProps.lecture !== undefined && nextProps.lecture.id !== this.state.lecture.id) {\n                this.setState({\n                    lecture: nextProps.lecture,\n                    newTitle: nextProps.lecture.title\n                })\n            }\n        } \n    }\n\n    handleEdit = (e) => {\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    \n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n\n        // only close if the title is not empty space\n        if (this.state.newTitle.replace(/\\s/g, '').length > 0) {\n            this.apiProfService.changeLectureTitle(this.state.lecture.id, this.state.newTitle);\n            this.setState({\n                editMode: false\n            })\n        }\n        else { // defaults to not changing title if invalid title is input\n            this.setState({\n                editMode: false\n            })\n        }\n    }\n\n    handleToLecture = () => {\n        this.setState({\n            nav: true\n        })\n    }\n\n    handleExportGrades = () => {\n        this.apiProfService.exportGradesLecture(this.state.lecture.id)\n            .then(data => {\n                const element = document.createElement(\"a\");\n                const file = new Blob([data.fileData], {type: 'text/csv;charset=utf-8;'});\n                element.href = URL.createObjectURL(file);\n                element.download = data.fileName;\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n            })\n    }\n\n    render () {\n        if (this.state.nav) {\n            return  <Redirect to={'/professor/' + this.state.lecture.id + '/questions'} push />\n        }\n\n        return (\n            <div>\n                <ListItem button divider onClick={this.handleToLecture}>\n                    <ListItemText primary={this.state.lecture.title} secondary={''+ this.state.lecture.date} />\n                    <ListItemSecondaryAction>  \n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">  \n                            <Grid item>\n                                <Tooltip title=\"Edit Lecture\" placement=\"top\">\n                                    <EditLectureDialog lectureObj={this.state.lecture} />\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Export Grades\" placement=\"top\">\n                                    <IconButton color=\"secondary\" onClick={this.handleExportGrades}>\n                                        <ImportExportIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(LectListItemNavEdit);","\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport { observer } from 'mobx-react';\nimport LectListItemNavEdit from '../LectListItemNavEdit';\n\n\n\nconst styles = theme => ({\n    icon: {\n        color: theme.palette.primary.light\n    }\n});\n\n@observer\nclass ListOfAllLectures extends React.Component {\n    state = {\n        lectures: []\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId  = props.courseId\n        this.apiProfService = props.apiProfService\n    }\n    componentDidMount() {\n        if (this.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(this.courseId)\n            })\n        }\n        \n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(nextProps.courseId)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <List component=\"nav\">\n                {this.state.lectures.map((lectureObj, index) => {\n                    return (\n                        <LectListItemNavEdit key={index} profStore={this.profStore} apiProfService={this.apiProfService} lecture={lectureObj} />\n                    )\n                })}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfAllLectures);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport CourseObj from '../../models/LectureObj';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.secondary.main\n    },\n    editRoot: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.primary.main\n    },\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n        color: '#FFFFFF'\n    },\n    termYear: {\n        margin: theme.spacing.unit,\n        color: '#FFFFFF',\n        fontStyle: 'italic'\n    },\n    textFieldShort: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 350\n    },\n    textFieldLong: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 1000\n    },\n    divider: {\n        backgroundColor: '#FFFFFF'\n    }\n});\n\n\n@observer\nclass CourseInfo extends React.Component {\n    state = {\n        parentCourse: new CourseObj(),\n        editMode: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n    }\n\n    componentDidMount() {\n        if (this.courseId !== undefined) {\n            if (!this.profStore.dataLoaded) {\n                this.apiProfService.loadData().then(() => {\n                    this.profStore.dataLoaded = true;\n                    this.setState({\n                        parentCourse: this.profStore.getCourseWithId(this.courseId)\n                    })\n                })\n            } else {\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.courseId)\n                })\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.courseId !== undefined) {\n            this.setState({\n                parentCourse: this.profStore.getCourseWithId(nextProps.courseId)\n            })\n        }\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState(prevState => {\n            let newCourse = {...prevState.parentCourse}\n            newCourse[name] = value\n            return { parentCourse: newCourse, editMode: prevState.editMode }\n        })\n    }\n\n    handleEditOpen = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    handleEditClose = () => {\n        this.apiProfService.changeCourseData(this.state.parentCourse.id, this.state.parentCourse);\n        this.setState({\n            editMode: false,\n        })\n    }\n\n    render() {\n        if (this.state.editMode) {\n            return (\n                <Paper className={this.styles.editRoot} elevation={1}>\n                    <Grid container direction='column' justify='space-between' alignItems='stretch' >\n                        <Grid item xs={12}>\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item xs={11}>\n                                    <TextField\n                                        label=\"Course Name\"\n                                        name=\"title\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.title}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Department\"\n                                        name=\"dept\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.dept}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Course Number\"\n                                        name=\"coursenum\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.coursenum}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n                                </Grid>\n\n                                <Grid item>\n                                    <Tooltip title=\"Done Editing\" placement=\"top\">\n                                        <IconButton color=\"secondary\" disabled={!this.state.parentCourse.title} onClick={this.handleEditClose}>\n                                            <DoneIcon className={this.styles.iconDone}/>\n                                        </IconButton>\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        label=\"Term\"\n                                        name=\"term\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.term}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n\n                                    <TextField\n                                        label=\"Year\"\n                                        name=\"year\"\n                                        className={this.styles.textFieldShort}\n                                        value={this.state.parentCourse.year}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <TextField\n                                label=\"Description\"\n                                name=\"description\"\n                                className={this.styles.textFieldLong}\n                                value={this.state.parentCourse.description}\n                                onChange={this.handleChange}\n                                multiline={true}\n                                margin=\"normal\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )\n        } else {\n            return (\n                <Paper className={this.styles.root} elevation={1}>\n                    <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                        <Grid item xs={12}>\n                            <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                                <Grid item>\n                                    <Typography className={this.styles.title} \n                                                variant=\"h4\" \n                                                color=\"inherit\">\n                                                    {this.state.parentCourse.dept} {this.state.parentCourse.coursenum} - {this.state.parentCourse.title} \n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Tooltip title=\"Edit Course Info\" placement=\"top\">\n                                        <IconButton color=\"primary\" onClick={this.handleEditOpen}>\n                                            <EditIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </Grid>\n                            </Grid>\n                                \n                            <Typography className={this.styles.termYear} variant=\"h8\" >{this.state.parentCourse.term} {this.state.parentCourse.year}</Typography>\n                            <Divider className={this.styles.divider} />\n                            <Typography className={this.styles.title} variant=\"body2\" color=\"inherit\">{this.state.parentCourse.description}</Typography>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )\n        }\n        \n    }\n}\n\nexport default withStyles(styles)(CourseInfo);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    }\n});\n\n@observer\nclass DeleteLecturesList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delLectures: [],\n        lectures: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId  = props.courseId\n    }\n    componentDidMount() {\n        let shouldDelete = []\n        this.profStore.getCourseLectures(this.courseId).map(lectureObj => \n           shouldDelete.push({\n            id: lectureObj.id,\n            checked: false,\n            title: lectureObj.title\n        }))\n        if (this.courseId !== undefined) {\n            this.setState({\n                lectures: this.profStore.getCourseLectures(this.courseId),\n                delLectures: shouldDelete\n            })\n        }\n        \n    }\n\n    handleChange = id =>  event => {\n        // if id in lectures, then we are unchecking; otherwise we need to uncheck\n        this.state.delLectures.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delLectures: this.state.delLectures\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delLectures);\n    }\n\n\n    render() {\n        return (\n            <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delLectures\"\n                    value={this.state.delLectures}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delLectures.map((lect, index) => {\n                                return (\n                                    <ListItem divider key={index}>\n                                        <ListItemText primary={lect.title}/>\n                                        <ListItemSecondaryAction>\n                                            <FormControlLabel key={index} control={\n                                                    <Checkbox className={this.styles.checkBox} key={lect.id} checked={lect.checked} onChange={this.handleChange(lect.id)} value={lect.id} />\n                                                }/>\n                                        </ListItemSecondaryAction> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteLecturesList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport CourseObj from '../../models/CourseObj';\nimport ListOfAllLectures from '../ListOfAllLectures';\nimport CourseInfo from '../CourseInfo';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteLecturesList from '../DeleteLecturesList';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    title: {\n        margin: theme.spacing.unit,\n    }\n\n});\n\n\n@observer\nclass AllLecturesFrame extends React.Component {\n    state = {\n        toNewLecture: false,\n        referrerLectureIndex: -1,\n        parentCourse: new CourseObj(),\n        numLects: undefined,\n        deletions: [],\n        deleteMode: false,\n        delTitles: [], // only holds titles\n        delIds: [],\n        open: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.courseId = props.courseId\n    }\n\n    componentDidMount() {\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                this.profStore.dataLoaded = true\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.courseId)\n                })\n            })\n        } else {\n            this.setState({\n                parentCourse: this.profStore.getCourseWithId(this.courseId)\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.parentCourse.id !== this.props.courseId) {\n            if (!this.props.profStore.dataLoaded) {\n                this.apiProfService.loadData().then(() => {\n                    this.props.profStore.dataLoaded = true\n                    this.setState({\n                        parentCourse: this.profStore.getCourseWithId(this.props.courseId)\n                    })\n                })\n            } else {\n                this.setState({\n                    parentCourse: this.profStore.getCourseWithId(this.props.courseId)\n                })\n            }\n        }\n    }\n\n    // gets lectures to be deleted from child component\n    getDeletions = (delLectures) => {\n        this.setState({\n            deletions: delLectures\n        })\n    }\n    handleNewLectureClick = () => {\n        this.setState(() => ({\n            toNewLecture: true,\n            numLects: this.profStore.getCourseLectures(this.state.parentCourse.id).length + 1\n        }))\n    }\n\n    handleLectureClick = index => {\n        this.setState(() => ({\n            referrerLectureIndex: index\n        }))\n    }\n\n    handleDelete = () => {\n        if (!this.state.deleteMode) {\n            this.setState({\n                deleteMode: true,\n            })\n        }\n        else {\n            const lectArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    lectArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (lectArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: lectArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n\n    }\n    handleClose = () => {\n        this.setState({\n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleFinalDeletion = () => {\n        this.apiProfService.deleteLectures(this.state.delIds, this.state.parentCourse.id);\n        this.handleClose()\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewLecture === true) {\n            return <Redirect to={{\n                pathname: '/professor/' + this.state.parentCourse.id + '/new',\n                state: { numLects: this.state.numLects }\n            }} />\n        } else if (this.state.referrerLectureIndex !== -1) {\n            return <Redirect to={'/professor/' + this.state.referrerLectureIndex + '/questions'} push />\n        }\n\n        let list = <ListOfAllLectures courseId={this.state.parentCourse.id} profStore={this.profStore} apiProfService={this.apiProfService} />\n        let course_info = <CourseInfo courseId={this.state.parentCourse.id} profStore={this.profStore} apiProfService={this.apiProfService} />\n        let deleteAction = \"delete\"\n\n        if (this.state.deleteMode) {\n            list = <DeleteLecturesList courseId={this.state.parentCourse.id} profStore={this.profStore} getDeletions={this.getDeletions} />\n            deleteAction = \"done\"\n        }\n\n        return (\n            <div>\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        {course_info} \n\n                        <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                            <Grid item>\n                                <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\">List of Lectures</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Grid item>\n                                        <Tooltip title={deleteAction} placement=\"top-start\">\n                                            <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                                {deleteAction === 'delete' ? <DeleteIcon /> : <DoneIcon />}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button onClick={this.handleNewLectureClick} color=\"primary\">\n                                            <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                                            Add Lecture\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        {list}\n\n                    </CardContent>\n                </Card>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following lecture(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) =>\n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n\n                        )}\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            no\n                        </Button>\n                        <Button onClick={this.handleFinalDeletion} color=\"secondary\">\n                            yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nAllLecturesFrame.propTypes = {\n    courseId: PropTypes.string\n};\n\nexport default withStyles(styles)(AllLecturesFrame);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AllLecturesFrame from '../../../components/AllLecturesFrame';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\n\nconst styles = theme => ({\n\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorViewLectures extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    render() {\n        return (\n            <AllLecturesFrame profStore={this.profStore} apiProfService={this.apiProfService} courseId={this.props.match.params.courseId} />\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorViewLectures);\n","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { List, ChatBubbleOutline } from '@material-ui/icons';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n    vert: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass AddQuestionModal extends React.Component {\n    state = {\n        open: false,\n        toNewMCQuestion: false,\n        toNewFreeTextQuestion: false,\n        toNewSliderQuestion: false,\n        lectureId: null\n    };\n\n    constructor(props) {\n        super(props);\n        this.styles = props.classes;\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleMC = () => {\n        // Close modal \n        this.setState({ open: false, toNewMCQuestion: true });\n    }\n\n    handleFreeText = () => {\n        // Close modal\n        this.setState({ open: false, toNewFreeTextQuestion: true});\n    }\n\n    handleSlider = () => {\n        this.setState({ open: false, toNewSliderQuestion: true })\n    }\n\n    render() {\n        const { classes } = this.props;\n        if (this.state.toNewMCQuestion === true) {\n            // Lecture Id\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-mc'} push />\n        } else if (this.state.toNewFreeTextQuestion === true) {\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-free-text'} push />\n        }\n        else  if (this.state.toNewSliderQuestion === true) {\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-slider'} push />\n        }\n\n        return (\n            <div>\n                <Button onClick={this.handleOpen} color=\"primary\">\n                    <Icon className={this.styles.icon} color=\"primary\">add_circle</Icon>\n                    Add Question\n                </Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"multiple choice\" onClick={this.handleMC}>\n                                    <div className={classes.vert}>\n                                        <List color=\"primary\" fontSize=\"large\" />\n                                        <Typography>\n                                            Multiple Choice\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"free text\" onClick={this.handleFreeText}>\n                                    <div className={classes.vert}>\n                                        <ChatBubbleOutline color=\"primary\" fontSize=\"large\" />\n                                        <Typography>\n                                            Free Text\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton className={classes.button} aria-label=\"slider\" onClick={this.handleSlider}>\n                                    <div className={classes.vert}>\n                                        <Icon color=\"primary\" fontSize=\"large\">linear_scale</Icon>\n                                        <Typography>\n                                            Slider\n                                        </Typography>\n                                    </div>\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nAddQuestionModal.propTypes = {\n    lectureId: PropTypes.string\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst AddQuestionModalWrapped = withStyles(styles)(AddQuestionModal);\n\nexport default AddQuestionModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { observer, inject } from 'mobx-react';\nconst socket = socketIOClient(socketioURL)\n\nconst styles = theme => ({\n    startLectureBtn: {\n        float: \"right\"\n    }\n});\n\n@inject(\"apiService\")\n@inject(\"profStore\")\n@observer\nclass OpenClosedButton extends React.Component {\n\n    state = {\n        isOpen: false, \n        questionId: \"\",\n    }\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    componentDidMount() {\n\n        this.setState({ isOpen: this.props.open, questionId: this.props.questionId })\n        \n    }\n\n    // this is to detect if the scrolling question button has opened or closed a question\n    componentWillReceiveProps(nextProps) {\n        \n        if (nextProps.parentLecture.id !== this.props.parentLecture.id) {\n            this.setState({ isOpen: nextProps.open, questionId: nextProps.questionId })\n        }\n        else {\n            if (nextProps.recentlyOpenedId !== undefined) {\n                if (nextProps.recentlyOpenedId === this.state.questionId && !this.state.isOpen) {\n                    this.props.handleToUpdate(true);\n                    this.setState({ isOpen: true })\n                }\n            }\n            if (nextProps.recentlyClosedId !== undefined) {\n                if (nextProps.recentlyClosedId === this.state.questionId && this.state.isOpen) {\n                    this.props.handleToUpdate(false);\n                    this.setState({ isOpen: false })\n                }\n            }\n        }\n    }\n\n    handleBtnClick() {\n        \n        if (!this.state.isOpen) {\n            // Handle the \"Open Question\"\n            console.log(\"openeint the quesiton in button\")\n            this.props.apiService.openQuestion(this.props.questionId, this.props.parentLecture.id)\n            socket.emit('subscribe professor', this.props.questionId)\n            this.props.handleClick(this.props.questionId)\n            this.props.handleToUpdate(true)\n            this.setState({ isOpen: true })\n        }\n        else {\n            // Handle the \"Close Question\"\n            console.log(\"closing question in button\")\n            this.props.apiService.closeQuestion(this.props.questionId, this.props.parentLecture.id)\n            this.props.handleToUpdate(false)\n            this.props.handleListClose(this.props.questionId)\n            this.setState({ isOpen: false })\n        }\n    }\n\n    render() {\n        return (\n            <Collapse in={!this.props.parentLecture.scheduled}>\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleBtnClick()}\n                    className={this.styles.startLectureBtn}>\n                    {!this.state.isOpen ? \"Open\" : \"Close\"}\n                </Button>\n            </Collapse>\n        );\n    }\n}\n\nexport default withStyles(styles)(OpenClosedButton);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Timer from '@material-ui/icons/Timer';\nimport { observer } from 'mobx-react';\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    card: {\n        marginBottom: 10\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n@observer\nclass BaseStatsComponent extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            time: 0,\n            isOn: false,\n            questionTitle: \"\",\n            hidden: props.hidden\n        }\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({ hidden: this.props.hidden })\n    }\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.props.question.opened_at)\n        }), 1);\n    }\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidUpdate() {\n        if (this.props.timer) {\n            if (!this.props.hidden && !this.state.isOn) {\n                this.startTimer()\n            }\n            else if (this.props.hidden && this.state.time !== 0 && this.state.isOn) {\n                this.stopTimer()\n                this.resetTimer()\n            }\n        }\n        if (this.props.questionTitle !== this.state.questionTitle) {\n            this.setState({ questionTitle: this.props.questionTitle })\n        }\n\n        if (this.props.hidden !== this.state.hidden ){\n            this.setState({ hidden: this.props.hidden })\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopTimer()\n        this.resetTimer()\n        this.setState({ hidden: true })\n    }\n\n\n    render() {\n        return (\n            <Card className={this.styles.card} hidden={this.state.hidden}>\n                <CardContent>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Statistics for {this.props.questionTitle}\n                    </Typography>\n                    {this.props.timer ? (\n                        <Typography variant=\"subtitle2\" color=\"inherit\" hidden={!this.props.timer} >\n                            <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                        </Typography>\n                    ) : null\n                    }\n                    {this.props.children}\n                    <Typography variant=\"body1\" color=\"inherit\">\n                        Total Responses: {this.props.responsesNumber}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(BaseStatsComponent);","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { Bar, defaults } from 'react-chartjs-2';\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass MCQuestionStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            data: {},\n            responsesNumber: 0,\n            update: false,\n            override: true\n        }\n        defaults.global.legend.display = false;\n        defaults.global.tooltips.enabled = false;\n    }\n\n    componentDidMount() {\n\n        this.setState({ override: this.props.override })\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId !== 0) {\n            const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n            socket.emit('subscribe professor', question.id)\n            const labels = []\n            for (var i = 0; i < question.number_of_options; i++) {\n                let currLabel = question[\"option\" + (i + 1)]\n                if (currLabel.length > 10)\n                    currLabel = \"Option \" + (i + 1)\n                labels.push(currLabel)\n            }\n\n            this.setState({\n                question: question,\n                data: {\n                    labels: labels\n                }\n            })\n        }\n\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId === 0) {\n            this.setState({\n                question: { id: 0, data: { labels: [] } }\n            })\n        }\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    const values = []\n\n                    const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }]\n                        },\n                        responsesNumber: msg.count,\n                        question: question,\n                    })\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    const values = []\n\n                    const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }]\n                        },\n                        responsesNumber: msg.count,\n                        question: question\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId)\n        this.setState({ question: question, override: nextProps.override })\n        if (this.state.question.id !== nextProps.selectedQuestionId && nextProps.selectedQuestionId !== 0) {\n            \n            socket.emit('subscribe professor', question.id)\n            const labels = []\n            for (var i = 0; i < question.number_of_options; i++) {\n                let currLabel = question[\"option\" + (i + 1)]\n                if (currLabel.length > 10)\n                    currLabel = \"Option \" + (i + 1)\n                labels.push(currLabel)\n            }\n\n            this.setState({\n                data: {\n                    labels: labels\n                }\n            })\n        }\n\n        if (this.state.question.id !== nextProps.selectedQuestionId && nextProps.selectedQuestionId === 0) {\n            this.setState({\n                question: { id: 0, data: { labels: [] } }\n            })\n        }\n        if (!nextProps.override) {\n            socket.on('new results', (msg) => {\n\n                if (msg.question_id === nextProps.selectedQuestionId) {\n                    const values = []\n\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n                    const labels = []\n                    for (var j = 0; j < question.number_of_options; j++) {\n                        let currLabel = question[\"option\" + (j + 1)]\n                        if (currLabel.length > 10)\n                            currLabel = \"Option \" + (j + 1)\n                        labels.push(currLabel)\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }],\n                            labels: labels\n                        },\n                        responsesNumber: msg.count,\n                    })\n                }\n            })\n        } else {\n            nextProps.apiService.loadAnswers(nextProps.selectedQuestionId).then((msg) => {\n                if (msg.question_id === nextProps.selectedQuestionId) {\n                    const values = []\n\n                    for (var i = 1; i <= question.number_of_options; i++) {\n                        values[i - 1] = msg.answers[i]\n                        if (msg.answers[i] === undefined)\n                            values[i - 1] = 0;\n                    }\n                    const labels = []\n                    for (var j = 0; j < question.number_of_options; j++) {\n                        let currLabel = question[\"option\" + (j + 1)]\n                        if (currLabel.length > 10)\n                            currLabel = \"Option \" + (j + 1)\n                        labels.push(currLabel)\n                    }\n\n                    this.setState({\n                        data: {\n                            datasets: [{\n                                label: \"Question Statistics\",\n                                backgroundColor: '#E9C46A',\n                                borderColor: '#E9C46A',\n                                data: values,\n                            }],\n                            labels: labels\n                        },\n                        responsesNumber: msg.count,\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        const options = {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        userCallback: function (label, index, labels) {\n                            // when the floored value is the same as the value we have a whole number\n                            if (Math.floor(label) === label) {\n                                return label;\n                            }\n\n                        },\n                    }\n                }],\n            }\n        }\n\n        return (\n            <BaseStatsComponent question={this.state.question}\n                responsesNumber={this.state.responsesNumber}\n                timer={!this.state.override} questionTitle={this.state.question.question_title}\n                hidden={this.state.override ? false : !this.state.question.is_open} >\n                <Bar key={this.props.selectedQuestionId} data={this.state.data} options={options} />\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default MCQuestionStats;","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass MCQuestionStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            responsesNumber: 0,\n            responses: {},\n            override: false,\n        }\n    }\n\n    componentDidMount() {\n        const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n        this.setState({ override: this.props.override, question: question })\n\n        if (this.state.question.id !== this.props.selectedQuestionId && this.props.selectedQuestionId !== 0) {\n            socket.emit('subscribe professor', question.id)\n        }\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.setState({\n                        responsesNumber: msg.count,\n                        responses: msg.answers,\n                    })\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                \n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.setState({\n                        responsesNumber: msg.count,\n                        responses: msg.answers\n                    })\n                }\n            })\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const next_question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId);\n\n        this.setState({ override: nextProps.override, question: next_question})\n        \n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        return (\n            <BaseStatsComponent question={this.state.question} responsesNumber={this.state.responsesNumber} timer={!this.state.override} questionTitle={this.state.question.question_title} hidden={this.state.override ? false : !this.state.question.is_open}  >\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Response</TableCell>\n                            <TableCell align=\"right\">Frequency</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.keys(this.state.responses).map((response, index) => {\n                            return (\n                                <TableRow key={index}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {response}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{this.state.responses[response]}</TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </Table>\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default MCQuestionStats;","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport { Bar, defaults } from 'react-chartjs-2';\nimport BaseStatsComponent from '../BaseStatsComponent';\nconst socket = socketIOClient(socketioURL)\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass SliderStats extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.state = {\n            question: { id: 0 },\n            data: {},\n            responsesNumber: 0,\n            override: false,\n        }\n        defaults.global.legend.display = false;\n        defaults.global.tooltips.enabled = false;\n    }\n\n    componentDidMount() {\n        if (this.props.selectedQuestionId !== 0) {\n            const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n            this.setState({ question: question })\n        }\n        if (this.state.question.id !== this.props.selectedQuestionId) {\n            if (this.props.selectedQuestionId !== 0) {\n                const question = this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.selectedQuestionId)\n                socket.emit('subscribe professor', question.id)\n                this.updateChartLabels(question)\n            } else {\n                this.setState({\n                    question: { id: 0, data: { labels: [] } }\n                })\n            }\n        }\n\n        if (!this.props.override) {\n            socket.on('new results', (msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.updateChartData(msg.answers, msg.count)\n                }\n            })\n        } else {\n            this.props.apiService.loadAnswers(this.props.selectedQuestionId).then((msg) => {\n                if (msg.question_id === this.props.selectedQuestionId) {\n                    this.updateChartData(msg.answers, msg.count)\n                }\n            })\n        }\n        this.setState({ override: this.props.override })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const next_question = nextProps.profStore.getQuestionWithId(nextProps.parentLecture, nextProps.selectedQuestionId);\n        this.setState({ override: nextProps.override, question: next_question })\n        if (next_question.id === this.state.question.id) {\n\n            if (this.state.question.id !== nextProps.selectedQuestionId) {\n                if (nextProps.selectedQuestionId !== 0) {\n                    socket.emit('subscribe professor', next_question.id)\n                    this.updateChartLabels(next_question)\n                } else {\n                    this.setState({\n                        question: { id: 0, data: { labels: [] } }\n                    })\n                }\n            }\n    \n            if (!nextProps.override) {\n                socket.on('new results', (msg) => {\n                    if (msg.question_id === nextProps.selectedQuestionId) {\n                        this.updateChartData(msg.answers, msg.count)\n                    }\n                })\n            } else {\n                nextProps.apiService.loadAnswers(nextProps.selectedQuestionId).then((msg) => {\n                    if (msg.question_id === nextProps.selectedQuestionId) {\n                        this.updateChartData(msg.answers, msg.count)\n                    }\n                })\n            }\n        }\n    }\n\n    updateChartLabels(question) {\n        const labels = []\n        for (var i = 0; i <= 100; i++) {\n            if (i % 10 === 0)\n                labels.push(i)\n            else \n                labels.push('')\n        }\n\n        this.setState({\n            question: question,\n            data: {\n                labels: labels\n            }\n        })\n    }\n\n    updateChartData(values, count) {\n        this.setState({\n            data: {\n                datasets: [{\n                    label: \"Question Statistics\",\n                    backgroundColor: '#E9C46A',\n                    borderColor: '#E9C46A',\n                    data: values,\n                }]\n            },\n            responsesNumber: count\n        })\n    }\n\n    componentWillUnmount() {\n        if (!this.state.override) {\n            socket.removeAllListeners(\"new results\");\n        }\n    }\n\n    render() {\n        const options = {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        userCallback: function (label, index, labels) {\n                            // when the floored value is the same as the value we have a whole number\n                            if (Math.floor(label) === label) {\n                                return label;\n                            }\n\n                        },\n                    }\n                }],\n            }\n        }\n\n        return (\n            <BaseStatsComponent question={this.state.question} responsesNumber={this.state.responsesNumber} timer={!this.state.override} questionTitle={this.state.question.question_title} hidden={this.state.override ? false : !this.state.question.is_open}  >\n                <Bar key={this.props.selectedQuestionId} data={this.state.data} options={options} />\n            </BaseStatsComponent>\n        );\n    }\n}\n\nexport default SliderStats;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InsertChartOutlined from '@material-ui/icons/InsertChartOutlined';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\nimport MCQuestionStats from '../../components/MCQuestionStats';\nimport FreeTextStats from '../../components/FreeTextStats';\nimport SliderStats from '../../components/SliderStats';\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n    }\n});\n\nclass ViewStatsModal extends React.Component {\n    state = {\n        open: false,\n        question: {id: 0}\n    };\n\n    constructor(props) {\n        super(props);\n        this.styles = props.classes;\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        let stats;\n\n        if (this.props.question.question_type === \"multiple_choice\") {\n            stats = (<MCQuestionStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n        else if (this.props.question.question_type === \"free_text\") {\n            stats = (<FreeTextStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n        else if (this.props.question.question_type === \"slider\") {\n            stats = (<SliderStats key={this.props.index} parentLecture={this.props.parentLecture} selectedQuestionId={this.props.question.id} override={true} />)\n        }\n\n        return (\n            <div>\n                <IconButton color=\"secondary\" onClick={this.handleOpen}>\n                    <InsertChartOutlined />\n                </IconButton>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        {stats}\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst ViewStatsModalWrapped = withStyles(styles)(ViewStatsModal);\n\nexport default ViewStatsModalWrapped;","export class QuestionObj {\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer) {\n\n        this.id = id;\n        this.lecture_id = lecture_id;\n        this.question_type = question_type;\n        this.question_title = question_title;\n        this.question_image = question_image;\n        this.correct_answer = correct_answer;\n        this.creator_id = creator_id;\n        this.is_open = is_open;\n        this.opened_at = opened_at;\n        this.closed_at = closed_at;\n        this.created_at = created_at;\n        this.modified_at = modified_at;\n        this.answer = answer;\n    }\n\n}\n\nexport class MultipleChoiceQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer, option1, option2, option3, option4, option5, number_of_options) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.option1 = option1;\n        this.option2 = option2;\n        this.option3 = option3;\n        this.option4 = option4;\n        this.option5 = option5;\n        this.number_of_options = number_of_options;\n    }\n}\n\nexport class SliderQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer, lower_label, upper_label) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.lower_label = lower_label;\n        this.upper_label = upper_label;\n    }\n}\n\nexport class FreeTextQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer, word_limit) {\n\n        super(id, lecture_id, question_type, question_title, question_image, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, answer);\n\n        this.word_limit = word_limit;\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FreeTextQuestionObj } from '../../models/QuestionObj';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main\n    },\n    item: {\n        paddingBottom: theme.spacing.unit\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit\n    },\n    icon: {\n        margin: theme.spacing.unit\n    }\n});\n\n@observer\nclass EditFRQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: \"\",\n        correct_answer: \"\",\n        error: \"\",\n        titleValid: true,\n        question_image: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n        //this.handleClick = props.handleClick\n    }\n\n    componentDidMount() {\n        if (this.props.questionObj.correct_answer !== null) {\n            this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image, correct_answer: this.props.questionObj.correct_answer })\n        }\n        else {\n            this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image })\n        }\n        \n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleValidation() {\n        if (this.state.title === '') {\n            this.setState({\n                error: \"This field is required\",\n                titleValid: false,\n            })\n        } else {\n            this.setState({\n                error: \"\",\n                titleValid: true,\n            });\n        }\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.handleValidation(name, value) });\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if(this.state.titleValid) {\n            this.props.getEdits( \n                new FreeTextQuestionObj(this.props.questionObj.id, \n                    this.props.questionObj.lecture_id, \"free_text\", \n                    this.state.title, this.state.question_image, this.state.correct_answer, \n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, \n                    this.props.questionObj.opened_at, this.props.questionObj.closed_at, \n                    this.props.questionObj.created_at, null, null, this.props.questionObj.word_limit))\n        }\n        this.handleClose();\n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                <DialogTitle id=\"alert-dialog-title\">{\"Edit Free Text Question\"}</DialogTitle>\n                <DialogContent>\n                    <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={!this.state.titleValid && !(this.state.error === \"\")}\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.error}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    fullWidth\n                                    label=\"Correct Answer\"\n                                    value={this.state.correct_answer}\n                                    onChange={this.handleChange('correct_answer')}\n                                    margin=\"normal\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </form>\n\n                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                <Grid item className={this.styles.item}>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        Image Preview\n                                    </Typography>\n                                </Grid>\n                                <Grid item className={this.styles.item}>\n                                    <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                                </Grid>\n                            </Collapse>\n\n                            <Grid item className={this.styles.item}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                        >\n                                        {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                        <input\n                                            type=\"file\"\n                                            style={{ display: \"none\" }}\n                                            onChange={this.encodeImageFileAsURL}\n                                        />\n                                        </Button>\n                                    </Grid>\n\n                                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                        <Grid item className={this.styles.buttonItem}>\n                                            <Button\n                                                variant=\"contained\"\n                                                component=\"label\"\n                                                onClick={this.removeImage}\n                                            >\n                                            Remove Image\n                                            </Button>\n                                        </Grid>\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                        cancel\n                    </Button>\n                    <Button onClick={this.handleSubmit} color=\"secondary\" disabled={!this.state.titleValid}>\n                        submit\n                    </Button>\n            </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditFRQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { MultipleChoiceQuestionObj } from '../../models/QuestionObj';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main\n    },\n    select: {\n        width: 200\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit,\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit * 2,\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 12,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\nfunction answersValid(new_options) {\n    if (new_options.length < 2) return false;\n    for (const option of new_options) {\n        for (const val of Object.values(option)) {\n            if (val === undefined) {\n                return false; \n            }\n            else {\n                if (val.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n            }\n        }     \n    }\n    return true;\n}\n\n@observer\nclass EditMCQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: '',\n        correct_answer: '',\n        number_of_options: \"\",\n        question_image: \"\",\n        options: [], // necessary because of controlled form\n        answer_choices: {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"}, // must be set for input base to be controlled\n        checked: {option1: false, option2: false, option3: false, option4: false, option5: false},\n        should_delete: {option1:false, option2:false, option3:false, option4:false, option5:false},\n        titleError: \"\",\n        formValid: true,\n        titleValid: true,\n        hasAnswers: true,\n        optionsValid: true,\n        delete_mode: false,\n        deleteDisabled: false,\n        deleteConfirmDisabled: false,\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        let answer_choices = {};\n        let checked = this.state.checked;\n        let correct = this.props.questionObj.correct_answer \n        const number_of_options = Number(this.props.questionObj.number_of_options);\n        let options = [];\n\n        for (let i = 1; i <= number_of_options; i++) {\n            let option_string= \"option\" + i.toString();\n            answer_choices[option_string] = this.props.questionObj[option_string];\n            options.push({ [option_string]: answer_choices[option_string] })\n        }\n        if (correct !== null) {\n            correct = \"option\" + correct;\n            checked[correct] = true;\n        }\n       \n        this.setState({ title: this.props.questionObj.question_title,\n                        question_image: this.props.questionObj.question_image,\n                        correct_answer: correct,\n                        number_of_options: number_of_options,\n                        answer_choices: answer_choices,\n                        checked: checked,\n                        options: options\n        })\n       \n        \n    }\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n\n    handleDelete() {\n\n        let answer_choices = this.state.answer_choices;\n        let number_of_options = this.state.number_of_options;\n        let options = [];\n        let correct_answer = \"\";\n        let checked = {option1: false, option2: false, option3: false, option4: false, option5: false};\n\n        for (const k of Object.keys(this.state.should_delete)) {\n            if (this.state.should_delete[k]) {\n                number_of_options--;\n            }\n        }\n\n        // abort if less than two options remain, but button disabling should prevent this anyway\n        if (number_of_options < 2) {\n            this.setState({\n                should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n                delete_mode: false,\n            })\n            return;\n        }\n\n        let index = 1;\n        for (const k of Object.keys(answer_choices)) {\n            if (!this.state.should_delete[k]) {\n                let option_string = \"option\" + index.toString();\n                options.push({ [option_string]: answer_choices[k] });\n                if (k === this.state.correct_answer) correct_answer = option_string;\n                index++;\n                if (index > number_of_options) {\n                    break;\n                }\n            }\n        }\n\n        answer_choices = {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"};\n        // this is not the nicest way to do this, but it's functional, and I couldn't find my bug in my nicer code\n        options.map(option => answer_choices[Object.keys(option)[0]] = Object.values(option)[0]);\n\n        if (correct_answer !== \"\" && correct_answer !== null) checked[correct_answer] = true;\n\n        this.setState({\n            should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n            answer_choices: answer_choices,\n            correct_answer: correct_answer,\n            checked: checked,\n            number_of_options: number_of_options,\n            delete_mode: false,\n            options: options,\n            deleteDisabled: number_of_options <= 2,\n        }, () => { this.validateFields('answer_choices', options) });\n       \n    }\n\n    validateFields(name, value) {\n        let titleValid = this.state.titleValid;\n        let errors = this.state.errors;\n        let has_answers = this.state.hasAnswers\n        let optionsValid = this.state.optionsValid;\n        let titleError = this.state.titleError;\n\n        switch(name) {\n            case \"title\":\n                if (value === \"\") {\n                    titleError = \"This field is required\";\n                    titleValid = false;\n                }\n                else {\n                    titleError = '';\n                    titleValid = true;\n                }\n                break;\n            case \"number_of_options\":\n                has_answers = true;\n                optionsValid = answersValid(value);\n                break;\n            case \"answer_choices\":\n                optionsValid = answersValid(value);\n                break;\n            default:\n        }\n       \n        this.setState({ errors: errors, \n                        titleValid: titleValid, \n                        titleError: titleError,\n                        hasAnswers: has_answers,\n                        optionsValid: optionsValid,\n         }, this.validateForm);\n\n    }\n    \n    validateForm() {\n        const titleValid = this.state.title.replace(/^\\s+|\\s+$/g, '') !== \"\";\n        if (!titleValid) {\n            this.setState({ titleValid: false })\n        }\n        this.setState({ formValid: titleValid && this.state.hasAnswers && this.state.optionsValid });\n    }\n\n\n    handleOption = option => event => {\n        const key = Object.keys(option)[0];\n        let answer_choices = this.state.answer_choices;\n        let options = this.state.options;\n        answer_choices[key] = event.target.value;\n        options.find(x => Object.keys(x)[0] === key)[key] = event.target.value\n        this.setState({\n            answer_choices: answer_choices,\n            options: options,\n        }, () => { this.validateFields('answer_choices', options) });\n    }\n    \n    handleSetNumberOfOptions = name => event => {\n        let options = [];\n        let answer_choices = this.state.answer_choices;\n        let deleteDisabled = event.target.value <= 2;\n\n        for (let i = 1; i <= event.target.value; i++) {\n            let option_string = \"option\" + i.toString();\n            options.push({ [option_string]: this.state.answer_choices[option_string] })\n        }\n        if (event.target.value < this.state.number_of_options) {\n            for (let i = event.target.value + 1; i <=5; i++) {\n                let option_string = \"option\" + i.toString();\n                answer_choices[option_string] = \"\";\n            }\n        }\n\n        this.setState({\n            answer_choices: answer_choices,\n            number_of_options: event.target.value,\n            options: options,\n            deleteDisabled: deleteDisabled,\n        }, () => { this.validateFields(name, options)});\n\n    }\n\n    handleDeleteQueue = name => event => {\n        let should_delete = this.state.should_delete;\n        if (event.target.checked) {\n            should_delete[name] = true;\n        }\n        else {\n            should_delete[name] = false;\n        }\n\n        // compute if confirm button should be disabled\n        let numRemainingOptions = 0;\n        for (const k of Object.keys(should_delete)) {\n            if (!should_delete[k]) {\n                numRemainingOptions++;\n            }\n        }\n        \n        // adjust for the \"invisible\" options which have been counted as well\n        numRemainingOptions -= (5 - this.state.number_of_options);\n\n        this.setState({\n            should_delete: should_delete,\n            deleteConfirmDisabled: numRemainingOptions < 2,\n        })\n    }\n\n    handleCheck = option => event => {\n        const key = Object.keys(option)[0];\n        let checked = this.state.checked;\n        let correct_answer = key;\n        checked[key] = event.target.checked;\n\n        if (this.state.correct_answer === key) {\n            checked[key] = false;\n            correct_answer = \"\";\n        }\n    \n        this.setState({\n            correct_answer: correct_answer,\n            checked: checked\n        })\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.validateFields(name, value) });\n    };\n\n    setDeleteMode() {\n        const delete_mode = !this.state.delete_mode;\n        this.setState({ delete_mode: delete_mode });\n    }\n\n    handleOpen =  () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.formValid) {\n            let correct_answer = \"\";\n            if (this.state.correct_answer !== \"\" && this.state.correct_answer !== null) {\n                correct_answer = this.state.correct_answer.substring(6, 7);\n            }\n        \n            if(this.state.formValid) {\n                this.props.getEdits( \n                    new MultipleChoiceQuestionObj(this.props.questionObj.id,\n                    this.props.questionObj.lecture_id, \"multiple_choice\",\n                    this.state.title, this.state.question_image, correct_answer,\n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, this.props.questionObj.opened_at, this.props.questionObj.closed_at,\n                    this.props.questionObj.created_at, this.props.questionObj.modified_at, this.props.questionObj.answer,\n                    this.state.answer_choices.option1, this.state.answer_choices.option2, this.state.answer_choices.option3, this.state.answer_choices.option4, this.state.answer_choices.option5,\n                    this.state.number_of_options))\n            }\n            this.handleClose();\n        }  \n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    scroll=\"paper\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Edit Multiple Choice Question\"}</DialogTitle>\n                    <DialogContent>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item className={this.styles.item}>\n                                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        error={!this.state.titleValid}\n                                        id=\"standard-name\"\n                                        label=\"Question Title\"\n                                        value={this.state.title}\n                                        onChange={this.handleChange('title')}\n                                        margin=\"normal\"\n                                        helperText={this.state.titleError}\n                                    />\n                                </form>\n                            </Grid>\n                            <Grid item className={this.styles.item}>\n                                <form autoComplete=\"off\">\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"number-options\">number of answer choices</InputLabel>\n                                        <Select\n                                            value={this.state.number_of_options}\n                                            onChange={this.handleSetNumberOfOptions('number_of_options')}\n                                            className={this.styles.select}\n                                            disabled={this.state.delete_mode}\n                                            inputProps={{\n                                            name: 'number_of_options',\n                                            id: 'number-options',\n                                            }}\n                                        >\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </form>\n                            </Grid>\n                            {this.state.hasAnswers && \n                            <Grid item>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            {this.state.delete_mode ? \n                                                <TableCell> Delete?</TableCell>\n                                                :\n                                                <TableCell>Correct Answer?</TableCell>\n                                            }\n                                            <TableCell>Answer Choices</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                    {this.state.delete_mode ? \n                                    this.state.options.map((option, index) => \n                                            <TableRow key={index}> \n                                                <TableCell>\n                                                    <Checkbox\n                                                        checked={this.state.should_delete[Object.keys(option)[0]]}\n                                                        onChange={this.handleDeleteQueue(Object.keys(option)[0])}\n                                                        value={Object.keys(option)[0]}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Typography variant=\"body1\" align=\"justify\"> {this.state.answer_choices[Object.keys(option)[0]]}</Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                        :\n                                        this.state.options.map((option, index) => \n                                            <TableRow key={index}>\n                                                <TableCell>\n                                                    <Checkbox\n                                                        checked={this.state.correct_answer === Object.keys(option)[0]}\n                                                        onChange={this.handleCheck(option)}\n                                                        value={Object.keys(option)[0]}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <FormControl>\n                                                        <InputBase\n                                                        multiline\n                                                        id=\"bootstrap-input\"\n                                                        name={Object.keys(option)[0]}\n                                                        value={this.state.answer_choices[Object.keys(option)[0]]}\n                                                        onChange={this.handleOption(option)}\n                                                        classes={{\n                                                            input: this.styles.bootstrapInput\n                                                        }}\n                                                        />\n                                                    </FormControl>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    }\n                                    </TableBody>\n                                </Table>    \n                    \n                                    \n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    {!this.state.delete_mode ? \n\n                                    <IconButton onClick={this.setDeleteMode.bind(this)} color=\"secondary\" disabled={this.state.deleteDisabled}>\n                                        <DeleteIcon />\n                                    </IconButton>\n\n                                    :\n                                    \n                                    <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} disabled={this.state.deleteConfirmDisabled}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                    </IconButton>\n                            \n                                    }     \n                                </Grid>\n                            </Grid>\n                            }\n\n                            <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                <Grid item className={this.styles.item}>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        Image Preview\n                                    </Typography>\n                                </Grid>\n                                <Grid item className={this.styles.item}>\n                                    <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                                </Grid>\n                            </Collapse>\n\n                            <Grid item className={this.styles.item}>\n                                <Grid container direction=\"row\">\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                        >\n                                        {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                        <input\n                                            type=\"file\"\n                                            style={{ display: \"none\" }}\n                                            onChange={this.encodeImageFileAsURL}\n                                        />\n                                        </Button>\n                                    </Grid>\n\n                                    <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                        <Grid item className={this.styles.buttonItem}>\n                                            <Button\n                                                variant=\"contained\"\n                                                component=\"label\"\n                                                onClick={this.removeImage}\n                                            >\n                                            Remove Image\n                                            </Button>\n                                        </Grid>\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <form onSubmit={this.handleSubmit}>\n                            <Button onClick={this.handleClose} type=\"button\" autoFocus color=\"secondary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleSubmit} type=\"submit\" color=\"secondary\" disabled={!this.state.formValid}>\n                                Submit\n                            </Button>\n                        </form>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditMCQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer } from 'mobx-react';\nimport Grid from '@material-ui/core/Grid';\nimport APIProfService from '../../services/APIProfService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { SliderQuestionObj } from '../../models/QuestionObj';\nimport Switch from '@material-ui/core/Switch';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    button:{\n        color: theme.palette.secondary.main\n    },\n    icon: {\n        margin: theme.spacing.unit\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        marginRight: theme.spacing.unit*2.5,\n        width: 45\n    },\n    percentText: {\n        color: \"white\",\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"0.75em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n    },\n    entry: {\n        maxWidth: 500,\n        paddingBottom: theme.spacing.unit\n    },\n    buttonItem: {\n        paddingRight: theme.spacing.unit * 2,\n    },\n    titleContainer: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit*2\n    },\n    slidercontainer: {\n        paddingRight: theme.spacing.unit*2\n    },\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        flexWrap: 'wrap',\n    },\n\n    andor: {\n        padding: theme.spacing.unit,\n        width: \"15%\"\n    },\n});\n\nconst answerBoundOptions = [\n    {\n      value: '=',\n      label: '=',\n    },\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n  const answerBoundOptionsRange = [\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n\n@observer\nclass EditSLQDialog extends React.Component {\n    \n    state = {\n        open: false,\n        title: '',\n        titleError: \"\",\n        question_image: \"\",\n        labels: {lower:\"0%\", upper:\"100%\"}, // labels on slider\n        answer_bounds: {upper:\"\", lower:\"\"}, \n        range: false, // whether or not correct answer has a range\n        rangeVal: \"not_range\", // added for radio group purposes\n        equality_operators: {upper:\"\", lower:\"\"},\n        slider_value: 50,\n        has_correct_answer: false,\n        custom_labels: false,\n        fieldsValid: {title: true, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true},\n        disabled: false\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        const {lower_label, upper_label, correct_answer} = this.props.questionObj\n\n        this.setState({ title: this.props.questionObj.question_title, question_image: this.props.questionObj.question_image })\n\n        if (lower_label !== null) {\n            if (lower_label !== \"0%\" || upper_label !== \"100%\") {\n                this.setState({\n                    labels: {lower: lower_label, \n                             upper: upper_label\n                            }\n                })\n            }\n        }\n        \n        if (correct_answer) {\n            const correct_arr = correct_answer.split(\" \");\n            if (correct_arr.length === 2) {\n                this.setState({\n                    answer_bounds: {\n                        lower: correct_arr[1],\n                        upper: \"\",\n                    },\n                    equality_operators: {\n                        lower: correct_arr[0],\n                        upper: \"\"\n                    },\n                })\n            }\n            else {\n                this.setState({\n                    answer_bounds: {\n                        lower: correct_arr[1],\n                        upper: correct_arr[4],\n                    },\n                    equality_operators: {\n                        lower: correct_arr[0],\n                        upper: correct_arr[3]\n                    },\n                    range: true,\n                    rangeVal: \"range\",\n                })\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    validateAnswers() {\n        let disabled = false;\n\n        if (this.state.custom_labels && this.state.has_correct_answer) {\n            const keys = Object.keys(this.state.fieldsValid);\n            for (const key of keys) {\n                if (!this.state.fieldsValid[key]) disabled = true;\n            }\n        }\n        else {\n            if (this.state.custom_labels) {\n                if (!this.state.fieldsValid.lower_label || !this.state.fieldsValid.upper_label || !this.state.fieldsValid.title) disabled = true;\n            }\n            else {\n                if (this.state.has_correct_answer) {\n                    if (!this.state.fieldsValid.lower_bound || !this.state.fieldsValid.upper_bound || !this.state.fieldsValid.equality_operators) {\n                        disabled = true;\n                    }\n                }\n                else {\n                    if (!this.state.fieldsValid.title) disabled = true;\n                }\n            }\n        }\n       \n        if (!this.state.fieldsValid.title) disabled = true;\n\n        this.setState({ disabled: disabled })\n    }\n    \n    // handles the switch to control setting a correct answer for the question\n    setCorrectAnswer = name => event => {\n\n        if (!event.target.checked) {\n            this.setState({\n                answer_bounds:{upper:\"\", lower:\"\"},\n                equality_operators: {upper:\"\", lower:\"\"}, \n                range: false,\n                rangeVal: \"not_range\", \n            })\n        }\n       \n\n        this.setState({ [name]: event.target.checked },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n    // controls switch to set custom labels for bounds\n    setCustomLabels = name => event => {\n        if (!event.target.checked) {\n            let fieldsValid = this.state.fieldsValid;\n            fieldsValid.lower_label = true;\n            fieldsValid.upper_label = true;\n            this.setState({\n                fieldsValid: fieldsValid,\n                labels: {upper:\"100%\", lower:\"0%\"},\n                custom_labels: false,\n            })\n        }\n        this.setState({ [name]: event.target.checked });\n        this.validateAnswers();\n    };\n\n    // gets opposite of upper_bound/lower_bound vice\n    getOppBound(bound) {\n       if (bound === \"upper_bound\") return \"lower_bound\";\n       return \"upper_bound\";\n    }\n\n    // gets opposite of upper/lower vice\n    getOppSide(side) {\n        if (side === \"upper\") return \"lower\";\n        return \"upper\";\n     }\n\n    isInRange(operator, value) {\n        if (operator.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n\n        if (operator === \"<\") {\n            if (value === \"0\") {\n                return false;\n            }\n        }\n        if (operator === \">\") {\n            if (value === \"100\") return false;\n        }\n        return true;\n    }\n\n    // sets if bounds and operators are valid \n    validateBoundsAndOperators() {\n\n        let allValid = true;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (!this.isInRange(this.state.equality_operators.lower, this.state.answer_bounds.lower)) {\n            fieldsValid.equality_operators = false;\n            fieldsValid.lower_bound = false;\n            allValid = false;\n        }\n\n        if (this.state.range) {\n            if (!this.isInRange(this.state.equality_operators.upper, this.state.answer_bounds.upper)) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.upper_bound = false;\n                allValid = false;\n            }\n\n            if (this.state.answer_bounds.lower === this.state.answer_bounds.upper) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.lower_bound = false;\n                allValid = false;\n            }\n\n            let valid = true;\n            switch(this.state.equality_operators.lower) {\n                case \">\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \">=\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \"<\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                case \"<=\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                default:\n                    valid = true;\n            }\n\n            fieldsValid.equality_operators = valid && fieldsValid.equality_operators;\n\n            if (!valid) allValid = false;\n\n        }\n\n        if (allValid) {\n            fieldsValid = {title: this.state.fieldsValid.title, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true};\n        }\n        else {\n        }\n\n        this.setState({ fieldsValid: fieldsValid },\n            () => { this.validateAnswers() });\n    }\n    \n   \n    // function to handle setting correct answer bounds. prop contains \"lower\" or \"upper\"\n    setCorrectBounds = prop => event => {\n        let answerBounds = this.state.answer_bounds;\n        let val = event.target.value;\n\n        answerBounds[prop] = val;\n\n        if (val < 0) {\n            val = 0;\n        }\n        if (val > 100) {\n            val = 100;\n        }\n\n        if (!Number.isInteger(val)) {\n            val = Math.round(val);\n        }\n        \n    \n        this.setState({ answer_bounds: answerBounds },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    // function to set equality operators\n    handleEqualityOperator = prop => event => {\n\n        let equality_operators = this.state.equality_operators;\n        equality_operators[prop] = event.target.value;\n        this.setState({ equality_operators: equality_operators },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    validateTitle(value) {\n        let error = this.state.titleError;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n           error = \"Required\" ;\n           fieldsValid.title = false;\n        }\n        else {\n            error = \"\";\n            fieldsValid.title = true;\n        }\n            \n        this.setState({ titleError: error, fieldsValid: fieldsValid });\n\n        this.validateAnswers();\n    }\n\n    handleTitleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            title: value,\n        }, () => { this.validateTitle(value) });\n    };\n\n    handleLabelsValidation() {\n        let valid = false;\n        if (this.state.labels.upper.replace(/^\\s+|\\s+$/g, '') !== \"\" && this.state.labels.lower.replace(/^\\s+|\\s+$/g, '') !== \"\") valid  = true;\n\n        let fieldsValid = this.state.fieldsValid;\n        fieldsValid.lower_label = valid;\n        fieldsValid.upper_label = valid;\n        this.setState({ fieldsValid: fieldsValid })\n\n        this.validateAnswers();\n    }\n\n    handleLabelsChange = name => event => {\n        let value = event.target.value;\n        let labels = this.state.labels;\n        labels[name] = event.target.value;\n        this.setState({\n            labels: labels,\n        }, () => { this.handleLabelsValidation(name, value) });\n    };\n\n    handleSliderChange = (event, value) => {\n        this.setState({ slider_value: value });\n      };\n\n    // whether or not to display to inqualities\n    handleSetRange = (e) => {\n        let range = true;\n        if (e.target.value === \"not_range\") {\n            range = false;\n        }\n        this.setState({\n            rangeVal: e.target.value,\n            range: range\n        });\n    };\n\n    // true will be && and false will be ||\n    getOperatorCondition(lower_operator) {\n        \n        let condition = true;\n\n        switch (lower_operator) {\n            case \"<\":\n                condition = \"||\";\n                break;\n            case \"<=\":\n                condition = \"||\";\n                break;\n            case \">\":\n                condition = \"&&\";\n                break;\n            case \">=\":\n                condition = \"&&\";\n                break;\n            default:\n                condition = true;\n        }\n        return condition;\n    }\n\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        // need this check for submitting with enter key\n        if (this.state.disabled) {\n            return;\n        }\n\n        \n        let correct_answer = \"\";\n        if (this.state.answer_bounds.lower !== \"\") {\n            \n            if (this.state.range) {\n                let answerBounds = this.state.answer_bounds;\n                let equalityOperators = this.state.equality_operators;\n                if (Number(answerBounds.lower) > Number(answerBounds.upper)) {\n                    const lower = answerBounds.lower;\n                    answerBounds.lower = answerBounds.upper;\n                    answerBounds.upper = lower;\n                    let equalityOperators = this.state.equality_operators;\n                    const lower_operator = this.state.equality_operators.lower;\n                    equalityOperators.lower = equalityOperators.upper;\n                    equalityOperators.upper = lower_operator;\n                }\n                correct_answer = equalityOperators.lower + \" \" + answerBounds.lower.toString() + \" \" +  this.getOperatorCondition(equalityOperators.lower) + \" \" + equalityOperators.upper + \" \" + answerBounds.upper.toString();\n            }\n            else {\n                correct_answer = this.state.equality_operators.lower + \" \" + this.state.answer_bounds.lower.toString();\n            }\n        }\n\n        if(!this.state.disabled) {\n            this.props.getEdits( \n                new SliderQuestionObj(this.props.questionObj.id, \n                    this.props.questionObj.lecture_id, \"slider\", \n                    this.state.title, this.state.question_image, correct_answer, \n                    this.props.questionObj.creator_id, this.props.questionObj.is_open, \n                    this.props.questionObj.opened_at, this.props.questionObj.closed_at, \n                    this.props.questionObj.created_at, null, null, this.state.labels.lower, this.state.labels.upper))\n        }\n        this.handleClose();\n    }\n\n    removeImage = () => {\n        this.setState({ question_image: \"\" })\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Button variant=\"outlined\" onClick={this.handleOpen} disabled={this.props.is_open}>\n                    Edit\n                </Button>\n                <Dialog\n                    fullWidth\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                <DialogTitle id=\"alert-dialog-title\">{\"Edit Slider Question\"}</DialogTitle>\n                <DialogContent>\n                <Grid container justify=\"center\" className={this.styles.container}  >\n                    <Grid container direction=\"column\" align-items=\"flex-start\">\n                        <Grid item className={this.styles.entry}>\n                            <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={this.state.titleError !== \"\"}\n                                    id=\"standard-name\"\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleTitleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.titleError}\n                                />\n                            </form>\n                        </Grid>\n\n                        <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                            <Grid item className={this.styles.entry}>\n                                <Typography variant=\"h6\" color=\"textPrimary\">\n                                    Image Preview\n                                </Typography>\n                            </Grid>\n                            <Grid item className={this.styles.entry}>\n                                <img src={this.state.question_image} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n\n                        <Grid item className={this.styles.entry}>\n                            <Grid container direction=\"row\">\n                                <Grid item className={this.styles.buttonItem}>\n                                    <Button\n                                        variant=\"contained\"\n                                        component=\"label\"\n                                    >\n                                    {this.state.question_image ? \"Update Image\" : \"Upload Image\"}\n                                    <input\n                                        type=\"file\"\n                                        style={{ display: \"none\" }}\n                                        onChange={this.encodeImageFileAsURL}\n                                    />\n                                    </Button>\n                                </Grid>\n\n                                <Collapse in={this.state.question_image} timeout=\"auto\" unmountOnExit>\n                                    <Grid item className={this.styles.buttonItem}>\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"label\"\n                                            onClick={this.removeImage}\n                                        >\n                                        Remove Image\n                                        </Button>\n                                    </Grid>\n                                </Collapse>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"column\" justify=\"flex-start\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.custom_labels}\n                                    onChange={this.setCustomLabels('custom_labels')}\n                                    value={this.state.custom_labels}\n                                    />\n                                }\n                                label=\"change/set labels\"\n                            />\n                        </Grid>\n                        \n                        {this.state.custom_labels && \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={24} className={this.styles.entry}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"lower label\"\n                                            value={this.state.labels.lower}\n                                            onChange={this.handleLabelsChange('lower')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"upper label\"\n                                            value={this.state.labels.upper}\n                                            onChange={this.handleLabelsChange('upper')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        }\n                    </Grid>                       \n                    <Grid container direction=\"column\" justify=\"space-evenly\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.has_correct_answer}\n                                    onChange={this.setCorrectAnswer('has_correct_answer')}\n                                    value={this.state.has_correct_answer}\n                                    />\n                                }\n                                label=\"change/set correct answer\"\n                            />\n                        </Grid>\n                        {this.state.has_correct_answer && \n                            <Grid item>\n                                <Grid container direction=\"row\">\n                                    <FormControl component=\"fieldset\">\n                                        <RadioGroup\n                                            name=\"rangeVal\"\n                                            value={this.state.rangeVal}\n                                            onChange={this.handleSetRange}\n                                        >\n                                            <FormControlLabel value={\"not_range\"} name=\"not_range\" control={<Radio />} label={\"inequality/equality\"} />\n                                            <FormControlLabel value={\"range\"} name=\"range\" control={<Radio />} label={\"set range\"} />  \n                                        </RadioGroup>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        }\n                        \n                        {this.state.has_correct_answer && this.state.range ? ( <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry} spacing={16}> \n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.lower}\n                                        onChange={this.handleEqualityOperator('lower')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer lower bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.lower}\n                                        onChange={this.setCorrectBounds('lower')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.upper}\n                                        onChange={this.handleEqualityOperator('upper')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">and/or</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer upper bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.upper}\n                                        onChange={this.setCorrectBounds('upper')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    /> \n                                </Grid>\n                            </Grid>\n                        </Grid>)\n                        : (this.state.has_correct_answer && <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry}>\n                                <Grid item> \n                                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={24}>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                select\n                                                fullWidth\n                                                value={this.state.equality_operators.lower}\n                                                onChange={this.handleEqualityOperator('lower')}\n                                                InputProps={{\n                                                    startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                                }}\n                                                >\n                                                {answerBoundOptions.map(option => (\n                                                    <MenuItem key={option.value} value={option.value}>\n                                                    {option.label}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                fullWidth\n                                                id=\"correct answer lower bound\"\n                                                type=\"number\"\n                                                value={this.state.answer_bounds.lower}\n                                                onChange={this.setCorrectBounds('lower')}\n                                                InputProps={{\n                                                    endAdornment: (\n                                                    <InputAdornment variant=\"filled\" position=\"end\">\n                                                        %\n                                                    </InputAdornment>\n                                                    ),\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                    </Grid>\n                \n            </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                        cancel\n                    </Button>\n                    <Button onClick={this.handleSubmit} color=\"secondary\" disabled={this.state.disabled}>\n                        submit\n                    </Button>\n            </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(EditSLQDialog);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport OpenClosedButton from '../OpenClosedButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { observer } from 'mobx-react';\nimport ViewStatsModalWrapped from '../ViewStatsModal';\nimport EditFRQDialog from '../EditFRQDialog';\nimport EditMCQDialog from '../EditMCQDialog';\nimport EditSLQDialog from '../EditSLQDialog';\n\n\nconst styles = theme => ({\n    open: {\n        marginTop: 5\n    }\n});\n\n@observer\nclass QuestionListItem extends React.Component {\n    state = {\n        selected: false,\n        open: false,\n        editMode: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    componentDidMount() {\n        if (!this.props.profStore.dataLoaded) {\n            this.props.apiProfService.loadData().then(() => {\n                this.props.profStore.dataLoaded = true\n            })\n        }\n        if (this.props.parentLecture !== undefined && this.props.questionObj.id !== undefined) {\n            this.setState({ selected: this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.questionObj.id).is_open })\n        }\n        this.setState({ editMode: this.props.mode === \"editMode\" })\n    }\n    componentDidUpdate(prevProps) {\n        if(prevProps.parentLecture.id !== this.props.parentLecture.id) {\n            this.setState({ selected: this.props.profStore.getQuestionWithId(this.props.parentLecture, this.props.questionObj.id).is_open })\n        }\n    }\n\n    handleToUpdate = (selected) => {\n        this.setState({\n            selected\n        })\n    }\n\n\n    render() {\n        return (\n            <ListItem selected={this.state.selected} divider > \n                <ListItemText primary={(this.props.number + 1) + \". \" + this.props.questionObj.question_title} />\n                <ListItemSecondaryAction>\n                    <Grid container direction=\"row\" justify=\"flex-end\">\n                        <Grid item className={this.styles.open}>\n                            {this.props.mode === \"viewingMode\" ? (<OpenClosedButton className={this.styles.open} parentLecture={this.props.parentLecture}\n                                questionId={this.props.questionObj.id} handleListClose={this.props.handleListClose}\n                                handleClick={this.props.handleClick} handleToUpdate={this.handleToUpdate} open={this.props.questionObj.is_open} \n                                recentlyClosedId={this.props.recentlyClosedId} recentlyOpenedId={this.props.recentlyOpenedId} />) \n                                : ( this.props.questionObj.question_type === 'free_text' ? \n                                    (<EditFRQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/>) \n                                    : (this.props.questionObj.question_type === 'multiple_choice' ? \n                                        (<EditMCQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/>) \n                                        : (<EditSLQDialog questionObj={this.props.questionObj} getEdits={this.props.getEdits} is_open={this.state.selected}/> )) \n                                )\n                            }\n                        </Grid>\n\n                        <Grid item >\n                            <Tooltip title=\"View Stats\" placement=\"top\">\n                                <ViewStatsModalWrapped index={(this.props.number + 1)} question={this.props.questionObj} parentLecture={this.props.parentLecture} />\n                            </Tooltip>\n                        </Grid>\n                    </Grid>\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withStyles(styles)(QuestionListItem)","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    checkBox: {\n        color: theme.palette.primary.dark,\n    },\n    checkBoxContainer: {\n        height: theme.spacing.unit*4.5,\n        width: theme.spacing.unit*12.5,\n        justify: \"center\"\n    }\n});\n\n@observer\nclass DeleteQuestionsList extends React.Component {\n\n    state = {\n        referrerLectureId: null,\n        delQuestions: [],\n        questions: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.questions  = props.questions\n    }\n    componentDidMount() {\n        let shouldDelete = [];\n        let closed_questions = [];\n        for (let i = 0; i < this.questions.length; i++) {\n            if (!this.questions[i].is_open) closed_questions.push(this.questions[i]); // open questions cannot be deleted\n        }\n        closed_questions.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        }).map((questionObj, index) => \n           shouldDelete.push({\n            id: questionObj.id,\n            checked: false,\n            title: questionObj.question_title\n        }))\n        if (closed_questions !== undefined && closed_questions !== null) {\n            this.setState({\n                questions: closed_questions,\n                delQuestions: shouldDelete\n            })\n        }\n        \n    }\n    // looked up to here\n    handleChange = id =>  event => {\n        // if id in lectures, then we are unchecking; otherwise we need to uncheck\n        this.state.delQuestions.find(x => x.id === id).checked = event.target.checked;\n        this.setState({\n            delQuestions: this.state.delQuestions\n        })\n        // send checked boxes back to parent\n        this.props.getDeletions(this.state.delQuestions);\n    }\n\n\n    render() {\n        return (\n            this.state.questions.length > 0 ? (\n                <FormControl component=\"fieldset\" fullWidth>\n                <FormGroup\n                    name=\"delQuestions\"\n                    value={this.state.delQuestions}\n                    onChange={this.handleChange}\n                    >\n                    <List component=\"nav\">\n                            {this.state.delQuestions.map((q, index) => {\n                                return (\n                                    <ListItem divider key={index} >\n                                        <ListItemText primary={(index + 1).toString() + \". \" +q.title}/>\n                                        <div className={this.styles.checkBoxContainer}>\n                                            <ListItemSecondaryAction>\n                                                <FormControlLabel key={index} control={\n                                                        <Checkbox className={this.styles.checkBox} key={q.id} checked={q.checked} onChange={this.handleChange(q.id)} value={q.id} />\n                                                    }/>\n                                            </ListItemSecondaryAction>\n                                        </div> \n                                    </ListItem>   \n                                )\n                            })}\n                    </List>\n                </FormGroup>\n            </FormControl>\n            ) : (\n                <Typography variant=\"body1\" > It looks like all your questions are open... Please close questions you would like to delete. </Typography>\n            )\n            \n        );\n    }\n}\n\nexport default withStyles(styles)(DeleteQuestionsList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport AddQuestionModalWrapped from '../AddQuestionModal';\nimport QuestionListItem from '../QuestionListItem';\nimport PropTypes from 'prop-types';\n// import EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteQuestionsList from '../DeleteQuestionsList';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LectureObj from '../../models/LectureObj';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n    startLectureBtn: {\n        float: \"right\"\n    },\n    title: {\n        margin: theme.spacing.unit,\n    },\n});\n\n@observer\nclass AllQuestionsFrame extends React.Component {\n    state = {\n        toNewQuestion: false,\n        deleteMode: false,\n        editMode: false,\n        mode: \"viewingMode\",\n        deletions: [],\n        delTitles: [],\n        open: false,\n        parentLecture: new LectureObj(),\n        lectureTitle: \"\",\n        questions: [],\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n        this.parentLectureId = props.parentLectureId\n    }\n\n    componentDidMount() {\n        console.log(\"mounting\")\n         if (!this.profStore.dataLoaded) {\n             this.apiProfService.loadData().then(() => {\n                 console.log(\"loading data\")\n                 this.profStore.dataLoaded = true\n                 const lecture = this.profStore.getLectureWithId(this.parentLectureId);\n                 if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: lecture,\n                        questions: lecture.questions,\n                        lectureTitle: lecture.title\n                    })\n                 }\n                })\n            } else {\n            const lecture = this.profStore.getLectureWithId(this.parentLectureId);\n            if (lecture !== undefined) {\n                this.setState({\n                    parentLecture: lecture,\n                    questions: lecture.questions,\n                    lectureTitle: lecture.title\n                })\n             }\n         }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextLecture = nextProps.profStore.getLectureWithId(nextProps.parentLectureId);\n        if (nextLecture.questions.length === this.state.questions.length || nextLecture.id !== this.state.parentLecture.id) {\n            this.setState({\n                parentLecture: nextLecture,\n                questions: nextLecture.questions,\n                lectureTitle: nextLecture.title\n            })\n        }\n    }\n\n    \n    \n\n    handleNewQuestionClick = () => {\n        this.setState(() => ({\n            toNewQuestion: true\n        }))\n    }\n\n    handleDeleteQuestions = () => {  \n        this.props.disableTopButton()\n        this.setState({ mode: \"deleteMode\", deleteMode: true, editMode: false }); \n    }\n\n    handleEditQuestions = () => {\n        this.props.disableTopButton()\n        this.setState({ mode: \"editMode\", deleteMode: false, editMode: true });\n    }\n\n    handleRestoreMode = () => {\n        this.props.restoreTopButton()\n        this.setState({ mode: \"viewingMode\", deleteMode: false, editMode: false });\n    }\n\n    // gets course edits from child\n    getEdits = (question) => {\n        this.props.apiProfService.editQuestion(question);\n        this.props.mcqEditDetect();\n    }\n\n     // gets questions to be deleted from child component\n     getDeletions = (delQuestions) => {\n        this.setState({\n            deletions: delQuestions\n        })\n    }\n\n    handleDelete = () => {\n        if (this.state.deletions.length === 0) {\n            this.handleRestoreMode();\n        }\n        else {\n            const qArr = [];\n            const delTitles = []\n            for (let i = 0; i < this.state.deletions.length; i++) {\n                if (this.state.deletions[i].checked) {\n                    qArr.push(this.state.deletions[i].id);\n                    delTitles.push(this.state.deletions[i].title);\n                }\n            }\n            if (qArr.length > 0) {\n                this.setState({\n                    delTitles: delTitles,\n                    delIds: qArr,\n                    open: true\n                })\n            }\n            else {\n                this.handleClose()\n            }\n        }\n\n    }\n\n    handleClose = () => {\n        this.setState({\n            deleteMode: false,\n            open: false,\n            delIds: [],\n            delTitles: [],\n            deletions: [],\n        });\n    };\n\n    handleDeletion = () => {\n\n        this.props.handleFinalDeletion(this.state.delIds);\n        this.handleClose();\n        this.handleRestoreMode();\n    };\n\n    render() {\n        // Handle routes\n        if (this.state.toNewQuestion === true) {\n            return <Redirect to='/professor/TODO' push />\n        }\n\n        return (\n            <Card className={this.styles.card}>\n                <CardContent>\n                    {console.log(this.state.parentLecture)}\n                    <Grid container direction='row' justify='space-between' alignItems='stretch'>\n                        <Grid item>\n                            <Typography className={this.styles.title} variant=\"h6\" color=\"inherit\">\n                                Questions for {this.state.lectureTitle}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-end\">\n                                <Grid item>\n                                    {this.state.editMode ? (\n                                    <Tooltip title={\"Done Editing\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleRestoreMode}>\n                                            <DoneIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    ) : (\n                                    <Tooltip title={\"Edit Questions\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleEditQuestions} component=\"div\" disabled={this.state.mode === \"deleteMode\" || this.state.questions.length === 0}>  \n                                            <EditIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    )}    \n                                </Grid>\n                                <Grid item>\n                                {this.state.deleteMode ? (\n                                    <Tooltip title={\"Done Deleting\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)}>\n                                            <DoneIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    ) : (\n                                    <Tooltip title={\"Delete Questions\"} placement=\"top-start\">\n                                        <IconButton color=\"secondary\" onClick={this.handleDeleteQuestions} component=\"div\" disabled={this.state.mode === \"editMode\" || this.state.questions.length === 0}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                    )}\n                                </Grid>\n                                <Grid item>\n                                    <AddQuestionModalWrapped lectureId={this.state.parentLecture.id} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    {this.state.deleteMode ? \n                    (<DeleteQuestionsList questions={this.state.questions} getDeletions={this.getDeletions}/>)\n                    : \n                    (<List component=\"nav\">\n                        {this.state.questions.slice().sort(function (a, b) {\n                            if (a.created_at < b.created_at) {\n                                return -1;\n                            }\n                            if (a.created_at > b.created_at) {\n                                return 1;\n                            }\n                            // a must be equal to b\n                            return 0;\n                        }).map((questionObj, index) => {\n                            return (<QuestionListItem number={index} mode={this.state.mode} getEdits={this.getEdits} handleListClose={this.props.handleListClose} recentlyOpenedId={this.props.recentlyOpenedId} profStore={this.profStore} handleClick={this.props.handleClick} parentLectureId={this.state.parentLecture.id} parentLecture={this.state.parentLecture} questionObj={questionObj} key={index} recentlyClosedId={this.props.recentlyClosedId} />\n                            )\n                        })}\n                    </List>)\n                    }\n                </CardContent>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete the following question(s): \"}</DialogTitle>\n                    <DialogContent>\n                        {this.state.delTitles.map((title, index) =>\n                            <DialogContentText key={index} id=\"alert-dialog-description\">\n                                {title}\n                            </DialogContentText>\n\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                            No\n                        </Button>\n                        <Button onClick={this.handleDeletion} color=\"secondary\">\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Card>\n        );\n    }\n}\n\nAllQuestionsFrame.propTypes = {\n    parentLecture: PropTypes.object\n};\n\nexport default withStyles(styles)(AllQuestionsFrame);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport Paper from '@material-ui/core/Paper';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport Typography from '@material-ui/core/Typography';\nimport AllQuestionsFrame from '../../../components/AllQuestionsFrame';\nimport MCQuestionStats from '../../../components/MCQuestionStats';\nimport FreeTextStats from '../../../components/FreeTextStats';\nimport SliderStats from '../../../components/SliderStats';\n\n\nconst socket = socketIOClient(socketioURL)\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    grid: {\n        paddingTop: theme.spacing.unit * 2,\n    },\n    text: {\n        color: '#ffffff'\n    },\n    textQ: {\n        color: '#ffffff',\n        paddingTop: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 10,\n        paddingLeft: theme.spacing.unit * 10,\n        paddingBottom: theme.spacing.unit * 2\n    },\n    startLectureBtn: {\n        float: \"right\"\n    },\n    showCodeBtn: {\n        float: \"left\"\n    }\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorViewQuestions extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.lectureId = null\n        this.state = {\n            currentQuestionIndex: 0,\n            currentQuestionId: 0,\n            openQuestionId: 0,\n            recentlyClosedId: 0,\n            recentlyOpenedId: 0,\n            btnStatus: 0,\n            parentLecture: { questions: [], title: \"\" },\n            editDeleteMode: false,\n            updateMCQStats: false,\n        }\n        this.profStore = props.profStore\n        this.apiProfService = props.apiService\n    }\n\n    componentDidMount() {\n        // Get the lecture\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                const lecture = this.profStore.getLectureWithId(lectureId)\n                if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: this.profStore.getLectureWithId(lectureId)\n                    })\n                    this.setState({\n                        currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                    })\n                }\n            })\n        } else {\n            const { lectureId } = this.props.match.params\n            this.lectureId = lectureId\n            const lecture = this.profStore.getLectureWithId(lectureId)\n            if (lecture !== undefined) {\n                this.setState({\n                    parentLecture: this.profStore.getLectureWithId(lectureId)\n                })\n                this.setState({\n                    currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                })\n            }\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.match.params.lectureId !== this.state.parentLecture.id) {\n\n            if (this.state.parentLecture.questions.length > 0) {\n                this.apiProfService.closeAllQuestions(this.state.parentLecture.id);\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                this.setState({\n                    parentLecture: this.profStore.getLectureWithId(lectureId),\n                    currentQuestionIndex: 0,\n                    currentQuestionId: this.convertQuestionIndexToId(0),\n                    openQuestionId: 0,\n                    recentlyClosedId: 0,\n                    recentlyOpenedId: 0,\n                    btnStatus: 0,\n                    editDeleteMode: false,\n                    updateMCQStats: false,\n                })\n            }\n            else {\n                const { lectureId } = this.props.match.params\n                this.lectureId = lectureId\n                const lecture = this.profStore.getLectureWithId(lectureId)\n                if (lecture !== undefined) {\n                    this.setState({\n                        parentLecture: this.profStore.getLectureWithId(lectureId)\n                    })\n                    this.setState({\n                        currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n                    })\n                }\n            }\n                \n            \n        }\n        if (this.state.currentQuestionId !== this.convertQuestionIndexToId(this.state.currentQuestionIndex)) {\n            this.setState({\n                currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n            })\n        }     \n    }\n\n    componentWillUnmount() {\n        // close all questions in this lecture\n        this.apiProfService.closeAllQuestions(this.lectureId)\n    }\n\n    mcqStatsUpdated = () => {\n        this.setState({ updateMCQStats: false })\n    }\n    mcqEditDetect = () => {\n        this.setState({ updateMCQStats: true })\n    }\n\n    disableTopButton = () => {\n        this.setState({ editDeleteMode: true })\n    }\n\n    restoreTopButton = () => {\n        this.setState({ editDeleteMode: false });\n    }\n    handleFinalDeletion = (delIds) => {\n\n        for (let i = 0; i < delIds.length; i++) {\n            var question = this.state.parentLecture.questions.find(q => q.id === delIds[i]);\n            if (question && question.is_open) {\n                this.apiProfService.closeQuestion(delIds[i], this.state.parentLecture.id);\n                this.handleListClickClose(delIds[i]);\n            }\n        }\n        this.apiProfService.deleteQuestions(delIds, this.state.parentLecture.id);\n        this.setState({\n            parentLecture: this.profStore.getLectureWithId(this.props.match.params)\n        })\n    };\n\n\n    handleBtnClick = () => {\n        switch (this.state.btnStatus) {\n            case 0:\n                if (!this.profStore.getQuestionWithId(this.state.parentLecture, this.convertQuestionIndexToId(this.state.currentQuestionIndex)).is_open) {\n                    // Handle the \"Open Question\"\n                    this.setState({ recentlyOpenedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), recentlyClosedId: 0 })\n                    this.apiProfService.openQuestion(this.convertQuestionIndexToId(this.state.currentQuestionIndex), this.state.parentLecture.id)\n                    socket.emit('subscribe professor', this.convertQuestionIndexToId(this.state.currentQuestionIndex))\n                    this.setState({ btnStatus: 1,  openQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex) })\n                }\n                break;\n\n            case 1:\n                // Handle the \"Close Question\"\n                this.apiProfService.closeQuestion(this.state.currentQuestionId, this.state.parentLecture.id)\n                this.setState({ recentlyClosedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex), recentlyOpenedId: 0})\n                // Check if this is last question\n                if (this.state.currentQuestionIndex + 1 >= this.state.parentLecture.questions.length) {\n                    \n                    this.setState({ btnStatus: 3, openQuestionId: 0 })\n                }   \n                else{\n                   \n                    this.setState({ btnStatus: 2, openQuestionId: 0 })\n                }\n                break;\n\n            case 2:\n                // Handle the \"Open Next Question\"\n                this.apiProfService.openQuestion(this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1), this.state.parentLecture.id)\n                socket.emit('subscribe professor', this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1))\n                this.setState({ recentlyOpenedId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1), recentlyClosedId: 0 })\n                \n                // Update the index to the next question\n                \n                this.setState({\n                    btnStatus: 1,\n                    currentQuestionIndex: this.state.currentQuestionIndex + 1,\n                    currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1),\n                    openQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1)\n                })\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handleListClick = (question_id) => {\n        // Update the index to the next question\n        \n        this.setState({\n            btnStatus: 1,\n            currentQuestionIndex: this.convertQuestionIdToIndex(question_id),\n            currentQuestionId: question_id,\n            openQuestionId: question_id\n        })\n    }\n    \n    handleListClickClose = (question_id) => {\n        // Update the index to the next question\n        if (this.state.currentQuestionIndex + 1 >= this.state.parentLecture.questions.length) {\n            \n            this.setState({ btnStatus: 3, openQuestionId: 0, recentlyOpenedId: 0 })\n        }\n        else{\n            \n            this.setState({\n                btnStatus: 2,\n                openQuestionId: 0,\n                recentlyOpenedId: 0\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.root} elevation={1}>\n                    <Typography variant=\"h6\" component=\"h6\" className={this.styles.text}>\n                        {this.state.parentLecture.title} on {this.state.parentLecture.date}\n                    </Typography>\n                    <Collapse in={this.state.parentLecture.scheduled}>\n                        <Typography variant=\"h6\" component=\"h6\" className={this.styles.text} align=\"right\">\n                            Questions available from {this.state.parentLecture.open_date} to {this.state.parentLecture.close_date}\n                        </Typography>\n                    </Collapse>\n                    <Typography variant=\"h4\" component=\"h4\" className={this.styles.textQ} align=\"center\">\n                        Q{this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1}: {this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_title}\n                    </Typography>\n                    <Collapse in={this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_image}>\n                        <Grid item align=\"center\">\n                            <img src={this.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_image} alt=\"Preview Unavailable\" height={300}></img>\n                        </Grid>\n                    </Collapse>\n                    <Collapse in={!this.state.parentLecture.scheduled}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleBtnClick()} className={this.styles.startLectureBtn} disabled={this.state.btnStatus === 3 || this.state.parentLecture.questions.length === 0 || this.state.editDeleteMode }>\n                            {this.state.btnStatus === 0 ? \"Open Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1) :\n                                this.state.btnStatus === 1 ? \"Close Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 1) :\n                                    this.state.btnStatus === 2 ? \"Open Question \" + (this.convertQuestionIdToIndex(this.state.currentQuestionId) + 2) :\n                                        \"No More Questions\"}\n                        </Button>\n                    </Collapse>\n                </Paper>\n                \n                <Grid container spacing={24} className={this.styles.grid}>\n                    <Grid item xs={12} md={8}>\n                        <AllQuestionsFrame handleListClose={this.handleListClickClose} handleClick={this.handleListClick} profStore={this.profStore}  \n                        apiProfService={this.apiProfService} parentLecture={this.state.parentLecture} parentLectureId={this.props.match.params.lectureId} \n                        handleFinalDeletion={this.handleFinalDeletion} recentlyClosedId={this.state.recentlyClosedId} recentlyOpenedId={this.state.recentlyOpenedId} \n                        selectedQuestionId={this.state.openQuestionId} disableTopButton={this.disableTopButton} restoreTopButton={this.restoreTopButton} mcqEditDetect={this.mcqEditDetect}/>\n                    </Grid>\n                    <Grid item xs={12} sm={9} md={4}>\n                        <List>\n                            {this.state.parentLecture.questions.map((questionObj, index) => {\n                                if (questionObj.question_type === \"multiple_choice\")\n                                return (<MCQuestionStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} updateMCQStats={this.state.updateMCQStats} mcqStatsUpdated={this.mcqStatsUpdated} />)\n                                else if (questionObj.question_type === \"free_text\")\n                                return (<FreeTextStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} />)\n                                else if (questionObj.question_type === \"slider\")\n                                return (<SliderStats key={index} parentLecture={this.state.parentLecture} selectedQuestionId={questionObj.id} />)\n                                \n                                // Something went wrong\n                                return (null)\n                            })}\n                        </List>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n    \n    getSortedQuestionsCopy() {\n        return this.profStore.getLectureWithId(this.props.match.params.lectureId).questions.slice().sort(function (a, b) {\n            if (a.created_at < b.created_at) {\n                return -1;\n            }\n            if (a.created_at > b.created_at) {\n                return 1;\n            }\n            // a must be equal to b\n            return 0;\n        });\n    }\n\n    convertQuestionIndexToId(index) {\n        if (index < this.profStore.getLectureWithId(this.props.match.params.lectureId).questions.length) {\n            var sortedQuestionsCopy = this.getSortedQuestionsCopy();\n            return sortedQuestionsCopy[index].id;\n        }\n\n        else {\n            return 0;\n        }\n\n    }\n\n    convertQuestionIdToIndex(question_id) {\n        var sortedQuestionsCopy = this.getSortedQuestionsCopy();\n        for (var i = 0; i < sortedQuestionsCopy.length; i++) {\n            if (sortedQuestionsCopy[i].id === question_id)\n                return i;\n        }\n        return 0;\n    }\n\n}\n\nexport default withStyles(styles)(ProfessorViewQuestions);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { MultipleChoiceQuestionObj } from '../../../models/QuestionObj';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit*60,\n    },\n    select: {\n        width: theme.spacing.unit*60\n    },\n    icon: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit*4\n    },\n    buttonContainer: {\n        paddingTop: theme.spacing.unit*2,\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 12,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n          borderColor: '#80bdff',\n          boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n      },\n});\n\nfunction answersValid(new_options) {\n    if (new_options.length === 0) return false;\n    for (const option of new_options) {\n        for (const val of Object.values(option)) {\n            if (val.replace(/^\\s+|\\s+$/g, '') === \"\") return false; \n        }     \n    }\n    return true;\n}\n\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddMCQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        correct_answer: '',\n        number_of_options: \"\",\n        question_image_string: \"\",\n        options: [], // necessary because of controlled form\n        answer_choices: {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"}, // must be set for input base to be controlled\n        checked: {option1: false, option2: false, option3: false, option4: false, option5: false},\n        should_delete: {option1:false, option2:false, option3:false, option4:false, option5:false},\n        titleError: \"\",\n        formValid: false,\n        titleValid: true,\n        hasAnswers: false,\n        optionsValid: false,\n        delete_mode: false,\n        deleteDisabled: false,\n        deleteConfirmDisabled: false,\n        uploading: false,\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    setAnswerObject(num_options) {\n        let answer_choices = {};\n        for (let i = 1; i <= num_options; i++) {\n            let option_string = \"option\" + i.toString();\n            answer_choices[option_string] = \"\";\n        }\n        return answer_choices;\n    }\n    setCheckedObject(num_options) {\n        let checked = {};\n        for (let i = 1; i <= num_options; i++) {\n            let option_string = \"option\" + i.toString();\n            checked[option_string] = false;\n        }\n        return checked;\n    }\n    handleDelete() {\n\n        let answer_choices = this.state.answer_choices;\n        let number_of_options = this.state.number_of_options;\n        let options = [];\n        let correct_answer = \"\";\n        let checked = {option1: false, option2: false, option3: false, option4: false, option5: false};\n\n        for (const k of Object.keys(this.state.should_delete)) {\n            if (this.state.should_delete[k]) {\n                number_of_options--;\n            }\n        }\n\n        // abort if less than two options remain, but button disabling should prevent this anyway\n        if (number_of_options < 2) {\n            this.setState({\n                should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n                delete_mode: false,\n            })\n            return;\n        }\n\n        let index = 1;\n        for (const k of Object.keys(answer_choices)) {\n            if (!this.state.should_delete[k]) {\n                let option_string = \"option\" + index.toString();\n                options.push({ [option_string]: answer_choices[k] });\n                if (k === this.state.correct_answer) correct_answer = option_string;\n                index++;\n                if (index > number_of_options) {\n                    break;\n                }\n            }\n        }\n\n        answer_choices = {option1: \"\", option2: \"\", option3: \"\", option4: \"\", option5: \"\"};\n        // this is not the nicest way to do this, but it's functional, and I couldn't find my bug in my nicer code\n        options.map(option => answer_choices[Object.keys(option)[0]] = Object.values(option)[0]);\n\n        if (correct_answer !== \"\") checked[correct_answer] = true;\n\n        this.setState({\n            should_delete: { option1:false, option2:false, option3:false, option4:false, option5:false },\n            answer_choices: answer_choices,\n            correct_answer: correct_answer,\n            checked: checked,\n            number_of_options: number_of_options,\n            delete_mode: false,\n            options: options,\n            deleteDisabled: number_of_options <= 2,\n        }, () => { this.validateFields('answer_choices', options) });\n       \n    }\n\n    validateFields(name, value) {\n        let titleValid = this.state.titleValid;\n        let errors = this.state.errors;\n        let has_answers = this.state.hasAnswers\n        let optionsValid = this.state.optionsValid;\n        let titleError = this.state.titleError;\n\n        switch(name) {\n            case \"title\":\n                if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n                    titleError = \"This field is required\";\n                    titleValid = false;\n                }\n                else {\n                    titleError = '';\n                    titleValid = true;\n                }\n                break;\n            case \"number_of_options\":\n                has_answers = true;\n                optionsValid = answersValid(value);\n                break;\n            case \"answer_choices\":\n                optionsValid = answersValid(value);\n                break;\n            default:\n        }\n       \n        this.setState({ errors: errors, \n                        titleValid: titleValid, \n                        titleError: titleError,\n                        hasAnswers: has_answers,\n                        optionsValid: optionsValid,\n         }, this.validateForm);\n\n    }\n    \n    validateForm() {\n        const titleValid = this.state.title !== \"\";\n        if (!titleValid) {\n            this.setState({ titleValid: false })\n        }\n        this.setState({ formValid: titleValid && this.state.hasAnswers && this.state.optionsValid });\n    }\n\n\n    handleOption = option => event => {\n        const key = Object.keys(option)[0];\n        let answer_choices = this.state.answer_choices;\n        let options = this.state.options;\n        answer_choices[key] = event.target.value;\n        options.find(x => Object.keys(x)[0] === key)[key] = event.target.value\n        this.setState({\n            answer_choices: answer_choices,\n            options: options,\n        }, () => { this.validateFields('answer_choices', options) });\n    }\n    \n    handleSetNumberOfOptions = name => event => {\n        let options = [];\n        let answer_choices = this.state.answer_choices;\n        let deleteDisabled = event.target.value <= 2;\n\n        for (let i = 1; i <= event.target.value; i++) {\n            let option_string = \"option\" + i.toString();\n            options.push({ [option_string]: this.state.answer_choices[option_string] })\n        }\n        if (event.target.value < this.state.number_of_options) {\n            for (let i = event.target.value + 1; i <=5; i++) {\n                let option_string = \"option\" + i.toString();\n                answer_choices[option_string] = \"\";\n            }\n        }\n\n        this.setState({\n            answer_choices: answer_choices,\n            number_of_options: event.target.value,\n            options: options,\n            deleteDisabled: deleteDisabled,\n        }, () => { this.validateFields(name, options)});\n\n    }\n\n    handleDeleteQueue = name => event => {\n        let should_delete = this.state.should_delete;\n        if (event.target.checked) {\n            should_delete[name] = true;\n        }\n        else {\n            should_delete[name] = false;\n        }\n\n        // compute if confirm button should be disabled\n        let numRemainingOptions = 0;\n        for (const k of Object.keys(should_delete)) {\n            if (!should_delete[k]) {\n                numRemainingOptions++;\n            }\n        }\n        \n        // adjust for the \"invisible\" options which have been counted as well\n        numRemainingOptions -= (5 - this.state.number_of_options);\n\n        this.setState({\n            should_delete: should_delete,\n            deleteConfirmDisabled: numRemainingOptions < 2,\n        })\n    }\n\n    handleCheck = option => event => {\n        const key = Object.keys(option)[0];\n        let checked = this.state.checked;\n        let correct_answer = key;\n        checked[key] = event.target.checked;\n\n        if (this.state.correct_answer === key) {\n            checked[key] = false;\n            correct_answer = \"\";\n        }\n    \n        this.setState({\n            correct_answer: correct_answer,\n            checked: checked\n        })\n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.validateFields(name, value) });\n    };\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.formValid) {\n            const { lectureId } = this.props.match.params\n\n            // EMRE: What is this?? lol\n            let correct_answer = \"\";\n            if (this.state.correct_answer !== \"\" && this.state.correct_answer !== null) {\n                correct_answer = this.state.correct_answer.substring(6, 7);\n            }\n            \n            // Send course to API\n            this.props.apiService.addQuestion(\n                new MultipleChoiceQuestionObj(null,\n                    lectureId, \"multiple_choice\",\n                    this.state.title, this.state.question_image_string, this.state.correct_answer,\n                    null, null, null, null, null, null, null,\n                    this.state.answer_choices.option1, this.state.answer_choices.option2, this.state.answer_choices.option3, this.state.answer_choices.option4, this.state.answer_choices.option5,\n                    this.state.number_of_options)\n            )\n    \n            this.setState({ toQuestions: true });\n        }\n\n    }\n    setDeleteMode() {\n        const delete_mode = !this.state.delete_mode;\n        this.setState({ delete_mode: delete_mode });\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n        \n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <Grid container direction=\"column\" justify=\"center\" className={this.styles.paper}>\n                <Grid item className={this.styles.item} >\n                    <Typography variant=\"h3\" color=\"textPrimary\">\n                        Add New Question:\n                    </Typography>\n                </Grid>\n                <Grid item className={this.styles.item}>\n                    <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                        <TextField\n                            fullWidth\n                            required\n                            error={!this.state.titleValid}\n                            id=\"standard-name\"\n                            label=\"Question Title\"\n                            value={this.state.title}\n                            onChange={this.handleChange('title')}\n                            margin=\"normal\"\n                            helperText={this.state.titleError}\n                        />\n                    </form>\n                </Grid>\n                <Grid item className={this.styles.item}>\n                    <form autoComplete=\"off\">\n                        <FormControl>\n                            <InputLabel htmlFor=\"number-options\">number of answer choices</InputLabel>\n                            <Select\n                                value={this.state.number_of_options}\n                                onChange={this.handleSetNumberOfOptions('number_of_options')}\n                                className={this.styles.select}\n                                disabled={this.state.delete_mode}\n                                inputProps={{\n                                name: 'number_of_options',\n                                id: 'number-options',\n                                }}\n                            >\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </form>\n                </Grid>\n\n                {this.state.hasAnswers && \n                    <Grid item>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    {this.state.delete_mode ? \n                                        <TableCell> Delete?</TableCell>\n                                        :\n                                        <TableCell>Correct Answer?</TableCell>\n                                    }\n                                    <TableCell>Answer Choices</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {this.state.delete_mode ? \n                               this.state.options.map((option, index) => \n                                    <TableRow key={index}> \n                                        <TableCell>\n                                            <Checkbox\n                                                checked={this.state.should_delete[Object.keys(option)[0]]}\n                                                onChange={this.handleDeleteQueue(Object.keys(option)[0])}\n                                                value={Object.keys(option)[0]}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Typography variant=\"body1\" align=\"justify\"> {this.state.answer_choices[Object.keys(option)[0]]}</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                                :\n                                this.state.options.map((option, index) => \n                                    <TableRow key={index}>\n                                        <TableCell>\n                                            <Checkbox\n                                                checked={this.state.correct_answer === Object.keys(option)[0]}\n                                                onChange={this.handleCheck(option)}\n                                                value={Object.keys(option)[0]}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <FormControl>\n                                                <InputBase\n                                                multiline\n                                                id=\"bootstrap-input\"\n                                                name={Object.keys(option)[0]}\n                                                value={this.state.answer_choices[Object.keys(option)[0]]}\n                                                onChange={this.handleOption(option)}\n                                                classes={{\n                                                    input: this.styles.bootstrapInput\n                                                }}\n                                                />\n                                            </FormControl>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            }\n\n                            </TableBody>\n                        </Table>    \n                    \n                                    \n                        <Grid container direction=\"row\" justify=\"flex-end\">\n                                {!this.state.delete_mode ? \n\n                                <IconButton onClick={this.setDeleteMode.bind(this)} color=\"secondary\" disabled={this.state.deleteDisabled}>\n                                    <DeleteIcon />\n                                </IconButton>\n\n                                :\n                                \n                                <IconButton color=\"secondary\" onClick={this.handleDelete.bind(this)} disabled={this.state.deleteConfirmDisabled}>\n                                        <DoneIcon className={this.styles.iconDone}/>\n                                </IconButton>\n                         \n                                }     \n                        </Grid>\n                            \n                    </Grid>\n                }\n                \n                <Grid item className={this.styles.item}>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >\n                    Upload Image\n                    <input\n                        type=\"file\"\n                        style={{ display: \"none\" }}\n                        onChange={this.encodeImageFileAsURL}\n                    />\n                    </Button>\n                </Grid>\n\n                <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                    <Typography variant=\"h6\" color=\"textPrimary\">\n                        Image Preview\n                    </Typography>\n                    <Grid item className={this.styles.item}>\n                        <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                    </Grid>\n                </Collapse>\n\n                <Grid item className={this.styles.item}>\n                    <Grid container direction=\"row\" className={this.styles.buttonContainer}>\n                        <form>\n                            <Button\n                                type=\"submit\"\n                                disabled={!this.state.formValid}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={this.handleSubmit}>\n                                    Submit\n                            </Button>\n                        </form>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddMCQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { FreeTextQuestionObj } from '../../../models/QuestionObj';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    item: {\n        paddingBottom: theme.spacing.unit\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddFreeTextQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        correct_answer: '',\n        error: '',\n        titleValid: false,\n        correct_answer_valid: true,\n        question_image_string: ''\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    handleValidation(name, value) {\n        switch(name) {\n            case \"title\":\n                if (this.state.title.replace(/^\\s+|\\s+$/g, '') === '') {\n                    this.setState({\n                        error: \"This field is required\",\n                        titleValid: false,\n                    })\n                } else {\n                    this.setState({\n                        error: \"\",\n                        titleValid: true,\n                    });\n                }\n                break;\n            case \"correct_answer\":\n                if (this.state.correct_answer !== \"\") {\n                    if (this.state.correct_answer.replace(/^\\s+|\\s+$/g, '') === '') {\n                        this.setState({ correct_answer_valid: false })\n                    }\n                    else {\n                        this.setState({ correct_answer_valid: true })\n                    }\n                }\n                else {\n                    if (!this.state.correct_answer_valid) this.setState({ correct_answer_valid: true })\n                }\n                break;\n            default:\n        }\n        \n    }\n\n    handleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.handleValidation(name, value) });\n    };\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        if(this.state.titleValid) {\n            const { lectureId } = this.props.match.params\n    \n            // Send course to API\n            this.props.apiService.addQuestion(\n                new FreeTextQuestionObj(null, lectureId, \"free_text\", this.state.title, this.state.question_image_string, this.state.correct_answer, null, null, null, null, null, null, null, '')\n            )\n    \n            this.setState({ toQuestions: true });\n        }\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n\n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Question:\n                </Typography>\n\n                <form className={this.styles.container} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                    <Grid container direction=\"column\">\n                        <TextField\n                            required\n                            error={!this.state.titleValid && !(this.state.error === \"\")}\n                            label=\"Question Title\"\n                            className={this.styles.textField}\n                            value={this.state.title}\n                            onChange={this.handleChange('title')}\n                            margin=\"normal\"\n                            helperText={this.state.error}\n                        />\n                        \n                        <TextField\n                            label=\"Correct Answer\"\n                            className={this.styles.textField}\n                            value={this.state.correct_answer}\n                            onChange={this.handleChange('correct_answer')}\n                            margin=\"normal\"\n                        />\n\n                        <Grid item className={this.styles.item}>\n                            <Button\n                                variant=\"contained\"\n                                component=\"label\"\n                            >\n                            Upload Image\n                            <input\n                                type=\"file\"\n                                style={{ display: \"none\" }}\n                                onChange={this.encodeImageFileAsURL}\n                            />\n                            </Button>\n                        </Grid>\n\n                        <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                            <Grid item className={this.styles.item}>\n                                <Typography variant=\"h6\" color=\"textPrimary\">\n                                    Image Preview\n                                </Typography>\n                            </Grid>\n\n                            <Grid item className={this.styles.item}>\n                                <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n\n                        <Grid item className={this.styles.item}>\n                            <Button\n                                type=\"submit\"\n                                disabled={!this.state.titleValid || !this.state.correct_answer_valid}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={this.handleSubmit}>\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddFreeTextQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Collapse from '@material-ui/core/Collapse';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { SliderQuestionObj } from '../../../models/QuestionObj';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Slider from '@material-ui/lab/Slider';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        marginRight: theme.spacing.unit*2.5,\n        width: 45\n    },\n    percentText: {\n        color: \"white\",\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"0.75em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n    },\n    entry: {\n        maxWidth: 500\n    },\n    titleContainer: {\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit*2\n    },\n    slidercontainer: {\n        paddingRight: theme.spacing.unit*2\n    },\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    container: {\n        flexWrap: 'wrap',\n    },\n    button: {\n        paddingTop: theme.spacing.unit*3,\n    },\n    andor: {\n        padding: theme.spacing.unit,\n        width: \"15%\"\n    },\n});\n\nconst answerBoundOptions = [\n    {\n      value: '=',\n      label: '=',\n    },\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n  const answerBoundOptionsRange = [\n    {\n      value: '<',\n      label: '<',\n    },\n    {\n      value: '>',\n      label: '>',\n    },\n    {\n    value: '<=',\n    label: '<=',\n    },\n    {\n    value: '>=',\n    label: '>=',\n    },\n  ];\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddSliderQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        titleError: \"\",\n        correct_answer: '', // will be sent as statement such as = 5 or >2 && < 100\n        labels: {lower:\"0%\", upper:\"100%\"}, // labels on slider\n        answer_bounds: {upper:\"\", lower:\"\"}, \n        range: false, // whether or not correct answer has a range\n        rangeVal: \"not_range\", // added for radio group purposes\n        equality_operators: {upper:\"\", lower:\"\"},\n        slider_value: 50,\n        has_correct_answer: false,\n        custom_labels: false,\n        question_image_string: \"\",\n        fieldsValid: {title: false, lower_label:false, upper_label:false, lower_bound:false, upper_bound: false, equality_operators: false},\n        disabled: true\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    validateAnswers() {\n        let disabled = false;\n\n        if (this.state.custom_labels && this.state.has_correct_answer) {\n            const keys = Object.keys(this.state.fieldsValid);\n            for (const key of keys) {\n                if (!this.state.fieldsValid[key]) disabled = true;\n            }\n        }\n        else {\n            if (this.state.custom_labels) {\n                if (!this.state.fieldsValid.lower_label || !this.state.fieldsValid.upper_label || !this.state.fieldsValid.title) disabled = true;\n            }\n            else {\n                if (this.state.has_correct_answer) {\n                    if (!this.state.fieldsValid.lower_bound || !this.state.fieldsValid.upper_bound || !this.state.fieldsValid.equality_operators) {\n                        disabled = true;\n                    }\n                }\n                else {\n                    if (!this.state.fieldsValid.title) disabled = true;\n                }\n            }\n        }\n       \n        if (!this.state.fieldsValid.title) disabled = true;\n\n        this.setState({ disabled: disabled })\n    }\n    \n    // handles the switch to control setting a correct answer for the question\n    setCorrectAnswer = name => event => {\n\n        if (!event.target.checked) {\n            this.setState({\n                answer_bounds:{upper:\"\", lower:\"\"},\n                equality_operators: {upper:\"\", lower:\"\"}, \n                range: false,\n                rangeVal: \"not_range\", \n            })\n        }\n       \n\n        this.setState({ [name]: event.target.checked },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n    // controls switch to set custom labels for bounds\n    setCustomLabels = name => event => {\n        if (!event.target.checked) {\n            let fieldsValid = this.state.fieldsValid;\n            fieldsValid.lower_label = true;\n            fieldsValid.upper_label = true;\n            this.setState({\n                fieldsValid: fieldsValid,\n                labels: {upper:\"100%\", lower:\"0%\"},\n                custom_labels: false,\n            })\n        }\n        this.setState({ [name]: event.target.checked });\n        this.validateAnswers();\n    };\n\n    // gets opposite of upper_bound/lower_bound vice\n    getOppBound(bound) {\n       if (bound === \"upper_bound\") return \"lower_bound\";\n       return \"upper_bound\";\n    }\n\n    // gets opposite of upper/lower vice\n    getOppSide(side) {\n        if (side === \"upper\") return \"lower\";\n        return \"upper\";\n     }\n\n    isInRange(operator, value) {\n        if (operator.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") return false;\n\n        if (operator === \"<\") {\n            if (value === \"0\") {\n                return false;\n            }\n        }\n        if (operator === \">\") {\n            if (value === \"100\") return false;\n        }\n        return true;\n    }\n\n    // sets if bounds and operators are valid \n    validateBoundsAndOperators() {\n\n        let allValid = true;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (!this.isInRange(this.state.equality_operators.lower, this.state.answer_bounds.lower)) {\n            fieldsValid.equality_operators = false;\n            fieldsValid.lower_bound = false;\n            allValid = false;\n        }\n\n        if (this.state.range) {\n            if (!this.isInRange(this.state.equality_operators.upper, this.state.answer_bounds.upper)) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.upper_bound = false;\n                allValid = false;\n            }\n\n            if (this.state.answer_bounds.lower === this.state.answer_bounds.upper) {\n                fieldsValid.equality_operators = false;\n                fieldsValid.lower_bound = false;\n                allValid = false;\n            }\n\n            let valid = true;\n            switch(this.state.equality_operators.lower) {\n                case \">\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \">=\":\n                    valid = this.state.equality_operators.upper !== \">\" && this.state.equality_operators.upper !== \">=\";\n                    break;\n                case \"<\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                case \"<=\":\n                    valid = this.state.equality_operators.upper !== \"<\" && this.state.equality_operators.upper !== \"<=\";\n                    break;\n                default:\n                    valid = true;\n            }\n\n            fieldsValid.equality_operators = valid && fieldsValid.equality_operators;\n\n            if (!valid) allValid = false;\n\n        }\n\n        if (allValid) {\n            fieldsValid = {title: this.state.fieldsValid.title, lower_label:true, upper_label:true, lower_bound:true, upper_bound: true, equality_operators: true};\n        }\n        else {\n        }\n\n        this.setState({ fieldsValid: fieldsValid },\n            () => { this.validateAnswers() });\n    }\n    \n   \n    // function to handle setting correct answer bounds. prop contains \"lower\" or \"upper\"\n    setCorrectBounds = prop => event => {\n        let answerBounds = this.state.answer_bounds;\n        let val = event.target.value;\n\n        answerBounds[prop] = val;\n\n        if (val < 0) {\n            val = 0;\n        }\n        if (val > 100) {\n            val = 100;\n        }\n\n        if (!Number.isInteger(val)) {\n            val = Math.round(val);\n        }\n        \n    \n        this.setState({ answer_bounds: answerBounds },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    // function to set equality operators\n    handleEqualityOperator = prop => event => {\n\n        let equality_operators = this.state.equality_operators;\n        equality_operators[prop] = event.target.value;\n        this.setState({ equality_operators: equality_operators },\n            () => { this.validateBoundsAndOperators() });\n\n    };\n\n\n    validateTitle(value) {\n        let error = this.state.titleError;\n        let fieldsValid = this.state.fieldsValid;\n\n        if (value.replace(/^\\s+|\\s+$/g, '') === \"\") {\n           error = \"Required\" ;\n           fieldsValid.title = false;\n        }\n        else {\n            error = \"\";\n            fieldsValid.title = true;\n        }\n            \n        this.setState({ titleError: error, fieldsValid: fieldsValid });\n\n        this.validateAnswers();\n    }\n\n    handleTitleChange = name => event => {\n        let value = event.target.value;\n        this.setState({\n            title: value,\n        }, () => { this.validateTitle(value) });\n    };\n\n    handleLabelsValidation() {\n        let valid = false;\n        if (this.state.labels.upper.replace(/^\\s+|\\s+$/g, '') !== \"\" && this.state.labels.lower.replace(/^\\s+|\\s+$/g, '') !== \"\") valid  = true;\n\n        let fieldsValid = this.state.fieldsValid;\n        fieldsValid.lower_label = valid;\n        fieldsValid.upper_label = valid;\n        this.setState({ fieldsValid: fieldsValid })\n\n        this.validateAnswers();\n    }\n\n    handleLabelsChange = name => event => {\n        let value = event.target.value;\n        let labels = this.state.labels;\n        labels[name] = event.target.value;\n        this.setState({\n            labels: labels,\n        }, () => { this.handleLabelsValidation(name, value) });\n    };\n\n    handleSliderChange = (event, value) => {\n        this.setState({ slider_value: value });\n      };\n\n    // whether or not to display to inqualities\n    handleSetRange = (e) => {\n        let range = true;\n        if (e.target.value === \"not_range\") {\n            range = false;\n        }\n        this.setState({\n            rangeVal: e.target.value,\n            range: range\n        });\n    };\n\n    // true will be && and false will be ||\n    getOperatorCondition(lower_operator) {\n        \n        let condition = true;\n\n        switch (lower_operator) {\n            case \"<\":\n                condition = \"||\";\n                break;\n            case \"<=\":\n                condition = \"||\";\n                break;\n            case \">\":\n                condition = \"&&\";\n                break;\n            case \">=\":\n                condition = \"&&\";\n                break;\n            default:\n                condition = true;\n        }\n        return condition;\n    }\n\n    encodeImageFileAsURL = (event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onloadend = () => {\n          console.log('RESULT', reader.result);\n          this.setState({ question_image_string: reader.result })\n        }\n        reader.onloadend = reader.onloadend.bind(this)\n        reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        // need this check for submitting with enter key\n        if (this.state.disabled) {\n            return;\n        }\n\n        const { lectureId } = this.props.match.params;\n        let correct_answer = \"\";\n        \n        if (this.state.has_correct_answer) {\n            if (this.state.range) {\n                let answerBounds = this.state.answer_bounds;\n                let equalityOperators = this.state.equality_operators;\n                if (Number(answerBounds.lower) > Number(answerBounds.upper)) {\n                    const lower = answerBounds.lower;\n                    answerBounds.lower = answerBounds.upper;\n                    answerBounds.upper = lower;\n                    let equalityOperators = this.state.equality_operators;\n                    const lower_operator = this.state.equality_operators.lower;\n                    equalityOperators.lower = equalityOperators.upper;\n                    equalityOperators.upper = lower_operator;\n                }\n                correct_answer = equalityOperators.lower + \" \" + answerBounds.lower.toString() + \" \" +  this.getOperatorCondition(equalityOperators.lower) + \" \" + equalityOperators.upper + \" \" + answerBounds.upper.toString();\n            }\n            else {\n                correct_answer = this.state.equality_operators.lower + \" \" + this.state.answer_bounds.lower.toString();\n            }\n        }\n\n        // Send course to API\n        this.props.apiService.addQuestion(\n            new SliderQuestionObj(null, lectureId, \"slider\", this.state.title, this.state.question_image_string, correct_answer, null, null, null, null, null, null, null, this.state.labels.lower, this.state.labels.upper)\n        );\n\n        this.setState({ toQuestions: true });\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n\n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <Grid container justify=\"center\" className={this.styles.container} spacing={24} >\n                <Grid item className={this.styles.gridItem} xs={12} sm={6}>\n                    <Grid container direction=\"column\" align-items=\"flex-start\">\n                        <Grid item>\n                            <Typography variant=\"h6\" color=\"textPrimary\">\n                                Add New Question:\n                            </Typography>\n                        </Grid>\n                        <Grid item className={this.styles.entry}>\n                            <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    error={this.state.titleError !== \"\"}\n                                    id=\"standard-name\"\n                                    label=\"Question Title\"\n                                    value={this.state.title}\n                                    onChange={this.handleTitleChange('title')}\n                                    margin=\"normal\"\n                                    helperText={this.state.titleError}\n                                />\n                            </form>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                component=\"label\"\n                            >\n                            Upload Image\n                            <input\n                                type=\"file\"\n                                style={{ display: \"none\" }}\n                                onChange={this.encodeImageFileAsURL}\n                            />\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"column\" justify=\"flex-start\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.custom_labels}\n                                    onChange={this.setCustomLabels('custom_labels')}\n                                    value={this.state.custom_labels}\n                                    />\n                                }\n                                label=\"custom labels (optional)\"\n                            />\n                        </Grid>\n                        \n                        {this.state.custom_labels && \n                            <Grid item>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={24} className={this.styles.entry}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"lower label\"\n                                            value={this.state.labels.lower}\n                                            onChange={this.handleLabelsChange('lower')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            fullWidth\n                                            id=\"standard-name\"\n                                            label=\"upper label\"\n                                            value={this.state.labels.upper}\n                                            onChange={this.handleLabelsChange('upper')}\n                                            margin=\"normal\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        }\n                    </Grid>                       \n                    <Grid container direction=\"column\" justify=\"space-evenly\" >\n                        <Grid item>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                    checked={this.state.has_correct_answer}\n                                    onChange={this.setCorrectAnswer('has_correct_answer')}\n                                    value={this.state.has_correct_answer}\n                                    />\n                                }\n                                label=\"set correct answer (optional)\"\n                            />\n                        </Grid>\n                        {this.state.has_correct_answer && \n                            <Grid item>\n                                <Grid container direction=\"row\">\n                                    <FormControl component=\"fieldset\">\n                                        <RadioGroup\n                                            name=\"rangeVal\"\n                                            value={this.state.rangeVal}\n                                            onChange={this.handleSetRange}\n                                        >\n                                            <FormControlLabel value={\"not_range\"} name=\"not_range\" control={<Radio />} label={\"inequality/equality\"} />\n                                            <FormControlLabel value={\"range\"} name=\"range\" control={<Radio />} label={\"set range\"} />  \n                                        </RadioGroup>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        }\n                        \n                        {this.state.has_correct_answer && this.state.range ? ( <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry} spacing={16}> \n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.lower}\n                                        onChange={this.handleEqualityOperator('lower')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer lower bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.lower}\n                                        onChange={this.setCorrectBounds('lower')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        select\n                                        value={this.state.equality_operators.upper}\n                                        onChange={this.handleEqualityOperator('upper')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">and/or</InputAdornment>,\n                                        }}\n                                        >\n                                        {answerBoundOptionsRange.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6} sm={3}>\n                                    <TextField\n                                        id=\"correct answer upper bound\"\n                                        type=\"number\"\n                                        value={this.state.answer_bounds.upper}\n                                        onChange={this.setCorrectBounds('upper')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\">\n                                                %\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    /> \n                                </Grid>\n                            </Grid>\n                        </Grid>)\n                        : (this.state.has_correct_answer && <Grid item>\n                            <Grid container direction=\"row\" justify=\"flex-start\" className={this.styles.entry}>\n                                <Grid item> \n                                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={24}>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                select\n                                                fullWidth\n                                                value={this.state.equality_operators.lower}\n                                                onChange={this.handleEqualityOperator('lower')}\n                                                InputProps={{\n                                                    startAdornment: <InputAdornment position=\"start\">answer</InputAdornment>,\n                                                }}\n                                                >\n                                                {answerBoundOptions.map(option => (\n                                                    <MenuItem key={option.value} value={option.value}>\n                                                    {option.label}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <TextField\n                                                fullWidth\n                                                id=\"correct answer lower bound\"\n                                                type=\"number\"\n                                                value={this.state.answer_bounds.lower}\n                                                onChange={this.setCorrectBounds('lower')}\n                                                InputProps={{\n                                                    endAdornment: (\n                                                    <InputAdornment variant=\"filled\" position=\"end\">\n                                                        %\n                                                    </InputAdornment>\n                                                    ),\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>)}\n                    </Grid>\n                    <Grid container className={this.styles.button}>\n                        <Button\n                            disabled={this.state.disabled}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            onClick={this.handleSubmit}>\n                            Submit\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item className={this.styles.gridItem} xs={12} sm={6}>\n                    <Grid container direction=\"column\" align-items=\"flex-start\" spacing={24}>\n                        <Grid item><Typography variant=\"h6\" color=\"textPrimary\"> Preview: </Typography></Grid>\n                        <Collapse in={this.state.question_image_string} timeout=\"auto\" unmountOnExit>\n                            <Grid item align=\"center\">\n                                <img src={this.state.question_image_string} height={300} alt=\"Preview Unavailable\"></img>\n                            </Grid>\n                        </Collapse>\n                        <Grid item>\n                            <Grid container direction=\"column\" justify=\"center\" spacing={24}>\n                                <Grid item xs={12}>\n                                    <Grid container direction=\"row\" justify=\"space-between\" className={this.styles.titleContainer}>\n                                        <Grid item>\n                                            <div className={this.styles.titleWrap}> {this.state.title} </div>\n                                        </Grid>\n                                        <Grid item>\n                                            <Grid container direction=\"row\" justify=\"flex-end\">\n                                                <Card className={this.styles.card}>\n                                                    <Typography align=\"center\" className={this.styles.percentText}>\n                                                        {this.state.slider_value.toString() + \" \"}%\n                                                    </Typography>\n                                                </Card>\n                                            </Grid>\n                                        </Grid>  \n                                    </Grid>\n                                </Grid>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" className={this.styles.slidercontainer} spacing={24}>\n                                    <Grid item xs><div className={this.styles.labels}>{this.state.labels.lower}</div></Grid>\n                                    <Grid item xs={8}>\n                                        <Slider\n                                            value={this.state.slider_value}\n                                            min={0}\n                                            max={100}\n                                            step={1}\n                                            aria-labelledby=\"label\"\n                                            onChange={this.handleSliderChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs><div className={this.styles.labels}>{this.state.labels.upper}</div></Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>  \n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddSliderQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Collapse from '@material-ui/core/Collapse';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport { Redirect } from \"react-router-dom\";\nimport { inject } from 'mobx-react';\nimport LectureObj from '../../../models/LectureObj';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 80,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    gridItem: {\n        margin: theme.spacing.unit\n    },\n    dateField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 30,\n    },\n    gridItemButton: {\n        margin: theme.spacing.unit*2\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: theme.spacing.unit * 60,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\nclass ProfessorAddLecture extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.courseId = this.props.match.params.courseId\n        \n        const date = new Date();\n       \n        this.state = {\n            toLecture: false,\n            title: \"Lecture \",\n            courseId: this.courseId,\n            // description: \"\",\n            scheduled: false,\n            numLects: this.props.location.state.numLects.toString(),\n            errors: {title: ''},\n            titleValid: true,\n            formValid: false,\n            selectedDate: date,\n            dateValid: true,\n            openDate: date,\n            closeDate: date\n        }\n    }\n\n    componentDidMount() {\n        const lectString = \"Lecture \" + this.state.numLects.toString();\n        this.setState({\n            title: lectString\n        })\n        this.handleValidation()\n    }\n\n\n    handleValidation() {\n        let titleValid = this.state.titleValid;\n        let dateValid = this.state.dateValid;\n        let errors = this.state.errors;\n\n        if (this.state.title === '') {\n            errors.title = \"This field is required.\"\n            titleValid = false\n        }\n        else {\n            titleValid = true\n        }\n\n        if (this.state.scheduled) {\n            dateValid = this.state.closeDate.getTime() >= this.state.openDate.getTime()\n        }\n\n        this.setState({ titleValid: titleValid, dateValid: dateValid }, this.validateForm);\n    }\n\n\n    validateForm() {\n        this.setState({formValid: this.state.titleValid && this.state.dateValid });\n    }\n\n    modifyDate = date => {\n        date.setUTCDate(date.getDate());\n        date.setUTCHours(12);\n        date.setUTCMinutes(0);\n        date.setUTCMinutes(0);\n\n        return date;\n    }\n\n    handleDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            selectedDate: date\n        })\n    }\n\n    handleOpenDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({ \n            openDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleCloseDateChange = date => {\n        date = this.modifyDate(date);\n\n        this.setState({\n            closeDate: date\n        }, () => { this.handleValidation() })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        }, () => { this.handleValidation() });\n    };\n\n    handleCheck = (event) => {\n        const {name, checked} = event.target\n        this.setState({\n            [name]: checked\n        }, () => {this.handleValidation() });\n    }\n\n    handleSubmit = () => {\n        this.props.apiService.addLecture(\n            new LectureObj(this.state.title, this.state.selectedDate, null, this.state.courseId, null, this.state.scheduled, this.state.openDate, this.state.closeDate)\n        )\n        this.setState({ toLecture: true });\n    }\n\n    render() {\n        if (this.state.toLecture === true) {\n            return <Redirect to={'/professor/' + this.state.courseId + '/lectures'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Grid container direction=\"column\">\n                    <Grid item className={this.styles.gridItem}>\n                        <Typography variant=\"h6\" color=\"textPrimary\">\n                            Add New Lecture:\n                        </Typography>\n                    </Grid>\n                    <form noValidate autoComplete=\"off\">\n                    <Grid item className={this.styles.gridItem}>\n                        <TextField\n                            requiredtitle=\"true\"\n                            error={!this.state.titleValid}\n                            name=\"title\"\n                            label=\"Lecture Title\"\n                            className={this.styles.textField}\n                            value={this.state.title}\n                            onChange={this.handleChange}\n                            margin=\"normal\"\n                            helperText={this.state.errors[\"title\"]}\n                            multiline={true}\n                        />\n                    </Grid>\n\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid item className={this.styles.gridItem}>\n                            <DatePicker\n                                margin=\"normal\"\n                                label=\"Lecture Date\"\n                                name=\"selectedDate\"\n                                value={this.state.selectedDate}\n                                onChange={this.handleDateChange}\n                                className={this.styles.dateField}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n\n                    <Grid item className={this.styles.gridItem}>\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item>\n                                <Checkbox\n                                    checked={this.state.scheduled}\n                                    onChange={this.handleCheck}\n                                    name=\"scheduled\"\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\">\n                                    Schedule the Lecture to Open and Close at Specific Dates\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Collapse in={this.state.scheduled} timeout=\"auto\" unmountOnExit>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid container direction=\"row\">\n                                <Grid item className={this.styles.gridItem}>\n                                    <DatePicker\n                                        margin=\"normal\"\n                                        label=\"Start Date\"\n                                        name=\"openDate\"\n                                        value={this.state.openDate}\n                                        onChange={this.handleOpenDateChange}\n                                        className={this.styles.dateField}\n                                    />\n                                </Grid>\n\n                                <Grid item className={this.styles.gridItem}>\n                                    <DatePicker\n                                        margin=\"normal\"\n                                        label=\"End Date\"\n                                        name=\"closeDate\"\n                                        value={this.state.closeDate}\n                                        onChange={this.handleCloseDateChange}\n                                        className={this.styles.dateField}\n                                    />\n                                </Grid>\n                            </Grid>\n                            \n                        </MuiPickersUtilsProvider>\n                    </Collapse>\n\n                    <Grid item className={this.styles.gridItemButton}>\n                        <Button\n                            disabled={!this.state.formValid}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            className={this.styles.container}\n                            onClick={this.handleSubmit}>\n                                Submit\n                        </Button>\n                   </Grid>\n                    </form>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddLecture);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass NoMatch extends React.Component {\n\n    render() {\n        return (\n            <Typography variant=\"h5\">\n                Woops! This page does not exist.\n            </Typography>\n        );\n    }\n\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport SideMenuBar from '../../components/SideMenuBar';\nimport TopMenuBar from '../../components/TopMenuBar';\nimport ProfessorStore from '../../stores/ProfessorStore';\nimport APIProfService from '../../services/APIProfService';\nimport ProfessorHome from './ProfessorHome';\nimport ProfessorNewCourse from './NewCourse';\nimport ProfessorViewLectures from './ViewLectures';\nimport ProfessorViewQuestions from './ViewQuestions';\nimport ProfessorAddMCQuestion from './AddMCQuestion';\nimport ProfessorAddFreeTextQuestion from './AddFreeTextQuestion';\nimport ProfessorAddSliderQuestion from './AddSliderQuestion';\nimport ProfessorAddLecture from './AddLecture';\nimport NoMatch from '../../components/NoMatch';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    content: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth,\n        },\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass ProfessorRoutes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = new ProfessorStore()\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        if (!this.profStore.dataLoaded) {\n            this.apiProfService.loadData().then(() => {\n                this.profStore.dataLoaded = true\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Provider profStore={this.profStore} apiService={this.apiProfService}>\n                <div>\n                    <CssBaseline />\n                    <Route path='/professor' component={TopMenuBar} />\n                    <nav>\n                        <Hidden xsDown implementation=\"css\">\n                            <Route path='/professor' component={SideMenuBar} />\n                        </Hidden>\n                    </nav>\n                    \n                    <main className={this.styles.content}>\n                        <Switch>\n                            <Route exact path='/professor' component={ProfessorHome} />\n                            <Route path='/professor/new' component={ProfessorNewCourse} />\n                            <Route path='/professor/:courseId/lectures' component={ProfessorViewLectures} />\n                            <Route path='/professor/:courseId/new' component={ProfessorAddLecture} />\n                            <Route exact path='/professor/:lectureId/questions' component={ProfessorViewQuestions} />\n                            <Route path='/professor/:lectureId/questions/new-mc' component={ProfessorAddMCQuestion} />\n                            <Route path='/professor/:lectureId/questions/new-free-text' component={ProfessorAddFreeTextQuestion} />\n                            <Route path='/professor/:lectureId/questions/new-slider' component={ProfessorAddSliderQuestion} />\n                            <Route component={NoMatch} />\n                        </Switch>\n                    </main>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorRoutes);\n","import { observable, action } from \"mobx\";\nimport CourseObj from '../models/CourseObj';\nimport { MultipleChoiceQuestionObj, FreeTextQuestionObj, SliderQuestionObj } from \"../models/QuestionObj\";\n\nexport default class StudentStore {\n  @observable\n  courses = []; // CourseObj[]\n\n  @observable\n  questions = []; // QuestionObj[]\n\n  @observable\n  prevQuestions = []; // QuestionObj[]\n\n  @observable\n  lastQuestion = null;\n\n  @observable\n  lastAnswer = null;  // the submitted answer to the most recently closed question\n\n  @observable\n  socketIOStatus = false;\n\n\n  @action\n  setSocketIOStatus(status) {\n    this.socketIOStatus = status;\n  }\n\n  /** Call this when the question is closed and the component about to unmount.\n   *  DO NOT call it when the student submits an answer!\n   */\n  @action\n  updateLastQuestion(question) {\n    this.lastQuestion = question;\n  }\n\n  @action\n  resetQuestions() {\n    this.questions = [];\n    this.prevQuestions = [];\n    this.lastAnswer = null;\n    this.lastQuestion = null;\n  }\n\n  @action\n  updateLastAnswer(answer) {\n    this.lastAnswer = answer;\n  }\n\n  @action\n  updateAllCourses(courses) {\n    this.courses = []\n\n    courses.forEach(element => {\n      element.num = element['coursenum']\n      element.joinCode = element['enroll_code']\n      this.courses.push(new CourseObj(element))\n    })\n  }\n\n  @action\n  dropCourse(course_id) {\n      this.courses.remove(this.courses.find(x=> x.id === course_id));\n  }\n\n  getQuestionWithId(question_id) {\n    return this.questions.find(x => x.id === question_id);\n  }\n\n  getPrevQuestionWithId(question_id) {\n    return this.prevQuestions.find(x => x.id === question_id);\n  }\n\n  @action\n  updateQuestion(question) {\n    const original_question = this.questions.find(x => x.id === question.id);\n    if (question.question_type === 'free_text') {\n      original_question.id = question.id;\n      original_question.lecture_id = question.lecture_id;\n      original_question.question_type = question.question_type;\n      original_question.question_title = question.question_title;\n      original_question.correct_answer = question.correct_answer;\n      original_question.creator_id = question.creator_id;\n      original_question.is_open = question.is_open;\n      original_question.opened_at = question.opened_at;\n      original_question.closed_at = question.closed_at;\n      original_question.created_at = question.created_at;\n      original_question.modified_at = question.modified_at;\n      original_question.answer =  question.answer;\n      original_question.word_limit = question.word_limit;\n    }\n  }\n\n  @action\n  updateAllQuestions(questions) {\n      this.questions = []\n\n      questions.forEach(element => {\n        if (element.question_type === 'multiple_choice') {\n          this.questions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n            element.question_type, element.question_title, element.question_image,\n            element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n            element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n            element.option2, element.option3, element.option4, element.option5, element.number_of_options))\n        }\n        else {\n          if (element.question_type === 'free_text') {\n            this.questions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n              element.question_type, element.question_title, element.question_image,\n              element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n              element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit))\n            }\n          else {\n            this.questions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n              element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.opened_at, \n              element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label))\n          }\n\n          }\n          \n\n      });\n  }\n\n  @action\n  updateAllPrevQuestions(questions) {\n    this.prevQuestions = [];\n\n    questions.forEach(element => {\n      console.log(element.question_title)\n      if (element.question_type === 'multiple_choice') {\n        this.prevQuestions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options))\n      }\n      else {\n        if (element.question_type === 'free_text') {\n          this.prevQuestions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n            element.question_type, element.question_title, element.question_image,\n            element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n            element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit))\n        }\n        else {\n          this.prevQuestions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n            element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.opened_at, \n            element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label))\n        }\n      }\n    });\n  }\n\n  @action\n  addOneQuestion(element) {\n    if (this.questions.find(x => x.id === element.id) === undefined) {\n      if (element.question_type === 'multiple_choice') {\n        this.questions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options));\n      } else if (element.question_type === 'free_text') {\n        this.questions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, element.question_image,\n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit));\n      } else {\n        this.questions.push(new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n          element.question_title, element.question_image, element.correct_answer, element.creator_id, element.is_open, element.opened_at, \n          element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label));\n      }\n\n    }\n    \n  }\n\n  @action\n  updateOneQuestion(element) {\n    var question_id = element.id;\n    var oldQuestion = this.questions.find(x => x.id === question_id);\n    var index = this.questions.indexOf(oldQuestion);\n    if (index <= -1) {\n      // not yet in store\n      this.addOneQuestion(element);\n    } else {\n      // update existing\n      var updatedQuestion;\n      if (element.question_type === 'multiple_choice') {\n        updatedQuestion = new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title,\n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.option1,\n          element.option2, element.option3, element.option4, element.option5, element.number_of_options);\n      } else if (element.question_type === 'free_text') {\n        updatedQuestion = new FreeTextQuestionObj(element.id, element.lecture_id,\n          element.question_type, element.question_title, \n          element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n          element.closed_at, element.created_at, element.modified_at, element.answer, element.word_limit);\n      } else {\n        updatedQuestion = new SliderQuestionObj(element.id, element.lecture_id, element.question_type, \n          element.question_title, element.correct_answer, element.creator_id, element.is_open, element.opened_at, \n          element.closed_at, element.created_at, element.modified_at, element.answer, element.lower_label, element.upper_label);\n      }\n      this.questions[index] = updatedQuestion;\n    }\n  }\n\n  @action\n  removeQuestionById(question_id) {\n   \n      this.questions.remove(this.questions.find(x => x.id === question_id));\n  }\n\n  // get number of open questions for course \n  getNumberOfQuestions() {\n    return this.questions.length;  \n  }\n\n}\n","import { getStudentCoursesAPI, getStudentNameAPI, postEnrollStudentAPI, getStudentQuestionsByCourseAPI, getStudentPrevQuestionsByCourseAPI, postAnswerQuestionAPI, getLogoutStudentAPI, deleteDropCourseAPI } from '../utils/api-facade';\n\nexport default class APIStudentService {\n    constructor(studentStore) {\n        this.studentStore = studentStore;\n    }\n\n    loadAllCourses() {\n        getStudentCoursesAPI()\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllCourses(res.data)\n\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n        \n    }\n\n    async getName() {\n        return getStudentNameAPI()\n            .then(res => {\n                return res.data.name\n            })\n            .catch(error => {\n                console.log(error)\n                this._checkAuth(error)\n                return []\n            })\n    }\n\n    loadAllQuestions(course_id) {\n        getStudentQuestionsByCourseAPI(course_id)\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllQuestions(res.data)\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n        \n    }\n\n    loadAllPrevQuestions(course_id) {\n        getStudentPrevQuestionsByCourseAPI(course_id)\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllPrevQuestions(res.data)\n\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n    }\n\n    // remove the course\n    dropCourse(course_id) {\n        deleteDropCourseAPI(course_id)\n        .then(\n            this.studentStore.dropCourse(course_id)\n        )\n        .catch(error => {\n            console.log(error.response);\n            this._checkAuth(error);\n        })\n    }\n\n    async postAnswer(answer, question_id) {\n        postAnswerQuestionAPI(answer, question_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n            })\n    }\n\n    async enrollCourse(code) {\n        return postEnrollStudentAPI(code)\n            .then(res => {\n                getStudentCoursesAPI()\n                    .then(res => {\n                        console.log(res.data)\n                        this.studentStore.updateAllCourses(res.data)\n        \n                    })\n                    .catch(error => {\n                        console.log(error.response);\n                        this._checkAuth(error);\n                    })\n                return null;\n            })\n            .catch(error => {\n                console.log(error.response);\n                this._checkAuth(error);\n                return error.response.data;\n            })\n        // getStudentCoursesAPI()\n        //     .then(res => {\n        //         this.studentStore.updateAllCourses(res.data)\n\n        //     })\n        //     .catch(error => {\n        //         console.log(error.response);\n        //         this._checkAuth(error);\n        //     })\n    }\n\n    async getLogoutStudent() {\n        getLogoutStudentAPI()\n        .catch(error => {\n            console.log(error.response);\n            this._checkAuth(error);\n        })\n    }\n\n    _checkAuth(error) {\n        if (error.response !== undefined) {\n            if (error.response.status === 401)\n                window.location.replace('/login-student')\n        }\n    }\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom'\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    yellowCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.main\n    },\n    navyCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.secondary.light\n    },\n    greenCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.light\n    },\n    orangeCard: {\n        margin: theme.spacing.unit,\n        width: '98%',\n        background: theme.palette.primary.dark\n    },\n    link: {\n        width: '98%',\n        textDecoration: 'none',\n    },\n    icon: {\n        margin: theme.spacing.unit\n    },\n    typography: {\n        width: '100%'\n    }\n\n});\n\n@inject(\"store\")\n@observer\nclass ClassCard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.styles = props.classes\n    }\n    \n    state = {\n        link:'student/questions',\n        colorStyle: undefined,\n        open:false,\n    }\n\n    componentDidMount () {\n        var colors = [this.styles.orangeCard, this.styles.greenCard, this.styles.yellowCard, this.styles.navyCard];\n        this.setState({\n            colorStyle: colors[this.props.colorIndex]\n        });\n    }\n    \n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n      \n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleDelete = () => {\n        this.apiStudentService.dropCourse(this.props.id);\n        this.handleClose()\n    };\n\n    \n    render() {\n        return (\n            \n                <Card className={this.state.colorStyle}>\n                    <CardContent>\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\" spacing={24}>\n                            <Grid item xs={10}>\n                                <Link className={this.styles.link} to={{\n                                pathname: '/student/questions',\n                                state : {\n                                    course_id: this.props.id,\n                                }\n                                }}>\n                                    <Typography className={this.styles.typography} variant=\"h4\">\n                                        {this.props.course.dept} {this.props.course.num} - {this.props.course.title}: {this.props.course.term} {this.props.course.year}\n                                    </Typography>\n                                </Link>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <Grid container direction=\"row\" justify=\"flex-end\">\n                                    <Tooltip title=\"Drop Course\" disableFocusListener placement=\"top-start\">\n                                        <Button variant=\"text\" size=\"small\" onClick={this.handleOpen}>\n                                            <Icon className={this.styles.icon} color=\"secondary\">delete</Icon>\n                                        </Button>\n                                    </Tooltip>\n                                </Grid>\n                                \n                            </Grid>\n                            <Dialog\n                                open={this.state.open}\n                                onClose={this.handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete \\\"\" + this.props.name + \"\\\"?\"}</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">\n                                    Doing so will remove this course and all of its data permanently.\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} autoFocus color=\"secondary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleDelete} color=\"secondary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClassCard);","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport { Redirect } from 'react-router-dom';\n\n@inject(\"store\")\n@observer\nclass LogoutButton extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    state = {\n        logout: false\n    }\n\n    handleLogout = () => {\n        this.apiStudentService.getLogoutStudent();\n        this.setState({\n            logout: true\n        })\n    }\n\n    render() {\n        if (this.state.logout) {\n            return <Redirect to={'/'} push />\n        }\n        return (\n          \n            <Button onClick={this.handleLogout}>logout</Button>\n            \n        );\n    }\n}\nexport default LogoutButton;","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../../../assets/clikrlogo.png'\nimport LogoutButton from '../Buttons/LogoutButton';\nimport { Link } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n    render () {\n        return(\n            <div>\n            <AppBar position=\"static\" color='primary'>\n                <Toolbar>\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems='center'>\n                        <Grid item>\n                            <Link to=\"/student\">\n                                <img src = {logo} alt = \"logo\" width=\"100\"></img>\n                            </Link>\n                        </Grid>\n\n                        <Grid item>\n                            <Grid container direction=\"row\" alignItems='right'>\n                                <Typography variant=\"h5\" color=\"secondary\"> {this.props.userName} </Typography>\n\n                                <LogoutButton />\n                            </Grid>\n                        </Grid>\n                        \n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { observer, inject } from 'mobx-react';\nimport Icon from '@material-ui/core/Icon';\nimport APIStudentService from '../../../services/APIStudentService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\n\nconst styles = theme => ({\n    button:{\n        color: theme.palette.secondary.main,\n        marginRight: theme.spacing.unit*2\n    },\n    icon: {\n        margin: theme.spacing.unit,\n        color: \"white\"\n    }\n});\n\n@inject('store')\n@observer\nclass AddCourseDialog extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    state = {\n        message: \"Enter Course Enrollment Code:\",\n        open: false,\n        code: \"\",\n        disabled: true,\n        errorMsg: null,\n    };\n\n    handleChange = (e) => {\n        if (e.target.value.length > 0) {\n            this.setState({\n                [e.target.name]: e.target.value.toUpperCase(),\n                disabled: false,\n            })\n        }\n        else {\n            this.setState({\n                disabled: true,\n                [e.target.name]: e.target.value.toUpperCase(),\n            })\n        }\n        \n    }  \n    handleOpen = () => {\n        this.setState({\n            message: \"Enter Course Enrollment Code:\",\n            open: true,\n            code: \"\",\n            disabled: true,\n        })\n    };\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    enroll() {\n        this.apiStudentService.enrollCourse(this.state.code).then((data) => {\n            if (data !== null) {\n                this.setState(() => {\n                    return {\n\n                        message: data.error,\n                        disabled: true,\n                        open: true,\n                    }\n                });\n            }\n            else {\n                this.setState(() => {\n                    return {\n                        open: false,\n                    }\n                });\n            }\n            \n        });\n    }\n    handleSubmit = () => {\n        \n        this.enroll();\n        if (this.state.message === \"Enter Course Enrollment Code:\") {\n            this.apiStudentService.loadAllCourses();\n            this.handleClose();\n        }\n\n    };\n\n    \n    render() {\n        return (\n            <div>\n                <Fab color=\"secondary\" aria-label=\"Add\" className={this.styles.button} onClick={this.handleOpen}>\n                    <Icon className={this.styles.icon}>add</Icon>\n                </Fab>\n                <Dialog\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">{this.state.message}</DialogTitle>\n                        <DialogContent>\n                            <TextField\n                                id=\"title\"\n                                helperText=\"Enter code\"\n                                name='code'\n                                value={this.state.code}\n                                onChange={e => this.handleChange(e)}\n                                fullWidth\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                cancel\n                            </Button>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disabled} color=\"secondary\">\n                                enroll\n                            </Button>\n                    </DialogActions>\n                </Dialog>   \n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(AddCourseDialog);","import { socketioURL } from '../constants/api';\nimport socketIOClient from 'socket.io-client';\n\nexport default class SocketIOStudentService {\n    \n    constructor(store) {\n        this.store = store;\n        this.socket = socketIOClient(socketioURL);\n        this.timeout = null;\n        \n        store.setSocketIOStatus(true);  // optimistic approach: assume we're connected, verify later\n        setTimeout(() => {\n            this.checkConnection();\n        }, 1000)\n    }\n\n    reset() {\n        this.store.resetQuestions();\n    }\n\n    // subscribe student for particular class\n    // must be called before all other calls\n    subscribe(course_id) {\n        this.socket.emit('subscribe student', course_id);\n    }\n\n    // check for opening of a question\n    detectOpenQuestion() {\n        this.socket.on('question opened', (data) => {\n            this.store.addOneQuestion(data.question);\n        });\n    }\n    \n\n    // check for closing of a question\n    detectCloseQuestion() {\n        this.socket.on('question closed', (msg) => {\n            this.store.updateLastQuestion(msg.question);\n            this.store.removeQuestionById(msg.question.id);\n        });\n    }\n    \n\n    // listen for server messages\n    listen() {\n        this.socket.on('server message', (msg) => {\n            console.log('Received message: ' + msg);\n        });\n    }\n\n    // get all open questions for a course \n    getAllQuestions() {\n        return this.socket.on('all open questions', (data) => {\n            this.store.updateAllQuestions(data.questions);\n            console.log(data);\n        });\n    }\n\n    // detect broken connection\n    startCheckingConnection() {\n        this.timeout = setInterval(() => {\n            this.checkConnection();\n        }, 1000);\n    }\n\n    // clear the timeout\n    stopCheckingConnection() {\n        clearTimeout(this.timeout);\n    }\n\n    // check if connected\n    checkConnection() {\n        if (this.socket.connected) {\n            this.store.setSocketIOStatus(true);\n        } else {\n            this.store.setSocketIOStatus(false);\n        }\n    }\n\n}","import React, { Component } from 'react';\nimport ClassCard from '../../../components/Student/StudentClassCards';\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { withStyles } from '@material-ui/core/styles'\nimport AddCourseDialog from '../../../components/Student/AddCourseDialog';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport SocketIOStudentService from '../../../services/SocketIOStudentService';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    paper: {\n        padding: theme.spacing.unit*2,\n    }\n});\n\n@inject(\"store\")\n@observer\nclass StudentHome extends Component {\n    state = {\n        course_ids: [],\n        userName: \"\",\n        showArchive: false\n    }\n\n    constructor(props) {\n        super(props)\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.styles = props.classes\n        this.socketIOStudentService = new SocketIOStudentService(this.store);\n\n        this.handleToggleArchive = this.handleToggleArchive.bind(this)\n    }\n\n    componentDidMount() {\n        this.apiStudentService.getName()\n            .then(name => {\n                this.setState({ userName: name });\n            })\n    }\n    \n    componentWillReceiveProps() {\n        this.apiStudentService.loadAllCourses()\n    }\n    \n    handleToggleArchive() {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                showArchive: !prevState.showArchive\n            }\n        })\n    }\n\n    render() {\n        var currentCourses = this.store.courses.filter(courseObj => {\n            return courseObj.is_current\n        })\n\n        var archivedCourses = this.store.courses.filter(courseObj => {\n            return !courseObj.is_current\n        })\n\n        var showString = this.state.showArchive ? \"\" : \"Show\"\n\n        return (\n            <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header userName={this.state.userName} />\n                <Grid item className={this.styles.gridItem}>\n                    <Paper className={this.styles.paper}>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\" className={this.styles.gridContainer}>\n                            <Grid item xs={12} sm={10}>\n                                <Typography variant=\"h2\" color=\"secondary\" className={this.styles.typeography}> My Classes </Typography>\n                            </Grid>\n                            <Grid item container justify=\"flex-end\" xs={12} sm={2}>\n                                <AddCourseDialog />      \n                            </Grid>\n                        </Grid>\n                        <Grid container justify=\"center\" alignItems=\"flex-end\">\n                            {currentCourses.map(function (courseObj, index) {\n                                const colorIndex = index%4;\n                                return (\n                                    <ClassCard key={index} course={courseObj} id={courseObj.id} colorIndex={colorIndex}/>\n                                );\n                            })}\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n                <Grid item className={this.styles.gridItem} >\n                    <Paper className={this.styles.paper}>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\" className={this.styles.gridContainer}>\n                            <Grid item xs={12} sm={10}>\n                                <Typography variant=\"h2\" color=\"secondary\" className={this.styles.typeography}> {showString} Archived Courses </Typography>\n                            </Grid>\n                            <Grid item container justify=\"flex-end\" xs={12} sm={2}>\n                                <IconButton color=\"secondary\" onClick={this.handleToggleArchive}>\n                                    {this.state.showArchive ? <ExpandLess /> : <ExpandMore />}\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                        <Collapse in={this.state.showArchive} timeout=\"auto\" unmountOnExit>\n                            <Grid container justify=\"center\" alignItems=\"flex-end\">\n                                {archivedCourses.map(function (courseObj, index) {\n                                    const colorIndex = index%4;\n                                    return (\n                                        <ClassCard key={index} course={courseObj} id={courseObj.id} colorIndex={colorIndex}/>\n                                    );\n                                })}\n                            </Grid>\n                        </Collapse>\n                    </Paper>\n                </Grid>\n            </Grid>\n        )\n    }\n}\nexport default withStyles(styles)(StudentHome);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Timer from '@material-ui/icons/Timer';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingRight: theme.spacing.unit*2,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n@inject(\"store\")\n@observer\nclass FRQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answer: \"\",\n        sent: \"\",\n        disabled: false,\n        dialogue: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.sent);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer(this.state.answer, this.question.id)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    }\n\n    handleClick = (e) => {\n        if (this.state.sent === \"\"){\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    }\n\n    handleChange = (e) => {\n\n        if (e.target.value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        }\n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({ dialogue: false });\n        };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Typography variant=\"subtitle2\" color=\"secondary\"> \n                            <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                        </Typography>\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                id=\"full-width\"\n                                helperText=\"Enter Response\"\n                                name = 'answer'\n                                value={this.state.answer}\n                                onChange={e => this.handleChange(e)}\n                                fullWidth\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Button onClick={this.handleClick} disabled={this.state.disabled} variant=\"contained\" color=\"secondary\">\n                            Submit\n                        </Button>\n                        <Dialog\n                            open={this.state.dialogue}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\"Answer changed- \"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                no\n                                </Button>\n                                <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                                yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(FRQ);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Timer from '@material-ui/icons/Timer';\nimport { withStyles } from '@material-ui/core/styles';\nconst prettyMs = require('pretty-ms')\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit * 1.5,\n    },\n    answerOption: {\n        marginLeft: theme.spacing.unit * 0.3,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n@inject(\"store\")\n@observer\nclass MCQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answerchoices: [],\n        answer: \"\",\n        sent: \"\",\n        dialogue: false,\n        disabled: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n\n        var answers = []\n\n        for (var i = 1; i <= this.question['number_of_options']; i++) {\n            var qstring = this.question[\"option\" + i.toString()];\n            answers.push(qstring)\n        }\n\n        this.setState({\n            answerchoices: answers\n        })\n\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.answerchoices.indexOf(this.state.sent) + 1);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            answer: e.target.value\n        });\n        if (e.target.value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        }\n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n    };\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer((this.state.answerchoices.indexOf(this.state.answer) + 1).toString(), this.props.questionId)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    };\n\n    handleClick = () => {\n        if (this.state.sent === \"\") {\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    };\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({\n            dialogue: false,\n            answer: this.state.sent,\n            disabled: true\n        });\n    };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Typography variant=\"subtitle2\" color=\"secondary\"> \n                            <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                        </Typography>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup\n                                name=\"answers\"\n                                value={this.state.answer}\n                                onChange={this.handleChange}\n                            >\n                                {this.state.answerchoices.map((a, index) => {\n                                    return (\n                                        <FormControlLabel value={a} key={a} control={<Radio />} label={a} className={this.styles.answerOption} />\n                                    )\n                                })\n                                }\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n\n\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Button onClick={this.handleClick} disabled={this.state.disabled} value={this.state.answer} variant=\"contained\" color=\"secondary\">\n                            Submit\n                        </Button>\n                        <Dialog\n                            open={this.state.dialogue}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\"Answer changed- \"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                    \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                    no\n                                </Button>\n                                <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                                    yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </Paper>\n            </div>\n\n\n        );\n    }\n}\nexport default withStyles(styles)(MCQ);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/lab/Slider';\nimport Timer from '@material-ui/icons/Timer';\nimport Card from '@material-ui/core/Card';\n\nconst prettyMs = require('pretty-ms')\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingTop: theme.spacing.unit*3,\n        paddingBottom: theme.spacing.unit*3,\n        paddingRight: theme.spacing.unit*1.5\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n        width: \"100%\"\n    },\n    percentContainer: {\n        paddingRight: theme.spacing.unit*3\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1em\", \n        display:\"flex\", \n        justifyContent:\"center\"\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n        color: theme.palette.secondary.main\n    },\n    card: {\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing.unit*0.25,\n        width: 45\n    },\n    whiteTypography: {\n        color: \"white\"\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    icon: {\n        fontSize: 12\n    }\n});\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n@inject(\"store\")\n@observer\nclass SLQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = this.props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = this.store.getQuestionWithId(this.props.questionId);\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n    }\n\n    state = {\n        answer: 50,\n        sent: \"\",\n        disabled: false,\n        dialogue: false,\n        time: 0,\n        isOn: false,\n    }\n\n    startTimer() {\n        this.setState({\n            isOn: true\n        })\n\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - new Date(this.question.opened_at)\n        }), 1);\n    }\n    \n    stopTimer() {\n        this.setState({ isOn: false })\n        clearInterval(this.timer)\n    }\n\n    resetTimer() {\n        this.setState({ isOn: false })\n    }\n\n    componentDidMount() {\n        if (!this.state.isOn) {\n            this.startTimer()\n        }\n        else if (this.state.time !== 0 && this.state.isOn) {\n            this.stopTimer()\n            this.resetTimer()\n        }\n    }\n\n    componentWillUnmount() {\n        // question closed -> store answer into store.lastAnswer\n        this.store.updateLastAnswer(this.state.sent);\n        this.stopTimer()\n        this.resetTimer()\n    }\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer(this.state.answer.toString(), this.question.id)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    }\n\n    handleClick = (e) => {\n        if (this.state.sent === \"\"){\n            this.handleSubmit()\n        }\n        else if (this.state.sent !== this.state.answer) {\n            this.setState({\n                dialogue: true\n            });\n        }\n    }\n\n    handleSliderChange = (event, value) => {\n        if (value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        } \n        else {\n            this.setState({\n                disabled: false\n            })\n        }\n        \n        this.setState({ answer: value });\n      };\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({ dialogue: false });\n    };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n    };\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" justify=\"space-between\" className={this.styles.gridContainer}>\n                        <Grid item>\n                            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={24}>\n                                <Grid item xs>\n                                    <div className={this.styles.titleWrap}> {this.question.question_title} </div>\n                                    <Typography variant=\"subtitle2\" color=\"secondary\"> \n                                        <Timer className={this.styles.icon} /> Open for {this.state.time < 1000 ?\n                                            '0s' : prettyMs(this.state.time, { secDecimalDigits: 0 })}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Grid container justify=\"flex-end\" direction=\"row\" className={this.styles.percentContainer}>\n                                        <Card className={this.styles.card}>\n                                            <Typography align=\"center\" className={this.styles.whiteTypography}>\n                                                {this.state.answer.toString() + \" \"}%\n                                            </Typography>\n                                        </Card>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={24} className={this.styles.gridItem}>\n                            <Grid item xs>\n                                <Grid container justify=\"center\">\n                                    <div className={this.styles.labels}>{this.question.lower_label}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Slider\n                                    value={this.state.answer}\n                                    min={0}\n                                    max={100}\n                                    step={1}\n                                    aria-labelledby=\"label\"\n                                    onChange={this.handleSliderChange}\n                                />\n                            </Grid>\n                            <Grid item xs>\n                                <Grid container justify=\"center\">\n                                    <div className={this.styles.labels}>{this.question.upper_label}</div>\n                                </Grid>\n                            </Grid>\n                        </Grid> \n                    </Grid>\n                    <Grid container direction='row' justify=\"flex-end\" className={this.styles.buttonContainer}>\n                        <Grid item >\n                            <Button onClick={this.handleClick} disabled={this.state.disabled} variant=\"contained\" color=\"secondary\">\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                <Dialog\n                    open={this.state.dialogue}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Answer changed- \"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                        \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                        no\n                        </Button>\n                        <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                        yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>            \n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(SLQ);\n","\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    neutralAnswer: {\n        marginLeft: theme.spacing.unit*0.3,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n\n});\n\n@inject(\"store\")\n@observer\nclass PrevMCQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = null;\n        this.answerchoices = [];\n        this.correct = null;\n    }\n\n    render() {\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            this.answer = this.store.lastAnswer;\n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            this.answer = this.question.answer;\n        }\n\n        // answer choices\n        var answers = []\n\n        for (var i = 1; i <= this.question['number_of_options']; i++) {\n            var qstring = this.question[\"option\" + i.toString()];\n            answers.push(qstring)\n        }\n\n        this.answerchoices = answers;\n\n        // compute correct answer\n        var a =  this.question.correct_answer\n        if (a !== undefined) {\n            if (a !== null && a !== \"\") {\n                this.correct = Number(a) - 1;\n            } else {\n                this.correct = null;\n            }\n        }\n\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup\n                                name=\"answers\"\n                            >\n                                {this.answerchoices.map((a, index) => {\n                                    var background_style;\n                                    if (this.correct === undefined || this.correct === null) {\n                                        background_style = this.styles.neutralAnswer;\n                                    }\n                                    else if (index === this.correct) {\n                                        background_style = this.styles.correctAnswer;\n                                    }\n                                    else if (parseInt(this.answer, 10)-1 === index) {\n                                        background_style = this.styles.wrongAnswer;\n                                    }\n\n                                    return (\n                                        <FormControlLabel value={a} key={a} control={<Radio disabled checked={index === parseInt(this.answer)-1} />} label={a} className={background_style}/>\n                                    );\n                                })}\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                </Paper>\n            </div>\n\n\n        );\n    }\n}\nexport default withStyles(styles)(PrevMCQ);\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    gridItem: {\n        paddingRight: theme.spacing.unit*2,\n    },\n    buttonContainer: {\n        padding: theme.spacing.unit*1.5,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    neutralAnswer: {\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n});\n\n@inject(\"store\")\n@observer\nclass PrevFRQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = \"\";\n        this.correct = null;\n        this.helperText = \"\";\n    }\n\n    \n\n    render() {\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            if (this.store.lastAnswer !== null) {\n                this.answer = this.store.lastAnswer;\n            } \n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            if (this.question.answer !== null) {\n                this.answer = this.question.answer;\n            }   \n        }\n\n        // correct answer\n        var a =  this.question.correct_answer\n        if (a !== undefined) {\n            this.correct = a;\n\n            if (a === \"\" || a === null) {\n                this.helperText = \"Your Answer: \"\n            } else if (this.answer === a) {\n                this.helperText = \"Correct\"\n            } else {\n                this.helperText = \"Correct Answer: \" + a\n            }\n        }\n\n        var backgroundStyle;\n        if (this.correct && this.correct !== \"\") {\n            if (this.answer === this.correct) {\n                backgroundStyle = this.styles.correctAnswer;\n            } else {\n                backgroundStyle = this.styles.wrongAnswer;\n            }\n        } else {\n            backgroundStyle = this.styles.neutralAnswer;\n        }\n    \n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" className={this.styles.gridContainer}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.question.question_title} </Typography>\n                        <Grid item className={this.styles.gridItem}>\n                            <TextField\n                                id=\"full-width\"\n                                helperText={this.helperText}\n                                name = 'answer'\n                                value={this.answer}\n                                fullWidth\n                                disabled\n                                className={backgroundStyle}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(PrevFRQ);\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    gridContainer: {\n        margin: theme.spacing.unit,\n    },\n    labels: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1em\", \n        display:\"flex\", \n        justifyContent:\"center\",\n        color: \"#424242\"\n    },\n    titleContainer: {\n        paddingBottom: theme.spacing.unit*0.25\n    },\n    percentContainer: {\n        paddingRight: theme.spacing.unit*3\n    },\n    titleWrap: {\n        wordBreak:\"break-word\", \n        fontFamily:\"sans-serif\", \n        fontSize:\"1.5em\", \n        display:\"flex\", \n        color: theme.palette.secondary.main\n    },\n    card: {\n        backgroundColor: \"gray\",\n        padding: theme.spacing.unit*0.25,\n        width: 45\n    },\n    gridItem: {\n        width: \"98%\"\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    },\n    correctAnswer: {\n        backgroundColor: theme.palette.primary.light,\n        paddingTop: theme.spacing.unit*2\n        \n    },\n    wrongAnswer: {\n        backgroundColor: theme.palette.primary.dark,\n        paddingTop: theme.spacing.unit*2\n    },\n    neutralAnswer: {\n        paddingTop: theme.spacing.unit*2\n    },\n    textField: {\n\t\tfontSize: 50\n\t}\n});\n\n@inject(\"store\")\n@observer\nclass PrevSLQ extends Component {\n\n    constructor(props) {\n        super(props);\n        this.store = props.store;\n        this.styles = props.classes;\n        this.apiStudentService = new APIStudentService(this.store);\n        this.question = null;\n        this.answer = -1;\n        this.helperText = \"\";\n        \n    }\n\n    // helper method to see if answer is correct\n    operatorToComparison(response, operator, answer) {\n        let correct = false;\n        switch(operator) {\n            case \"<\":\n                correct = response < answer;\n                break;\n            case \"<=\":\n                correct = response <= answer;\n                break;\n            case \">\":\n                correct = response > answer;\n                break;\n            case \">=\":\n                correct = response >= answer;\n                break;\n            default:\n                correct = response === answer;\n        } \n        return correct;\n    }\n    \n    // check if answer is correct\n    checkAnswer(correct_answer, answer) {\n        if (correct_answer === null || correct_answer === \"\") return true;\n        const expression = correct_answer.split(\" \");\n        if (expression.length === 2) {\n            return this.operatorToComparison(Number(answer), expression[0], Number(expression[1]))\n        }\n        else {\n            const exp1 = this.operatorToComparison(Number(answer), expression[0], Number(expression[1]))\n            const exp2 = this.operatorToComparison(Number(answer), expression[3], Number(expression[4]))\n            if (expression[2] === \"&&\") return exp1 && exp2;\n            return exp1 || exp2;\n        }\n    }\n\n    // helper method for function that turns answer into a more readable form \n    operatorToWord(operator) {\n        let string = \"equals\";\n        switch(operator) {\n            case \"<\":\n                string = \"<\";\n                break;\n            case \"<=\":\n                string = \"\\u2264\";\n                break;\n            case \">\":\n                string = \">\";\n                break;\n            case \">=\":\n                string = \"\\u2265\";\n                break;\n            case \"||\":\n                string = \"or\";\n                break;\n            case \"&&\":\n                string = \"and\";\n                break;\n            default:\n                string = \"=\";\n        } \n        return string;\n    }\n\n    // turn the answer into a more readable form\n    getAnswerText(answer) {\n        if (answer === null) {\n            return \"\";\n        }\n        const expression = answer.split(\" \");\n        if (expression.length === 2) {\n            return \"answer \" + this.operatorToWord(expression[0]) + \" \" +  expression[1] + \"%\";\n        }\n        else {\n            return \"answer \" + this.operatorToWord(expression[0]) + \" \" +  expression[1] + \"% \" + this.operatorToWord(expression[2]) + \" \" + this.operatorToWord(expression[3]) + \" \" + expression[4] + \"%\";\n        }\n    }\n\n    render() {\n\n        // fetch question data\n        if (this.props.isLast) {\n            this.question = this.store.lastQuestion;\n            if (this.store.lastAnswer !== null) {\n                this.answer = Number(this.store.lastAnswer);\n            } \n        } else {\n            this.question = this.store.getPrevQuestionWithId(this.props.questionId);\n            if (this.question.answer !== null) {\n                this.answer = Number(this.question.answer);\n            }   \n        }\n        \n        // background style\n        var correct = this.checkAnswer(this.question.correct_answer, this.answer);\n        var backgroundStyle;\n        if (correct) {\n            if (this.question.correct_answer !== \"\" && this.question.correct_answer !== null) {\n                backgroundStyle = this.styles.correctAnswer;\n            } else {\n                backgroundStyle = this.styles.neutralAnswer;\n            }\n        } else {\n            backgroundStyle = this.styles.wrongAnswer;\n        }\n\n        // helper text\n        if (this.question.correct_answer === \"\" || this.question.correct_answer === null) {\n            this.helperText = \"Your Answer: \" + this.answer.toString() + \"%\"\n        } else {\n            this.helperText = \"Correct Answer: \" + this.getAnswerText(this.question.correct_answer) \n        }\n\n        return (\n            <div>\n                <Paper className={this.styles.paper}>\n                    <Grid container direction=\"column\" justify=\"center\" className={this.styles.gridContainer}>\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={16} className={this.styles.titleContainer}>\n                            <Grid item xs>\n                                <div className={this.styles.titleWrap}> {this.question.question_title} </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Grid container justify=\"flex-end\" direction=\"row\" className={this.styles.percentContainer}>\n                                    <Card className={this.styles.card}>\n                                        <Typography align=\"center\" className={this.styles.whiteTypography}>\n                                            {this.answer.toString() + \" \"}%\n                                        </Typography>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid container direction=\"column\" className={this.styles.gridItem}>\n                            <Grid container direction=\"column\" justify=\"space-evenly\" className={backgroundStyle}>\n                                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={24}>\n                                    <Grid item xs>\n                                        <Grid container justify=\"center\">\n                                            <div className={this.styles.labels}>{this.question.lower_label}</div>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Slider\n                                            disabled\n                                            value={this.answer}\n                                            min={0}\n                                            max={100}\n                                            step={1}\n                                            aria-labelledby=\"label\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Grid container justify=\"center\">\n                                            <div className={this.styles.labels}>{this.question.upper_label}</div>\n                                        </Grid>\n                                    </Grid>\n                                </Grid> \n                                <Grid container direction=\"row\" >\n                                    <TextField\n                                        id=\"correctAnswer\"\n                                        helperText={this.helperText}\n                                        fullWidth\n                                        disabled\n                                    />\n                                </Grid>\n                            </Grid> \n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(PrevSLQ);\n","import React, { Component } from 'react';\n//import './style.css'; // Not our preferred way of importing style\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { observer, inject } from 'mobx-react';\nimport FRQ from '../../../components/Student/Questions/FRQ';\nimport MCQ from '../../../components/Student/Questions/MCQ';\nimport SLQ from '../../../components/Student/Questions/SLQ';\nimport PrevMCQ from '../../../components/Student/Questions/PrevMCQ';\nimport PrevFRQ from '../../../components/Student/Questions/PrevFRQ';\nimport PrevSLQ from '../../../components/Student/Questions/PrevSLQ';\nimport { withStyles } from '@material-ui/core/styles';\nimport SocketIOStudentService from '../../../services/SocketIOStudentService';\n\nconst styles = theme => ({\n    gridContainer: {\n        padding: theme.spacing.unit,\n    },\n    gridItem: {\n        padding: theme.spacing.unit,\n    },\n    paper: {\n        padding: theme.spacing.unit,\n    }\n\n});\n\n@inject(\"store\")\n@observer\nclass QuestionPage extends Component {\n\n    state = {\n        show_previous_questions: false,\n        show_last_question: true,\n        dots: '',\n    }\n    \n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        this.socketIOStudentService = new SocketIOStudentService(this.store)\n        this.timeout = null;  \n    }\n\n    componentDidMount() {\n        this.socketIOStudentService.reset();\n\n        const { course_id } = this.props.location.state\n        \n        this.socketIOStudentService.subscribe(course_id);\n\n        this.socketIOStudentService.detectOpenQuestion();\n        \n        this.socketIOStudentService.detectCloseQuestion();\n\n        this.socketIOStudentService.getAllQuestions();\n\n        this.socketIOStudentService.listen();\n\n        this.socketIOStudentService.startCheckingConnection();\n\n        // timeout for the status dots\n        this.timeout = setInterval(() => {\n            var dots = this.state.dots;\n            if (dots === '...') {\n                dots = '';\n            } else {\n                dots += '.';\n            }\n            this.setState({\n                dots: dots,\n            })\n        }, 1000);\n\n    }\n\n    componentWillUnmount() {\n        // cancel the timeout\n        clearTimeout(this.timeout);\n\n        // stop checking connection\n        this.socketIOStudentService.stopCheckingConnection();\n    }\n\n    handleClick = () => {\n        const { course_id } = this.props.location.state;\n\n        if (!this.state.show_previous_questions) {\n            this.apiStudentService.loadAllPrevQuestions(course_id);\n            this.setState({\n                show_previous_questions: true,\n                show_last_question: false,\n            });\n        } else {\n            this.setState({\n                show_previous_questions: false,\n                show_last_question: true,\n            }); \n        }\n    };\n\n    render() {\n        return (\n            <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header />\n                <Grid className={this.styles.gridContainer}>\n                    <Paper className={this.styles.paper} style={{backgroundColor: \"secondary\"}}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.store.socketIOStatus ? ((this.store.getNumberOfQuestions() !== 0 ? \"Open Questions\" : \"No Open Questions\") + this.state.dots) : \"Connection lost!\"} </Typography>\n                        {this.store.getNumberOfQuestions() !== 0 ? (\n                            <Grid>\n                                {this.store.questions.map(q => {\n                                    if (q.question_type === 'free_text') {\n                                        return (\n                                            <Grid item className={this.styles.gridItem} key={q.id}>\n                                                <FRQ questionId={q.id} />\n                                            </Grid>\n            \n                                        )\n                                    }\n                                    else {\n                                        // TODO: handle slider and drag-and-drop questions!\n                                        if (q.question_type === \"slider\") {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <SLQ questionId={q.id} />\n                                                </Grid>\n                                            )\n                                        }\n                                        else {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <MCQ questionId={q.id} />\n                                                </Grid>\n                                            )\n\n                                        }\n                                       \n                                    }\n            \n                                })}\n            \n                            </Grid>\n                        ) : null} \n\n                    </Paper>\n                </Grid>\n                <Grid className={this.styles.gridContainer}>\n                    <Paper className={this.styles.paper}>\n                        <Typography variant=\"h5\" color=\"secondary\"> {this.state.show_last_question && this.store.lastQuestion !== null ? \"Recently Closed\" : \"Previous Questions\"} </Typography>\n                        {this.state.show_last_question ? (\n                            <Grid className={this.styles.gridContainer}>\n                                {this.store.lastQuestion !== null ? (\n                                    this.store.lastQuestion.question_type === \"multiple_choice\" ? (\n                                        <PrevMCQ isLast={true} />\n                                    ) : this.store.lastQuestion.question_type === \"free_text\" ? (\n                                        <PrevFRQ isLast={true} />\n                                    ) : (<PrevSLQ isLast={true} />)\n                                ) : null } \n                            </Grid>\n                        ) : null}\n                        <Grid className={this.styles.gridContainer}>\n                            <Button onClick={this.handleClick} variant=\"outlined\" color=\"secondary\">\n                                {this.state.show_previous_questions ? \"Hide Previous Questions\" : \"Show All Previous Questions\"}\n                            </Button>\n                        </Grid>\n                        <Grid >\n                            {this.state.show_previous_questions ? (\n                                this.store.prevQuestions.length > 0 ? (\n                                    this.store.prevQuestions.map(q => {\n                                        if (q.question_type === 'free_text') {\n                                            return (\n                                                <Grid item className={this.styles.gridItem} key={q.id}>\n                                                    <PrevFRQ questionId={q.id} />\n                                                </Grid>\n            \n                                            )\n                                        }\n                                        else {\n                                            if (q.question_type === \"multiple_choice\") {\n                                                return (\n                                                    <Grid item className={this.styles.gridItem} key={q.id}>\n                                                        <PrevMCQ questionId={q.id}/>\n                                                    </Grid>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <Grid item className={this.styles.gridItem} key={q.id}>\n                                                        <PrevSLQ questionId={q.id}/>\n                                                    </Grid>\n                                                )\n                                            }\n                                            \n                                        }\n            \n                                    })) : \n                                    <Typography color=\"secondary\"> There are no previous questions </Typography>\n                                ) : null}\n                        </Grid>\n                    </Paper>\n                </Grid>\n                \n\n            </Grid>\n        );\n\n    }\n}\nexport default withStyles(styles)(QuestionPage);","import React, { Component } from 'react';\n//import './style.css'; // Not our preferred way of importing style\nimport Header from '../../../components/Student/LoggedinHeader';  \nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { observer, inject } from 'mobx-react';\nimport { Link } from 'react-router-dom'\n\n@inject(\"store\")\n@observer\nclass CheckQuestions extends Component {\n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)        \n    }\n\n    componentDidMount() {\n        const { course_id } = this.props.location.state\n        this.apiStudentService.loadAllQuestions(course_id)\n        this.setState({\n            course_id: this.props.location.state\n        })\n    }\n    state = {\n        course_id: \"\"\n    }\n\n    render() {\n        if (this.store.questions['length'] !== 0) {\n            return (\n             <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header/>\n                \n                <Grid container direction='column' justify='center'>\n                    <Paper style={{padding:\"2%\"}}>\n                    <Button size=\"large\" variant=\"contained\" color=\"secondary\" width=\"100%\">\n                        <Link to={{\n                            pathname: '/student/questions',\n                            state : {\n                                course_id: this.state.course_id\n                            }\n                        }} style={{ \"color\": \"white\", \"text-decoration\": \"none\" }}> Open Questions </Link>\n\n                    </Button>\n                    </Paper>\n                </Grid>\n            </Grid>\n            )\n        } \n        else {\n            return (\n             <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header/>\n                {}\n\n                <Grid item>\n                    <Paper style={{paddingTop:\"1%\", paddingBottom:\"1%\"}}>\n                        <Typography variant=\"h5\" color=\"secondary\" style={{width:\"98%\", paddingLeft:\"1%\", paddingRight:\"1%\"}}> There are no questions for this course at the moment... </Typography> \n                    </Paper>\n                </Grid>\n            </Grid>\n            )\n\n        }\n    }\n}\nexport default CheckQuestions;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport StudentStore from '../../stores/StudentStore';\nimport APIStudentService from '../../services/APIStudentService';\nimport StudentHome from './StudentHome';\nimport QuestionPage from './StudentQuestionPage';\nimport CheckQuestions from './CheckQuestions';\nimport NoMatch from '../../components/NoMatch';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    content: {\n        marginLeft: drawerWidth,\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nclass StudentRoutes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = new StudentStore()\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    componentDidMount() {\n        this.apiStudentService.loadAllCourses()\n    }\n\n    render() {\n        return (\n            <div>\n                <Provider store={this.store}>\n                    <Switch>\n                        <Route exact path='/student' component={StudentHome} />\n                        <Route path='/student/checkquestions' component={CheckQuestions} />\n                        <Route path='/student/questions' component={QuestionPage}/>\n                        <Route component={NoMatch} />\n                    </Switch>\n                </Provider>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StudentRoutes);","import React, { Component } from 'react';\nimport './style.css'; // Not our preferred way of importing style\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport logoprof from '../../assets/clikrlogo2.png';\nimport logostudent from '../../assets/clikrlogo.png';\nimport background from '../../assets/background.jpeg';\n\n\nconst styles = theme => ({\n  studentTypography: {\n    color: theme.palette.secondary.main,\n  },\n  profTypography: {\n    color: theme.palette.primary.main,\n  },\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    width: '100vw',\n    backgroundImage: 'url(' + background + ')',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center center',\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  studentcard: {\n    backgroundColor: theme.palette.primary.main,\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: 400,\n    },\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: 300,\n    },\n  },\n  profcard: {\n    backgroundColor: theme.palette.secondary.main,\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: 400,\n    },\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: 300,\n    },\n    marginBottom: 16,\n  }\n});\n\n\nclass Home extends Component {\n\n  state = {\n    toStudent: false,\n    toProf: false\n  }\n\n  constructor(props) {\n    super(props)\n    this.styles = props.classes\n  }\n\n  handleLoginProf = () => {\n    this.setState({\n      toProf: true\n    })\n  }\n\n  handleLoginStudent = () => {\n    this.setState({\n      toStudent: true\n    })\n  }\n\n  render() {\n    if (this.state.toProf) {\n      return <Redirect to={'/login-prof'} push />\n    }\n    if (this.state.toStudent) {\n      return <Redirect to={'/login-student'} push />\n    }\n    return (\n      <div className={this.styles.root}>\n        <Grid container spacing={24} justify=\"center\">\n          <Grid item className={this.styles.clickGrid}>\n            <Card className={this.styles.studentcard}>\n              <CardActionArea onClick={this.handleLoginStudent}>\n                <CardContent>\n                  <Grid item container direction=\"column\" spacing={16} >\n                    <Grid item align=\"center\">\n                      <img src={logostudent} alt=\"logo\" width={100}></img>\n                    </Grid>\n                    <Grid item align=\"center\">\n                      <Typography variant=\"h2\" gutterBottom className={this.styles.studentTypography}>\n                        STUDENT LOGIN\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n\n          <Grid item className={this.styles.clickGrid}>\n            <Card className={this.styles.profcard}>\n              <CardActionArea onClick={this.handleLoginProf}>\n                <CardContent>\n                  <Grid item container direction=\"column\" spacing={16} >\n                    <Grid item align=\"center\">\n                      <img src={logoprof} alt=\"logo\" width={100}></img>\n                    </Grid>\n                    <Grid item align=\"center\">\n                      <Typography variant=\"h2\" gutterBottom className={this.styles.profTypography}>\n                        TEACHER LOGIN\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <AppBar position=\"fixed\" color=\"primary\" className={this.styles.appBar}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n          >\n            <Typography color=\"inherit\">\n              {\"Created by mecakir, zsyang, afeng, lheimes, and czye.\"}\n            </Typography>\n          </Grid>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Home);\n","import React, { Component } from \"react\";\nimport { baseURL } from \"../../constants/api\";\n\nclass Login extends Component {\n  componentDidMount() {\n    var url_add_on_1 = \"student/login?service=\";\n    var url_add_on_2 = \"/student\";\n    var end_sub = 14;\n    if (\n      window.location.href.split(\"login-\")[1].valueOf() === \"prof\".valueOf()\n    ) {\n      url_add_on_1 = \"professor/login?service=\";\n      url_add_on_2 = \"/professor\";\n      end_sub = 11;\n    }\n\n    window.location.replace(\n      baseURL +\n        url_add_on_1 +\n        window.location.href.substring(\n          0,\n          window.location.href.length - end_sub\n        ) +\n        url_add_on_2\n    );\n  }\n\n  render() {\n    return <div>Logging In</div>;\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProfessorRoutes from './Professor'\nimport StudentRoutes from './Student'\nimport NoMatch from '../components/NoMatch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from './Home';\nimport Login from './Login'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#E9C46A',\n            dark: '#F4A261',\n            light: '#2A9D8F',\n        },\n        secondary: {\n            main: '#264653'\n        },\n        accent: {\n            main: '#E76F51',\n        },\n        type: 'light'\n    },\n        typography: {\n        useNextVariants: true,\n    },\n});\n\nclass App extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router>\n                    <div>\n                        <Switch>\n                            <Route exact path='/' component={Home} />\n                            <Route exact path='/login-(prof|student)' component={Login} />\n                            <Route path=\"/professor\" component={ProfessorRoutes} />\n                            <Route path=\"/student\" component={StudentRoutes} />\n                            <Route component={NoMatch} />\n                        </Switch>\n                    </div>\n                </Router>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './config/serviceWorker';\nimport App from './routes/app';\nimport { configure } from 'mobx';\n\n// enable MobX strict mode\nconfigure({ enforceActions: \"observed\" });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}