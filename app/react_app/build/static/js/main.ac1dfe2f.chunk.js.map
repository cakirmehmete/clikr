{"version":3,"sources":["config/serviceWorker.js","components/SideMenuBar/index.jsx","components/TopMenuBar/index.jsx","constants/api.js","utils/api-facade.js","services/APIProfService.js","components/AddStudentsModal/index.jsx","components/ListOfAllCourses/index.jsx","components/AllCoursesFrame/index.jsx","components/TopCoursesStatFrame/index.jsx","routes/Professor/Home/index.jsx","models/CourseObj.js","routes/Professor/NewCourse/index.jsx","models/LectureObj.js","components/AllLecturesFrame/index.jsx","components/TopLecturesFrame/index.jsx","routes/Professor/ViewLectures/index.jsx","components/AddQuestionModal/index.jsx","components/AllQuestionsFrame/index.jsx","routes/Professor/ViewQuestions/index.jsx","models/QuestionObj.js","routes/Professor/AddMCQuestion/index.jsx","routes/Professor/AddFreeTextQuestion/index.jsx","routes/Professor/AddLecture/index.jsx","routes/Professor/index.jsx","services/APIStudentService.js","components/Student/StudentClassCards/index.js","components/Student/Buttons/LogoutButton/index.js","components/Student/LoggedinHeader/index.js","components/Student/Buttons/AddCourseButton/index.js","routes/Student/StudentHome/index.js","components/Student/CourseEnrollmentForm/index.js","routes/Student/StudentEnrollment/index.js","components/Student/Questions/FRQ/index.js","components/Student/Questions/MCQ/index.js","routes/Student/StudentQuestionPage/index.js","routes/Student/CheckQuestions/index.js","routes/Student/index.jsx","stores/ProfessorStore.js","stores/StudentStore.js","routes/Home/index.jsx","routes/Login/index.jsx","routes/app.jsx","index.js","assets/clikrlogo.png"],"names":["Boolean","window","location","hostname","match","SideMenuBar","inject","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","styles","classes","profStore","react_default","a","createElement","Drawer_default","className","drawer","variant","paper","drawerPaper","anchor","Grid_default","container","direction","alignItems","justify","src","logo","alt","width","Divider_default","List_default","courses","map","courseObj","index","ListItem_default","button","key","ListItemText_default","primary","title","React","Component","withStyles","theme","flexShrink","toolbar","mixins","TopMenuBar","state","anchorEl","goHome","handleMenu","event","setState","currentTarget","handleClose","handleHome","handleReset","open","reload","AppBar_default","position","color","appBar","Toolbar_default","Link","to","marginLeft","IconButton_default","homeButton","onClick","SvgIcon_default","fill","d","style","float","marginRight","aria-haspopup","height","viewBox","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","text-decoration","concat","socketioURL","baseURL","postEnrollStudentAPI","code","axios","post","enroll_code","postAnswerQuestionAPI","answer","question_id","defaults","withCredentials","APIProfService","professorStore","get","then","res","updateData","data","catch","error","console","log","_checkAuth","_this2","action","postOpenQuestionAPI","_this3","postCloseQuestionAPI","lecture","_this4","course_id","description","date","postNewLectureAPI","addLecture","course","_this5","postNewCourseAPI","addCourse","question","_this6","lecture_id","question_type","question_title","question_text","correct_answer","creator_id","option1","option2","option3","option4","option5","number_of_options","word_limit","postNewQuestionAPI","addQuestion","undefined","response","status","replace","AddStudentsModal","handleOpen","handleSubmit","joinCode","Button_default","size","Modal_default","aria-labelledby","aria-describedby","top","left","transform","Typography_default","AddStudentsModalWrapped","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","display","flexWrap","textField","dense","marginTop","menu","ListOfAllCoures","referrerCourseId","handleCourseClick","Redirect","push","component","divider","ListItemSecondaryAction_default","components_AddStudentsModal","card","minWidth","AllCoursesFrame","toNewCourse","handleNewCourseClick","apiProfService","Card_default","CardContent_default","ListOfAllCourses","TopCoursesFrame","ProfessorHome","item","xs","components_AllCoursesFrame","TopCoursesStatFrame","CourseObj","num","dept","term","year","ProfessorNewCourse","toHome","name","handleChange","defineProperty","target","value","noValidate","autoComplete","TextField_default","label","onChange","margin","LectureObj","AllLecturesFrame","toNewLecture","referrerLectureIndex","parentCourse","handleNewLectureClick","handleLectureClick","apiService","loadData","getCourseWithId","courseId","lectures","lectureObj","TopLecturesFrame","ProfessorViewLectures","params","components_AllLecturesFrame","components_TopLecturesFrame","AddQuestionModal","toNewMCQuestion","toNewFreeTextQuestion","lectureId","handleMC","handleFreeText","aria-label","vert","index_es","fontSize","AddQuestionModalWrapped","flexDirection","justifyContent","AllQuestionsFrame","toNewQuestion","referrerQuestionId","handleNewQuestionClick","handleQuestionClick","parentLecture","questions","questionObj","components_AddQuestionModal","socket","socketIOClient","ProfessorViewQuestions","handleBtnClick","btnStatus","openQuestion","currentQuestionId","emit","closeQuestion","currentQuestionIndex","length","convertQuestionIndexToId","getLectureWithId","on","msg","JSON","stringify","Paper_default","root","elevation","text","textQ","align","getQuestionWithId","startLectureBtn","disabled","grid","components_AllQuestionsFrame","objectSpread","gutters","paddingTop","paddingBottom","paddingRight","paddingLeft","QuestionObj","is_open","opened_at","closed_at","created_at","modified_at","MultipleChoiceQuestionObj","_QuestionObj","inherits","FreeTextQuestionObj","_QuestionObj2","ProfessorAddMCQuestion","toQuestions","ProfessorAddFreeTextQuestion","ProfessorAddLecture","toLecture","ProfessorRoutes","components_TopMenuBar","components_SideMenuBar","content","BrowserRouter","Switch","Route","exact","path","flexGrow","APIStudentService","studentStore","updateAllCourses","getStudentQuestionsByCourseAPI","updateAllQuestions","ClassCard","link","store","apiStudentService","marginbottom","number","CardActions_default","pathname","LogoutButton","Header","LogoutButton_LogoutButton","AddCourseButton","font-size","StudentHome","course_ids","loadAllCourses","Number","LoggedinHeader","AddCourseButton_AddCourseButton","StudentClassCards","CourseEnrollmentForm","handleClick","e","enrollCourse","helperText","forceUpdate","StudentEnroll","Student_CourseEnrollmentForm","FRQ","postAnswer","Transition","Slide_default","assign","MCQ","answerchoices","sent","dialogue","indexOf","toString","questionId","handleCloseSubmit","answers","mcq","i","qstring","FormControl_default","RadioGroup_default","FormControlLabel_default","control","Radio_default","Dialog_default","TransitionComponent","keepMounted","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","QuestionPage","has_question","q","Questions_FRQ","Questions_MCQ","CheckQuestions","loadAllQuestions","StudentRoutes","ProfessorStore","find","x","observable","StudentStore","forEach","element","coursenum","Home","Login","url_add_on_1","url_add_on_2","end_sub","href","split","valueOf","substring","createMuiTheme","main","secondary","accent","type","typography","useNextVariants","App","profApiService","core_styles","index_module","configure","enforceActions","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ac1dfe2f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport { observer, inject } from 'mobx-react';\nimport logo from '../../assets/clikrlogo.png';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n});\n\n@inject('profStore')\n@observer\nclass SideMenuBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n    }\n\n    render() {\n        return ( \n            <Drawer\n                className={this.styles.drawer}\n                variant=\"permanent\"\n                classes={{\n                    paper: this.styles.drawerPaper,\n                }}\n                anchor=\"left\"\n            >\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"space-around\">\n                <img src = {logo} alt = \"logo\" width=\"50%\"></img>\n            </Grid>\n\n                <Divider />\n                <List>\n                    {this.profStore.courses.map(function (courseObj, index) {\n                        return (<ListItem button key={index} >\n                            <ListItemText primary={courseObj.title} />\n                        </ListItem>)\n                    })}\n                </List>\n            </Drawer>\n\n        );\n    }\n}\n\nexport default withStyles(styles)(SideMenuBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ToolbarGroup from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Link } from 'react-router-dom';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n});\n\nclass TopMenuBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    state = {\n      anchorEl: null,\n      goHome: false\n    };\n\n    handleMenu = event => {\n      this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n      this.setState({ anchorEl: null });\n    };\n\n    // force reload of page\n    handleHome = () => {\n        this.setState({\n            goHome: true\n        })\n    }\n    // reset state\n    handleReset = () => {\n        this.setState({\n            goHome: false\n        })\n    }\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        if (this.state.goHome) {\n            window.location.reload();\n            this.handleReset();\n        }\n        return (\n            <AppBar position=\"static\" color=\"white\" className={this.styles.appBar}>\n                <Toolbar>\n                    <Link to={'/professor'} marginLeft=\"0%\">\n                        <IconButton className={classes.homeButton} onClick={this.handleHome} color=\"primary\">\n                            <SvgIcon>\n                                <path fill=\"secondary\"\n                                d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\n                            </SvgIcon>\n                        </IconButton>\n                    </Link>\n                    <ToolbarGroup style={{\n                        float       : 'none',\n                        marginRight : 'auto'\n                    }}>\n                    </ToolbarGroup>\n                    <IconButton\n                         aria-haspopup=\"true\"\n                         onClick={this.handleMenu}\n                         color=\"primary\"\n                         float=\"right\"\n                    >\n                        <SvgIcon style={{\"width\":\"24px\", \"height\":\"24px\"}} viewBox=\"0 0 24 24\">\n                           <path color=\"secondary\"\n                           d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" />\n                        </SvgIcon>\n                    </IconButton>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={this.handleClose}\n                    >\n                        <MenuItem onClick={this.handleClose}>\n                            <Link to='/' style={{\"color\":\"black\", \"text-decoration\": \"none\"}}>\n                                 LOGOUT\n                            </Link>\n                        </MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n\n\n\n        );\n    }\n}\n\nexport default withStyles(styles)(TopMenuBar);\n","export const socketioURL = \"http://localhost:5000/\";\nexport const baseURL = socketioURL + \"api/v1/\";","import axios from 'axios';\nimport { baseURL } from '../constants/api'\n\naxios.defaults.withCredentials = true;\n\nexport function getProfDataAPI() {\n    return axios.get(baseURL + 'professor/data');\n}\n\nexport function getStudentCoursesAPI() {\n    return axios.get(baseURL + 'student/courses');\n}\n\nexport function hasStudentQuestions(course_id) {\n    return Promise.all(axios.get(baseURL + 'student/courses/' + course_id + '/questions'));\n}\n\nexport function getStudentQuestionsByCourseAPI(course_id) {\n    return axios.get(baseURL + 'student/courses/' + course_id + '/questions');\n}\n\nexport function postOpenQuestionAPI(question_id) {\n    return axios.post(baseURL + 'professor/questions/' + question_id, {\n        action: \"open\"\n    });\n}\n\nexport function postCloseQuestionAPI(question_id) {\n    return axios.post(baseURL + 'professor/questions/' + question_id, {\n        action: \"close\"\n    });\n}\n\n// course: CourseObj\nexport function postNewCourseAPI(course) {\n    return axios.post(baseURL + 'professor/courses', {\n        title: course.title\n    });\n}\n\n// lecture: LectureObj\nexport function postNewLectureAPI(lecture) {\n    return axios.post(baseURL + 'professor/courses/' + lecture.course_id + '/lectures', {\n        title: lecture.title,\n        description: lecture.description,\n        date: lecture.date,\n    });\n}\n\nexport function postEnrollStudentAPI(code) {\n    return axios.post(baseURL + 'student/courses', {\n        enroll_code: code\n    });\n}\n\nexport function postAnswerQuestionAPI(answer, question_id) {\n    return axios.post(baseURL + 'student/questions/' + question_id, {\n        answer: answer\n    });\n}\n\nexport function postNewQuestionAPI(question) {\n    return axios.post(baseURL + 'professor/lectures/' + question.lecture_id + '/questions', {\n        lecture_id: question.lecture_id,\n        question_type: question.question_type,\n        question_title: question.question_title,\n        question_text: question.question_text,\n        correct_answer: question.correct_answer,\n        creator_id: question.creator_id,\n        option1: question.option1,\n        option2: question.option2,\n        option3: question.option3,\n        option4: question.option4,\n        option5: question.option5,\n        number_of_options: question.number_of_options,\n        word_limit: question.word_limit\n    });\n}\n\n","import { getProfDataAPI, postNewCourseAPI, postNewQuestionAPI, postNewLectureAPI, postOpenQuestionAPI, postCloseQuestionAPI } from '../utils/api-facade';\n\nexport default class APIProfService {\n    constructor(professorStore) {\n        this.professorStore = professorStore;\n    }\n\n    loadData() {\n        return getProfDataAPI()\n            .then(res => {\n                this.professorStore.updateData(res.data)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    openQuestion(question_id) {\n        postOpenQuestionAPI(question_id)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    closeQuestion(question_id) {\n        postCloseQuestionAPI(question_id)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n    \n    addLecture(lecture) {\n        postNewLectureAPI(lecture)\n            .then(res => {\n                lecture.id = res.data.id\n                this.professorStore.addLecture(lecture)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    addCourse(course) {\n        postNewCourseAPI(course)\n            .then(res => {\n                course.id = res.data.id\n                this.professorStore.addCourse(course)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    addQuestion(question) {\n        // post new question\n        postNewQuestionAPI(question)\n            .then(res => {\n                question.id = res.data.id\n                this.professorStore.addQuestion(question)\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    _checkAuth(error) {\n        if (error.response !== undefined) {\n            if (error.response.status === 401)\n                window.location.replace('/login-prof')\n        }\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { observer } from 'mobx-react';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\n@observer\nclass AddStudentsModal extends React.Component {\n    state = {\n        open: false,\n    };\n\n    constructor(props) {\n        super(props)\n        this.joinCode = props.joinCode\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit = () => {\n        // Close modal \n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Button variant=\"text\" size=\"small\" color=\"secondary\" onClick={this.handleOpen}>Add Students</Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <Typography variant=\"h6\">\n                            {this.joinCode}\n                        </Typography>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Done</Button>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst AddStudentsModalWrapped = withStyles(styles)(AddStudentsModal);\n\nexport default AddStudentsModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { observer } from 'mobx-react';\nimport AddStudentsModalWrapped from '../AddStudentsModal';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass ListOfAllCoures extends React.Component {\n    state = {\n        referrerCourseId: null\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n    }\n\n    handleCourseClick = id => () => {\n        this.setState(() => ({\n            referrerCourseId: id\n        }))\n    }\n\n    render() {\n        // Handle routes\n        if (this.state.referrerCourseId !== null) {\n            return <Redirect to={'/professor/' + this.state.referrerCourseId + '/lectures'} push />\n        }\n        \n        return (\n            <List component=\"nav\">\n                {this.profStore.courses.map((courseObj, index) => {\n                    return (\n                        <ListItem divider button key={index} onClick={this.handleCourseClick(courseObj.id)} >\n                            <ListItemText primary={courseObj.title} />\n                            <ListItemSecondaryAction>\n                                <AddStudentsModalWrapped joinCode={courseObj.enroll_code}/>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    )\n                })}\n            </List>\n        );\n    }\n}\n\nexport default withStyles(styles)(ListOfAllCoures);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport ListOfAllCourses from '../ListOfAllCourses';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass AllCoursesFrame extends React.Component {\n    state = {\n        toNewCourse: false,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n\n    handleNewCourseClick = () => {\n        this.setState(() => ({\n            toNewCourse: true\n        }))\n    }\n\n    render() {\n        // Handle routes\n        if (this.state.toNewCourse === true) {\n            return <Redirect to='/professor/new' push />\n        }\n\n        return (\n            <div>\n                <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                    Here are your courses:\n                </Typography>\n                <Card className={this.styles.card}>\n                    <CardContent>\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            Courses\n                        </Typography>\n                        <ListOfAllCourses profStore={this.profStore} />\n                        <Button onClick={this.handleNewCourseClick} variant=\"outlined\" color=\"primary\">Add Class</Button>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AllCoursesFrame);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@observer\nclass TopCoursesFrame extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = props.apiProfService\n    }\n\n    render() {\n        return (\n            <div>\n                <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                    What are your top courses?\n                </Typography>\n                <Card className={this.styles.card}>\n                    <CardContent>\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            Your Top Courses\n                        </Typography>\n                        Todo\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(TopCoursesFrame);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\nimport AllCoursesFrame from '../../../components/AllCoursesFrame';\nimport Grid from '@material-ui/core/Grid';\nimport TopCoursesStatFrame from '../../../components/TopCoursesStatFrame';\n\nconst styles = theme => ({\n\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorHome extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    render() {\n        return (\n            <Grid container spacing={24}>\n                <Grid item xs={8}>\n                    <AllCoursesFrame profStore={this.profStore} apiProfService={this.apiProfService} />\n                </Grid>\n                <Grid item xs={4}>\n                    <TopCoursesStatFrame profStore={this.profStore} apiProfService={this.apiProfService} />\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorHome);\n","export default class CourseObj {\n    constructor(title, id, num, dept, description, term, joinCode, year ) {\n        this.title = title;\n        this.id = id;\n        this.num = num;\n        this.dept = dept;\n        this.description = description;\n        this.term = term;\n        this.joinCode = joinCode;\n        this.year = year;\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIProfService from '../../../services/APIProfService';\nimport { observer, inject } from 'mobx-react';\nimport CourseObj from '../../../models/CourseObj';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@observer\nclass ProfessorNewCourse extends React.Component {\n    state = {\n        toHome: false,\n        name: '',\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    handleChange = name => event => {\n            this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleSubmit = () => {\n        // Send course to API\n        this.apiProfService.addCourse(\n            new CourseObj(this.state.name)\n        )\n\n        // Close modal \n        this.setState({ toHome: true });\n    }\n\n    // TODO: Make the year and term and Dept a drop down\n    render() {\n        if (this.state.toHome === true) {\n            return <Redirect to='/professor' push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Course:\n                </Typography>\n                <form className={this.styles.container} noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Course Name\"\n                        className={this.styles.textField}\n                        value={this.state.name}\n                        onChange={this.handleChange('name')}\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorNewCourse);\n","\nexport default class LectureObj {\n    constructor(title, description, date, id, course_id) {\n        this.course_id = course_id;\n        this.date = date;\n        this.description = description;\n        this.id = id;\n        this.title = title;\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer, inject } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport CourseObj from '../../models/LectureObj';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@inject('profStore')\n@inject('apiService')\n@observer\nclass AllLecturesFrame extends React.Component {\n    state = {\n        toNewLecture: false,\n        referrerLectureIndex: -1,\n        parentCourse: new CourseObj()\n    }\n\n    componentDidMount() {\n        this.props.apiService.loadData().then(() => {\n            this.setState({\n                parentCourse: this.props.profStore.getCourseWithId(this.props.courseId)\n            })\n        })\n    }\n\n    handleNewLectureClick = () => {\n        this.setState(() => ({\n            toNewLecture: true\n        }))\n    }\n\n    handleLectureClick = index => {\n        console.log(\"lecture clicked\")\n        this.setState(() => ({\n            referrerLectureIndex: index\n        }))\n    }\n\n    render() {\n        // Handle routes\n        if (this.state.toNewLecture === true) {\n            return <Redirect to={'/professor/' + this.state.parentCourse.id + '/new'} push />\n        } else if (this.state.referrerLectureIndex !== -1) {\n            return <Redirect to={'/professor/' + this.state.referrerLectureIndex + '/questions'} push />\n        }\n\n        return (\n            <div>\n                <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                    Here are your lectures:\n                </Typography>\n                <Card className={this.props.classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            Lectures for {this.state.parentCourse.title}\n                        </Typography>\n                        {this.state.parentCourse.lectures === undefined ? '' : (\n                            <List component=\"nav\">\n                                {this.state.parentCourse.lectures.map((lectureObj, index) => {\n                                    return (\n                                        <ListItem divider button key={index} onClick={() => this.handleLectureClick(lectureObj.id)} >\n                                            <ListItemText primary={lectureObj.title + \" Lecture on \" + lectureObj.date} />\n                                        </ListItem>\n                                    )\n                                })}\n                            </List>\n                        )}\n                        <Button onClick={this.handleNewLectureClick} variant=\"outlined\" color=\"primary\">Add Lecture</Button>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nAllLecturesFrame.propTypes = {\n    courseId: PropTypes.string\n};\n\nexport default withStyles(styles)(AllLecturesFrame);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer, inject } from 'mobx-react';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@inject(\"profStore\") // props.profStore\n@inject(\"apiService\") // props.apiService\n@observer\nclass TopLecturesFrame extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    render() {\n        return (\n            <div>\n                <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                    What are your top lectures?\n                </Typography>\n                <Card className={this.styles.card}>\n                    <CardContent>\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            Your Top Lectures\n                        </Typography>\n                        Todo\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(TopLecturesFrame);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AllLecturesFrame from '../../../components/AllLecturesFrame';\nimport TopLecturesFrame from '../../../components/TopLecturesFrame';\n\nconst styles = theme => ({\n\n});\n\nclass ProfessorViewLectures extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    render() {\n        const { courseId } = this.props.match.params\n\n        return (\n            <Grid container spacing={24}>\n                <Grid item xs={8}>\n                    <AllLecturesFrame courseId={courseId} />\n                </Grid>\n                <Grid item xs={4}>\n                    <TopLecturesFrame />\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorViewLectures);\n","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { List, ChatBubbleOutline } from '@material-ui/icons';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n    vert: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n});\n\nclass AddQuestionModal extends React.Component {\n    state = {\n        open: false,\n        toNewMCQuestion: false,\n        toNewFreeTextQuestion: false,\n        lectureId: null\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleMC = () => {\n        // Close modal \n        this.setState({ open: false, toNewMCQuestion: true });\n    }\n\n    handleFreeText = () => {\n        // Close modal\n        this.setState({ open: false, toNewFreeTextQuestion: true});\n    }\n\n    render() {\n        const { classes } = this.props;\n        if (this.state.toNewMCQuestion === true) {\n            // Lecture Id\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-mc'} push />\n        } else if (this.state.toNewFreeTextQuestion === true) {\n            return <Redirect to={'/professor/' + this.props.lectureId + '/questions/new-free-text'} push />\n        }\n\n        return (\n            <div>\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleOpen}>Add Question</Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.paper}>\n                        <IconButton className={classes.button} aria-label=\"Delete\" onClick={this.handleMC}>\n                            <div className={classes.vert}>\n                                <List color=\"primary\" fontSize=\"large\" />\n                                <Typography>\n                                    Multiple Choice\n                                </Typography>\n                            </div>\n                        </IconButton>\n                        <IconButton className={classes.button} aria-label=\"Delete\" onClick={this.handleFreeText}>\n                            <div className={classes.vert}>\n                                <ChatBubbleOutline color=\"primary\" fontSize=\"large\" />\n                                <Typography>\n                                    Free Text\n                                </Typography>\n                            </div>\n                        </IconButton>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nAddQuestionModal.propTypes = {\n    lectureId: PropTypes.string\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst AddQuestionModalWrapped = withStyles(styles)(AddQuestionModal);\n\nexport default AddQuestionModalWrapped;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer, inject } from 'mobx-react';\nimport AddQuestionModalWrapped from '../AddQuestionModal';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n    },\n});\n\n@inject('profStore')\n@observer\nclass AllQuestionsFrame extends React.Component {\n    state = {\n        toNewQuestion: false,\n        referrerQuestionId: -1,\n    }\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    handleNewQuestionClick = () => {\n        this.setState(() => ({\n            toNewQuestion: true\n        }))\n    }\n\n    handleQuestionClick = id => () => {\n        this.setState(() => ({\n            referrerQuestionId: id\n        }))\n    }\n\n    render() {\n        // Handle routes\n        if (this.state.toNewQuestion === true) {\n            return <Redirect to='/professor/TODO' push />\n        }\n\n        return (\n            <div>\n                <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                    Here are your questions:\n                </Typography>\n                <Card className={this.styles.card}>\n                    <CardContent>\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            Questions for {this.props.parentLecture.title + \" Lecture\"}\n                        </Typography>\n                        <List component=\"nav\">\n                            {this.props.parentLecture.questions.map((questionObj, index) => {\n                                return (\n                                    <ListItem divider button key={index} onClick={this.handleQuestionClick(questionObj.id)} >\n                                        <ListItemText primary={questionObj.question_title} />\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                        <AddQuestionModalWrapped lectureId={this.props.parentLecture.id} />\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nAllQuestionsFrame.propTypes = {\n    parentLecture: PropTypes.object\n};\n\nexport default withStyles(styles)(AllQuestionsFrame);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { observer, inject } from 'mobx-react';\nimport { socketioURL } from '../../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport Typography from '@material-ui/core/Typography';\nimport AllQuestionsFrame from '../../../components/AllQuestionsFrame';\nconst socket = socketIOClient(socketioURL)\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 7,\n        backgroundColor: '#3C4252',\n    },\n    grid: {\n        paddingTop: theme.spacing.unit * 2,\n    },\n    text: {\n        color: '#ffffff'\n    },\n    textQ: {\n        color: '#ffffff',\n        paddingTop: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 10,\n        paddingLeft: theme.spacing.unit * 10,\n        paddingBottom: theme.spacing.unit * 2\n    },\n    startLectureBtn: {\n        float: \"right\"\n    }\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorViewQuestions extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n\n        this.state = {\n            currentQuestionIndex: 0,\n            currentQuestionId: 0,\n            btnStatus: 0,\n            parentLecture: { questions: [] }\n        }\n    }\n\n    componentDidMount() {\n        // Get the lecture\n        this.props.apiService.loadData().then(() => {\n            const { lectureId } = this.props.match.params\n            this.setState({\n                parentLecture: this.props.profStore.getLectureWithId(lectureId)\n            })\n            this.setState({\n                currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex)\n            })\n        })\n\n        socket.on('new results', (msg) => {\n            var data = JSON.stringify(msg);\n            console.log(data)\n        })\n\n        socket.on('server message', (msg) => {\n            console.log('Received message:' + msg);\n        });\n    }\n\n    handleBtnClick = () => {\n        switch (this.state.btnStatus) {\n            case 0:\n                // Handle the \"Open Question\"\n                this.props.apiService.openQuestion(this.state.currentQuestionId)\n                socket.emit('subscribe professor', this.state.currentQuestionId)\n                this.setState({ btnStatus: 1 })\n                break;\n\n            case 1:\n                // Handle the \"Close Question\"\n                this.props.apiService.closeQuestion(this.state.currentQuestionId)\n                // Check if this is last question\n                if (this.state.currentQuestionIndex + 1 >= this.state.parentLecture.questions.length)\n                    this.setState({ btnStatus: 3 })\n                else\n                    this.setState({ btnStatus: 2 })\n                break;\n\n            case 2:\n                // Handle the \"Open Next Question\"\n                this.props.apiService.openQuestion(this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1))\n                socket.emit('subscribe professor', this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1))\n\n                // Update the index to the next question\n                this.setState({\n                    btnStatus: 1,\n                    currentQuestionIndex: this.state.currentQuestionIndex + 1,\n                    currentQuestionId: this.convertQuestionIndexToId(this.state.currentQuestionIndex + 1)\n                })\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper className={this.styles.root} elevation={1}>\n                    <Typography variant=\"h6\" component=\"h5\" className={this.styles.text}>\n                        {this.state.parentLecture.title} Lecture on {this.state.parentLecture.date}\n                    </Typography>\n                    <Typography variant=\"h4\" component=\"h2\" className={this.styles.textQ} align=\"center\">\n                        Q{this.state.currentQuestionIndex + 1}: {this.props.profStore.getQuestionWithId(this.state.parentLecture, this.state.currentQuestionId).question_text}\n                    </Typography>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleBtnClick()} className={this.styles.startLectureBtn} disabled={this.state.btnStatus === 3}>\n                        {this.state.btnStatus === 0 ? \"Open Question\" :\n                            this.state.btnStatus === 1 ? \"Close Question\" : \n                            this.state.btnStatus === 2 ? \"Open Next Question\" : \n                            \"No More Questions\"}\n                    </Button>\n                </Paper>\n                <Grid container spacing={24} className={this.styles.grid}>\n                    <Grid item xs={8}>\n                        <AllQuestionsFrame parentLecture={this.state.parentLecture} />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n    convertQuestionIndexToId(index) {\n        if (index < this.state.parentLecture.questions.length)\n            return this.state.parentLecture.questions[index].id\n        else\n            return 0\n    }\n}\n\nexport default withStyles(styles)(ProfessorViewQuestions);","export class QuestionObj {\n    constructor(id, lecture_id, question_type, question_title, question_text, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at) {\n        \n        this.id = id;\n        this.lecture_id = lecture_id;\n        this.question_type = question_type;\n        this.question_title = question_title;\n        this.question_text = question_text;\n        this.correct_answer = correct_answer;\n        this.creator_id = creator_id;\n        this.is_open = is_open;\n        this.opened_at = opened_at;\n        this.closed_at = closed_at;\n        this.created_at = created_at;\n        this.modified_at = modified_at;\n    }\n\n}\n\nexport class MultipleChoiceQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_text, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, option1, option2, option3, option4, option5, number_of_options) {\n        \n        super(id, lecture_id, question_type, question_title, question_text, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at);\n        \n        this.option1 = option1;\n        this.option2 = option2;\n        this.option3 = option3;\n        this.option4 = option4;\n        this.option5 = option5;\n        this.number_of_options = number_of_options;\n    }\n}\n\nexport class FreeTextQuestionObj extends QuestionObj {\n\n    constructor(id, lecture_id, question_type, question_title, question_text, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at, word_limit) {\n\n        super(id, lecture_id, question_type, question_title, question_text, correct_answer, creator_id, is_open, opened_at, closed_at, created_at, modified_at,);\n\n        this.word_limit = word_limit;\n    }\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { MultipleChoiceQuestionObj } from '../../../models/QuestionObj';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddMCQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        text: '',\n        correct_answer: '',\n        option1: '',\n        option2: '',\n        option3: '',\n        option4: '',\n        option5: '',\n        number_of_options: ''\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleSubmit = () => {\n        const { lectureId } = this.props.match.params\n\n        // Send course to API\n        this.props.apiService.addQuestion(\n            new MultipleChoiceQuestionObj(null, lectureId, \"multiple_choice\", this.state.title, this.state.text, this.state.correct_answer, null, null, null, null, null, null, this.state.option1, this.state.option2, this.state.option3, this.state.option4, this.state.option5, this.state.number_of_options)\n        )\n\n        this.setState({ toQuestions: true });\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n\n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Question:\n                </Typography>\n                <form className={this.styles.container} noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Title\"\n                        className={this.styles.textField}\n                        value={this.state.title}\n                        onChange={this.handleChange('title')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Text\"\n                        className={this.styles.textField}\n                        value={this.state.text}\n                        onChange={this.handleChange('text')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Correct Answer\"\n                        className={this.styles.textField}\n                        value={this.state.correct_answer}\n                        onChange={this.handleChange('correct_answer')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Option 1\"\n                        className={this.styles.textField}\n                        value={this.state.option1}\n                        onChange={this.handleChange('option1')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Option 2\"\n                        className={this.styles.textField}\n                        value={this.state.option2}\n                        onChange={this.handleChange('option2')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Option 3\"\n                        className={this.styles.textField}\n                        value={this.state.option3}\n                        onChange={this.handleChange('option3')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Option 4\"\n                        className={this.styles.textField}\n                        value={this.state.option4}\n                        onChange={this.handleChange('option4')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Option 5\"\n                        className={this.styles.textField}\n                        value={this.state.option5}\n                        onChange={this.handleChange('option5')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question # of Options\"\n                        className={this.styles.textField}\n                        value={this.state.number_of_options}\n                        onChange={this.handleChange('number_of_options')}\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddMCQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { observer, inject } from 'mobx-react';\nimport { FreeTextQuestionObj } from '../../../models/QuestionObj';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"profStore\")\n@inject(\"apiService\")\n@observer\nclass ProfessorAddFreeTextQuestion extends React.Component {\n    state = {\n        toQuestions: false,\n        title: '',\n        text: '',\n        correct_answer: '',\n        word_limit: ''\n    };\n\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleSubmit = () => {\n        const { lectureId } = this.props.match.params\n\n        // Send course to API\n        this.props.apiService.addQuestion(\n            new FreeTextQuestionObj(null, lectureId, \"free_text\", this.state.title, this.state.text, this.state.correct_answer, null, null, null, null, null, null, this.state.word_limit)\n        )\n\n        this.setState({ toQuestions: true });\n    }\n\n    render() {\n        const { lectureId } = this.props.match.params\n\n        if (this.state.toQuestions === true) {\n            return <Redirect to={'/professor/' + lectureId + '/questions'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Question:\n                </Typography>\n                <form className={this.styles.container} noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Title\"\n                        className={this.styles.textField}\n                        value={this.state.title}\n                        onChange={this.handleChange('title')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Text\"\n                        className={this.styles.textField}\n                        value={this.state.text}\n                        onChange={this.handleChange('text')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Question Correct Answer\"\n                        className={this.styles.textField}\n                        value={this.state.correct_answer}\n                        onChange={this.handleChange('correct_answer')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Answer Word Limit\"\n                        className={this.styles.textField}\n                        value={this.state.word_limit}\n                        onChange={this.handleChange('word_limit')}\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddFreeTextQuestion);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { Redirect } from \"react-router-dom\";\nimport { inject } from 'mobx-react';\nimport LectureObj from '../../../models/LectureObj';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 400,\n    },\n});\n\n@inject(\"apiService\")\nclass ProfessorAddLecture extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n\n        const { courseId } = this.props.match.params\n        this.state = {\n            toLecture: false,\n            title: '',\n            date: '',\n            description: '',\n            courseId: courseId\n        }\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleSubmit = () => {\n        // Send course to API\n        this.props.apiService.addLecture(\n            new LectureObj(this.state.title, this.state.description, this.state.date, null, this.state.courseId)\n        )\n\n        this.setState({ toLecture: true });\n    }\n\n    render() {\n        if (this.state.toLecture === true) {\n            return <Redirect to={'/professor/' + this.state.courseId + '/lectures'} push />\n        }\n\n        return (\n            <div className={this.styles.paper}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Add New Lecture:\n                </Typography>\n                <form className={this.styles.container} noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Lecture Title\"\n                        className={this.styles.textField}\n                        value={this.state.title}\n                        onChange={this.handleChange('title')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Lecture Description\"\n                        className={this.styles.textField}\n                        value={this.state.description}\n                        onChange={this.handleChange('description')}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Lecture Date\"\n                        className={this.styles.textField}\n                        value={this.state.date}\n                        onChange={this.handleChange('date')}\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorAddLecture);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { inject } from 'mobx-react';\nimport SideMenuBar from '../../components/SideMenuBar';\nimport TopMenuBar from '../../components/TopMenuBar';\nimport APIProfService from '../../services/APIProfService';\nimport ProfessorHome from './Home';\nimport ProfessorNewCourse from './NewCourse';\nimport ProfessorViewLectures from './ViewLectures';\nimport ProfessorViewQuestions from './ViewQuestions';\nimport ProfessorAddMCQuestion from './AddMCQuestion';\nimport ProfessorAddFreeTextQuestion from './AddFreeTextQuestion';\nimport ProfessorAddLecture from './AddLecture';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    content: {\n        marginLeft: drawerWidth,\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\n@inject('profStore')\nclass ProfessorRoutes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.profStore = props.profStore\n        this.apiProfService = new APIProfService(this.profStore)\n    }\n\n    componentDidMount() {\n        this.apiProfService.loadData()\n    }\n\n    render() {\n        return (\n            <div className={this.styles.root}>\n                <TopMenuBar />\n                <SideMenuBar profStore={this.props.profStore} />\n                <main className={this.styles.content}>\n                    <Router>\n                        <Switch>\n                            <Route exact path='/professor' component={ProfessorHome} />\n                            <Route path='/professor/new' component={ProfessorNewCourse} />\n                            <Route path='/professor/:courseId/lectures' component={ProfessorViewLectures} />\n                            <Route path='/professor/:courseId/new' component={ProfessorAddLecture} />\n                            <Route exact path='/professor/:lectureId/questions' component={ProfessorViewQuestions} />\n                            <Route path='/professor/:lectureId/questions/new-mc' component={ProfessorAddMCQuestion} />\n                            <Route path='/professor/:lectureId/questions/new-free-text' component={ProfessorAddFreeTextQuestion} />\n                        </Switch>\n                    </Router>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProfessorRoutes);\n","import { getStudentCoursesAPI, postEnrollStudentAPI, getStudentQuestionsByCourseAPI, postAnswerQuestionAPI } from '../utils/api-facade';\n\nexport default class APIStudentService {\n    constructor(studentStore) {\n        this.studentStore = studentStore;\n    }\n\n    loadAllCourses() {\n        getStudentCoursesAPI()\n            .then(res => {\n                this.studentStore.updateAllCourses(res.data)\n\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n        \n    }\n\n    loadAllQuestions(course_id) {\n        getStudentQuestionsByCourseAPI(course_id)\n            .then(res => {\n                console.log(res.data)\n                this.studentStore.updateAllQuestions(res.data)\n\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n        \n    }\n\n    async postAnswer(answer, question_id) {\n        postAnswerQuestionAPI(answer, question_id)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    async enrollCourse(code) {\n        postEnrollStudentAPI(code)\n            .then(res => {\n                return res.data\n            })\n            .catch(error => {\n                console.log(error);\n                this._checkAuth(error);\n            })\n    }\n\n    _checkAuth(error) {\n        if (error.response !== undefined) {\n            if (error.response.status === 401)\n                window.location.replace('/login-student')\n        }\n    }\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom'\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../services/APIStudentService';\nimport PropTypes from 'prop-types';\n\n@inject(\"store\")\n@observer\nclass ClassCard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        \n        \n    }\n    state = {\n        link:'student/questions',\n        course_id: ''\n    }\n\n    \n    render() {\n        return (\n            <Card style={{ width: '98%', margin: '2%', background: \"#E76F51\" }}>\n                <CardContent>\n                    <Typography variant=\"h4\">\n                        {this.props.name}\n                    </Typography>\n                    <Typography marginbottom=\"12\" color=\"textSecondary\">\n                        {this.props.number}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Link to={{\n                        pathname: '/student/questions',\n                        state : {\n                            course_id: this.props.id,\n                        }\n                    }} style={{ \"color\": \"black\", \"text-decoration\": \"none\" }}>\n                        <Button size=\"small\" >\n                            Join \n                        </Button>\n                    </Link>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nClassCard.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string\n}\n\nexport default ClassCard;","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nexport default class LogoutButton extends React.Component {\n\n    render() {\n        return (\n            <Link to='/' style={{\"color\":\"black\", \"text-decoration\": \"none\"}}>\n                <Button>logout</Button>\n            </Link>\n           \n        );\n    }\n}\n\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../../../assets/clikrlogo.png'\nimport LogoutButton from '../Buttons/LogoutButton';\n\n\nclass Header extends React.Component {\n    \n    render () {\n        return(\n            <div>\n            <AppBar position=\"static\" color='primary'>\n                <Toolbar>\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems='center'>\n                        <img src = {logo} alt = \"logo\" width=\"100\"></img>\n                        <LogoutButton />\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            </div>\n        );\n    }\n}\nexport default Header;","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\n\nexport default class AddCourseButton extends React.Component {\n  state = {\n    link: '/student/enroll'\n  }; \n\n  render() {\n    return (\n      <Link to={this.state.link} style={{color:\"white\", \"text-decoration\": \"none\"}}>\n        <Button variant=\"fab\" color=\"secondary\" aria-label=\"Add\" style={{\"font-size\":\"xx-large\"}}>+</Button>\n      </Link>\n      \n    )\n  }\n}","import React, { Component } from 'react';\nimport ClassCard from '../../../components/Student/StudentClassCards';\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AddCourseButton from '../../../components/Student/Buttons/AddCourseButton';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../services/APIStudentService';\n\n@inject(\"store\")\n@observer\nclass StudentHome extends Component {\n    constructor(props) {\n        super(props)\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n        \n    }\n    state = {\n        course_ids: []\n    }\n    componentDidMount() {\n        this.apiStudentService.loadAllCourses()\n    } \n    render() {\n        return (\n           \n            <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header />\n                <Grid item>\n                    <Paper style={{ paddingTop: \"1%\", paddingBottom: \"1%\" }}>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\" style={{ paddingLeft: \"1%\", paddingRight: \"2%\" }}>\n                            <Typography variant=\"h2\" color=\"secondary\"> My Classes </Typography>\n                            <AddCourseButton />      \n                        </Grid>\n                        <Grid container justify=\"center\" alignItems=\"flex-end\" style={{ paddingTop: \"1%\" }}>\n                            { this.store.courses.map(function (courseObj, index) {\n                                return (\n                                    <ClassCard key={index} name={courseObj.title} number={courseObj.num} id={courseObj.id} />\n                                );\n                            })}\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        )\n    }\n}\nexport default StudentHome;","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport APIStudentService from '../../../services/APIStudentService';\n\nclass CourseEnrollmentForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.apiStudentService = new APIStudentService()\n    }\n\n    state = {\n        code: \"\"\n    }\n    handleClick = (e) => {\n        this.apiStudentService.enrollCourse(this.state.code)\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n\n        return (\n            <Grid item>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n\n                        id=\"full-width\"\n                        style={{ width: \"98%\", paddingLeft: \"1%\" }}\n                        helperText=\"Enter Course Enrollment Code\"\n                        name='code'\n                        value={this.state.code}\n                        onChange={e => this.handleChange(e)}\n                        margin=\"normal\"\n                    />\n                </form>\n                <Grid container justify=\"flex-end\" style={{ \"paddingRight\": \"1%\" }}>\n                    <Button onClick={this.handleClick} variant=\"contained\" color=\"secondary\">\n                        <Link to='/student' onClick={this.forceUpdate} style={{ \"color\": \"white\", \"text-decoration\": \"none\" }}>enroll</Link>\n                    </Button>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nexport default CourseEnrollmentForm;","import React, { Component } from 'react';\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CourseEnrollmentForm from '../../../components/Student/CourseEnrollmentForm';\n\nclass StudentEnroll extends Component {\n\n    render() {\n        return (\n            <Grid container direction='column' justify=\"center\" spacing={Number(\"16\")}>\n                <Header />\n                <Grid item>\n                    <Paper style={{ paddingTop: \"1%\", paddingBottom: \"1%\" }}>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\" style={{ paddingLeft: \"1%\", paddingRight: \"2%\" }}>\n                            <Typography variant=\"h2\" color=\"secondary\"> Join Courses </Typography>\n                        </Grid>\n                        <CourseEnrollmentForm />\n                    </Paper>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nexport default StudentEnroll;","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { observer, inject } from 'mobx-react';\nimport APIStudentService from '../../../../services/APIStudentService'\n\n\n@inject(\"store\")\n@observer    \nclass FRQ extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    state = {\n        answer: \"\",\n        disabled: false\n    }\n    handleClick = (e) => {\n        this.apiStudentService.postAnswer(this.state.answer, this.props.question.question.id)\n        this.setState({\n            disabled: true\n        })\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n      }\n\n\n    render() {\n\n        return (\n            <Grid item>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"full-width\"\n                        style={{width:\"98%\", paddingLeft:\"1%\"}}\n                        helperText=\"Enter Response\"\n                        name = 'answer'\n                        value={this.state.answer}\n                        onChange={e => this.handleChange(e)}\n                        margin=\"normal\"  \n                    />\n                </form>\n                <Grid container justify=\"flex-end\" style={{\"paddingRight\":\"1%\"}}>\n                <Button onClick={this.handleClick} disabled={this.state.disabled} variant=\"contained\" color=\"secondary\">\n                   submit\n                </Button>\n            </Grid>\n            </Grid>\n            \n        );\n    }\n}\nexport default FRQ;","\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport APIStudentService from '../../../../services/APIStudentService'\nimport { observer, inject } from 'mobx-react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\n// for sliding up motion\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n@inject(\"store\")\n@observer    \nclass MCQ extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n    componentDidMount () {\n        \n        var answers = []\n        var mcq = this.store.getQuestionWithId(this.props.questionId);\n\n        for (var i = 1; i <= mcq['number_of_options']; i++) {\n            var qstring = mcq[\"option\" + i.toString()];\n            answers.push(qstring)\n        }\n\n        this.setState({\n            answerchoices: answers\n        })\n    }\n\n    state = {\n        question:\"What is the meaning of life?\",\n        answerchoices: [],\n        answer: \"\",\n        sent: \"\",\n        dialogue: false, \n        disabled: false\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            answer: e.target.value\n        });\n        if (e.target.value === this.state.sent) {\n            this.setState({\n                disabled: true\n            })\n        }\n        else{\n            this.setState({\n                disabled: false\n            }) \n        }\n    };\n\n    handleSubmit = () => {\n        this.apiStudentService.postAnswer((this.state.answerchoices.indexOf(this.state.answer) + 1).toString(), this.props.questionId)\n        this.setState({\n            sent: this.state.answer,\n            disabled: true\n        })\n    };\n\n    handleClick = () => {\n        if (this.state.sent === \"\"){\n            this.handleSubmit()\n        }\n        else {\n            this.setState({\n                dialogue: true\n            });\n        }\n    };\n\n    // close dialogue box\n    handleClose = () => {\n        this.setState({ dialogue: false });\n      };\n\n    // close dialogue box and resubmit\n    handleCloseSubmit = () => {\n        this.setState({ dialogue: false });\n        this.handleSubmit()\n      };\n   \n\n    render() {\n        return (\n            <Grid item>\n                <Grid container direction=\"column\" justify=\"center\" style={{padding:\"1%\"}}>\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup\n                            name=\"answers\"\n                            value={this.state.answer}\n                            onChange={this.handleChange}\n                        >\n                        {this.state.answerchoices.map(a => (\n                            <FormControlLabel key={a} value={a} control={<Radio />} label={a}/>\n                        ))}\n                        </RadioGroup>\n                    </FormControl>\n                    <Grid container justify=\"flex-end\" style={{\"paddingRight\":\"1%\"}}>\n                        <Button onClick={this.handleClick} disabled={this.state.disabled} value={this.state.answer} variant=\"contained\" color=\"secondary\">\n                            submit\n                        </Button>\n                        <Dialog\n                            open={this.state.dialogue}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={this.handleClose}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                            >\n                            <DialogTitle id=\"alert-dialog-slide-title\">\n                                {\"Answer changed- \"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-slide-description\">\n                                \"Are you sure you want to change your answer from {this.state.sent} to {this.state.answer}?\"\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                no\n                                </Button>\n                                <Button onClick={this.handleCloseSubmit} color=\"primary\">\n                                yes\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nexport default MCQ;","import React, { Component } from 'react';\n//import './style.css'; // Not our preferred way of importing style\nimport Header from '../../../components/Student/LoggedinHeader';\nimport Paper from '@material-ui/core/Paper';\nimport { socketioURL } from '../../../constants/api';\nimport socketIOClient from 'socket.io-client'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { observer, inject } from 'mobx-react';\nimport FRQ from '../../../components/Student/Questions/FRQ';\nimport MCQ from '../../../components/Student/Questions/MCQ';\n\n@inject(\"store\")\n@observer\nclass QuestionPage extends Component {\n    state = {\n        has_question: false,\n    }\n\n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    componentDidMount() {\n        const { course_id } = this.props.location.state\n        const socket = socketIOClient(socketioURL)\n\n        // this emits an event to the socket (your server) with an argument of 'red'\n        // you can make the argument any color you would like, or any kind of data you want to send.\n\n        socket.emit('subscribe student', course_id)\n        // socket.emit('change color', 'red', 'yellow') | you can have multiple arguments\n\n        // socket.on is another method that checks for incoming events from the server\n        // This method is looking for the event 'change color'\n        // socket.on takes a callback function for the first argument\n        socket.on('question opened', (data) => {\n            this.store.updateAllQuestions([data.question])\n            this.setState({\n                has_question: true\n            })\n        })\n\n        socket.on('question closed', (msg) => {\n            // var data = JSON.stringify(msg);\n            // setting the color of our button\n            this.setState({\n                has_question: false\n            })\n        })\n\n        socket.on('all open questions', (data) => {\n            console.log(data.questions)\n            if (data.questions.length > 0) {\n                this.store.updateAllQuestions(data.questions)\n                this.setState({\n                    has_question: true\n                })\n            }\n        })\n\n        socket.on('server message', (msg) => {\n            console.log('Received message:' + msg);\n        });\n    }\n\n    render() {\n        return (\n            <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header />\n                {this.state.has_question === false ? (\n                    <Paper style={{ paddingTop: \"1%\", paddingBottom: \"1%\" }}>\n                        <Typography variant=\"h5\" color=\"secondary\" style={{ width: \"98%\", paddingLeft: \"1%\", paddingRight: \"1%\" }}> There are no questions for this course at the moment... </Typography>\n                    </Paper>\n                ) : (\n                        this.store.questions.map(q => {\n                            if (q.question_type === 'free_text') {\n                                return (\n                                    <Grid item>\n                                        <Paper style={{ paddingTop: \"1%\", paddingBottom: \"1%\" }}>\n                                            <Typography variant=\"h5\" color=\"secondary\" style={{ width: \"98%\", paddingLeft: \"1%\", paddingRight: \"1%\" }}> {q.question_text} </Typography>\n                                            <FRQ question={{ question: q }} />\n                                        </Paper>\n                                    </Grid>\n\n                                )\n                            }\n                            else {\n                                return (\n                                    <Grid item>\n                                        <Paper style={{ paddingTop: \"1%\", paddingBottom: \"1%\" }}>\n                                            <Typography variant=\"h5\" color=\"secondary\" style={{ width: \"98%\", paddingLeft: \"1%\", paddingRight: \"1%\" }}> {q.question_text} </Typography>\n                                            <MCQ questionId={q.id} />\n                                        </Paper>\n                                    </Grid>\n                                )\n                            }\n\n                        })\n                    )}\n\n            </Grid>\n        )\n\n    }\n}\nexport default QuestionPage;","import React, { Component } from 'react';\n//import './style.css'; // Not our preferred way of importing style\nimport Header from '../../../components/Student/LoggedinHeader';  \nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport APIStudentService from '../../../services/APIStudentService';\nimport { observer, inject } from 'mobx-react';\nimport { Link } from 'react-router-dom'\n\n@inject(\"store\")\n@observer\nclass CheckQuestions extends Component {\n    constructor(props) {\n        super(props)\n        this.store = this.props.store\n        this.apiStudentService = new APIStudentService(this.store)        \n    }\n\n    componentDidMount() {\n        const { course_id } = this.props.location.state\n        this.apiStudentService.loadAllQuestions(course_id)\n        this.setState({\n            course_id: this.props.location.state\n        })\n    }\n    state = {\n        course_id: \"\"\n    }\n\n    render() {\n        if (this.store.questions['length'] !== 0) {\n            return (\n             <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header/>\n                \n                <Grid container direction='column' justify='center'>\n                    <Paper style={{padding:\"2%\"}}>\n                    <Button size=\"large\" variant=\"contained\" color=\"secondary\" width=\"100%\">\n                        <Link to={{\n                            pathname: '/student/questions',\n                            state : {\n                                course_id: this.state.course_id\n                            }\n                        }} style={{ \"color\": \"white\", \"text-decoration\": \"none\" }}> Open Questions </Link>\n\n                    </Button>\n                    </Paper>\n                </Grid>\n            </Grid>\n            )\n        } \n        else {\n            return (\n             <Grid container direction='column' spacing={Number(\"16\")}>\n                <Header/>\n                {}\n\n                <Grid item>\n                    <Paper style={{paddingTop:\"1%\", paddingBottom:\"1%\"}}>\n                        <Typography variant=\"h5\" color=\"secondary\" style={{width:\"98%\", paddingLeft:\"1%\", paddingRight:\"1%\"}}> There are no questions for this course at the moment... </Typography> \n                    </Paper>\n                </Grid>\n            </Grid>\n            )\n\n        }\n    }\n}\nexport default CheckQuestions;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { inject } from 'mobx-react';\nimport APIStudentService from '../../services/APIStudentService';\nimport StudentHome from './StudentHome';\nimport StudentEnroll from './StudentEnrollment';\nimport QuestionPage from './StudentQuestionPage';\nimport CheckQuestions from './CheckQuestions';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    content: {\n        marginLeft: drawerWidth,\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\n@inject('store')\nclass StudentRoutes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.styles = props.classes\n        this.store = props.store\n        this.apiStudentService = new APIStudentService(this.store)\n    }\n\n    componentDidMount() {\n        this.apiStudentService.loadAllCourses()\n    }\n\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        <Route exact path='/student' component={StudentHome} />\n                        <Route exact path='/student/enroll' component={StudentEnroll} />\n                        <Route path='/student/checkquestions' component={CheckQuestions} />\n                        <Route path='/student/questions' component={QuestionPage}/>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StudentRoutes);","import { observable, action } from \"mobx\";\n\nexport default class ProfessorStore {\n    @observable\n    courses = [];\n\n    getCourseWithId(course_id) {\n        return this.courses.find(x => x.id === course_id)\n    }\n\n    getLectureWithId(lecture_id) {\n        const lectures = this.courses.find(course => course.lectures.find(lecture => lecture.id === lecture_id)).lectures\n        return lectures.find(lecture => lecture.id === lecture_id)\n    }\n\n    getQuestionWithId(lecture, question_id) {\n        if (lecture.questions === undefined)\n            return { questions: [] };\n\n        if (lecture.questions.find(x => x.id === question_id) === undefined)\n            return { questions: [] };\n\n        return lecture.questions.find(x => x.id === question_id)\n    }\n\n    @action\n    updateData(data) {\n        this.courses = data;\n    }\n\n    @action\n    addCourse(course) {\n        this.courses.push(course);\n    }\n\n    @action\n    addLecture(lecture) {\n        this.courses.find(x => x.id === lecture.course_id).lectures.push(lecture)\n    }\n\n    @action\n    addQuestion(question) {\n        this.courses.find(course => course.lectures.find(lecture => lecture.id === question.lecture_id)).lectures\n            .find(lecture => lecture.id === question.lecture_id).questions.push(question);\n    }\n}","import { observable, action } from \"mobx\";\nimport CourseObj from '../models/CourseObj';\nimport { MultipleChoiceQuestionObj } from \"../models/QuestionObj\";\nimport { FreeTextQuestionObj } from \"../models/QuestionObj\";\n\nexport default class StudentStore {\n  @observable\n  courses = []; // CourseObj[]\n\n  @observable\n  questions = []; // QuestionObj[]\n\n\n\n  @action\n  updateAllCourses(courses) {\n    this.courses = []\n\n    courses.forEach(element => {\n      // id: any, title: any, num: any, dept: any, description: any, term: any, joinCode: any, year: any\n      this.courses.push(new CourseObj(element.title, element.id, element.coursenum,\n        element.dept, element.description, element.term, element.enroll_code, element.year))\n    })\n  }\n\n  getQuestionWithId(question_id) {\n    return this.questions.find(x => x.id === question_id);\n  }\n\n  @action\n  updateAllQuestions(questions) {\n      this.questions = []\n\n      questions.forEach(element => {\n        if (element.question_type === 'multiple_choice') {\n          this.questions.push(new MultipleChoiceQuestionObj(element.id, element.lecture_id,\n            element.question_type, element.question_title, element.question_text,\n            element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n            element.closed_at, element.created_at, element.modified_at, element.option1, \n            element.option2, element.option3, element.option4, element.option5, element.number_of_options))\n        }\n        else {\n          this.questions.push(new FreeTextQuestionObj(element.id, element.lecture_id,\n            element.question_type, element.question_title, element.question_text,\n            element.correct_answer, element.creator_id, element.is_open, element.opened_at,\n            element.closed_at, element.created_at, element.modified_at, element.word_limit))\n        }\n          \n      });\n  }\n  \n}","import React, { Component } from 'react';\nimport './style.css'; // Not our preferred way of importing style\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        Hello\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { baseURL } from '../../constants/api';\n\nclass Login extends Component {\n    componentDidMount() {\n        var url_add_on_1 = 'student/login?service=';\n        var url_add_on_2 = '/student';\n        var end_sub = 14;\n        if (window.location.href.split('login-')[1].valueOf() === 'prof'.valueOf()) {\n            url_add_on_1 = 'professor/login?service=';\n            url_add_on_2 = '/professor';\n            end_sub = 11;\n        }\n\n        window.location.replace(baseURL + url_add_on_1 + window.location.href.substring(0, window.location.href.length - end_sub) + url_add_on_2);\n    }\n\n    render() {\n        return (\n            <div>\n                Logging In\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ProfessorRoutes from './Professor'\nimport StudentRoutes from './Student'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Provider } from 'mobx-react';\nimport ProfessorStore from './../stores/ProfessorStore';\nimport StudentStore from './../stores/StudentStore';\nimport APIProfService from './../services/APIProfService';\nimport Home from './Home';\nimport Login from './Login'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#E9C46A',\n        },\n        secondary: {\n            main: '#264653',\n        },\n        accent: {\n            main: '#E76F51',\n        },\n        type: 'light'\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nclass App extends Component {\n    professorStore = new ProfessorStore()\n    profApiService = new APIProfService(this.professorStore)\n\n    studentStore = new StudentStore()\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router>\n                    <div>\n                        <Route exact path='/' component={Home} />\n                        <Route exact path='/login-(prof|student)' component={Login} />\n                        <Provider profStore={this.professorStore} apiService={this.profApiService}>\n                            <Route path=\"/professor\" component={ProfessorRoutes} />\n                        </Provider>\n                        <Provider store={this.studentStore}>\n                            <Route path=\"/student\" component={StudentRoutes} />\n                        </Provider>\n                    </div>\n                </Router>\n            </MuiThemeProvider>\n        );\n    }\n}\n\n// <Route component={NotFound} />\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './config/serviceWorker';\nimport App from './routes/app';\nimport { configure } from 'mobx';\n\n// enable MobX strict mode\nconfigure({ enforceActions: \"observed\" });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/clikrlogo.0c2368b5.png\";"],"sourceRoot":""}